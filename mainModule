
#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗапуститьИтерационнуюОбработкуДанных() Экспорт
	
	ОписаниеОшибки = "";
	Серия = "C7F8";
	Если Не слкМенеджерЗащиты.ПроверитьЛицензиюСеанса(Серия, ОписаниеОшибки) Тогда
		Возврат;
	КонецЕсли;
	
	СоздатьПустыеТранспортныеОперации();
	СоздатьПустыеДокументыЗавершенияПроизводства();
	//---> MSK/Osipov.A 30.08.2018 15:46:07 Задача ERP2-36
	ПогаситьВозвратныеВСД();
	//<--- MSK/Osipov.A 30.08.2018 15:46:07 Задача ERP2-36
	
	_ИтерационнаяОбработкаДанных = РегламентныеЗадания.НайтиПредопределенное(Метаданные.РегламентныеЗадания._ИтерационнаяОбработкаДанных);
	Если _ИтерационнаяОбработкаДанных.Использование Тогда
		Возврат;
	КонецЕсли;
	
	_ИтерационнаяОбработкаДанных.Использование = Истина;
	_ИтерационнаяОбработкаДанных.Записать();
	
КонецПроцедуры

Процедура ВыполнитьИтерациюОбработкаДанных() Экспорт
	
	ОписаниеОшибки = "";
	Серия = "C7F8";
	Если Не слкМенеджерЗащиты.ПроверитьЛицензиюСеанса(Серия, ОписаниеОшибки) Тогда
		Возврат;
	КонецЕсли;
	
	НужнаЕщеОднаИтерация = Ложь;
	//---> SPB/Mochalov.Y 23.07.2018
	ОбработатьВозвратыПоставщику(НужнаЕщеОДнаИтерация);
	//<--- SPB/Mochalov.Y 23.07.2018
	
	ОбработатьПеремещенияМеркурий(НужнаЕщеОднаИтерация);
	ОбработатьВыпускДополнительнойПродукцииМеркурий(НужнаЕщеОднаИтерация);
	ОбработатьСписаниеСырьяВПроизводство(НужнаЕщеОднаИтерация);
	ПодтверждениеПеремещений(НужнаЕщеОднаИтерация);
	
	СозданиеИнвентаризацийИзОперучет = Обработки._СозданиеИнвентаризацийИзОперучет.Создать();
	СозданиеИнвентаризацийИзОперучет.СоздатьИнвентаризации();
	ОбработатьДокументыИнвентаризации(НужнаЕщеОднаИтерация);
	
	// Если итерация не нужна, выключает себя.
	_ИтерационнаяОбработкаДанных = РегламентныеЗадания.НайтиПредопределенное(Метаданные.РегламентныеЗадания._ИтерационнаяОбработкаДанных);
	Если _ИтерационнаяОбработкаДанных.Использование <> НужнаЕщеОднаИтерация Тогда
		_ИтерационнаяОбработкаДанных.Использование = НужнаЕщеОднаИтерация;
		_ИтерационнаяОбработкаДанных.Записать();
	КонецЕсли;
	
КонецПроцедуры

Функция СобытиеИнтеграцияОперучетМеркурий() Экспорт
	
	Возврат НСтр("ru = 'Интеграция Оперучет-Меркурий'");
	
КонецФункции

Функция СобытиеИнтеграцияОперучетМеркурийЛогАлгоритмов() Экспорт
	
	Возврат НСтр("ru = 'Интеграция Оперучет-Меркурий. Лог алгоритмов'");
	
КонецФункции

Функция ЕдиницаИзмеренияМеркурийПоОКЕИОперучет(ОКЕИОперучет) Экспорт
	
	Возврат _ИнтеграцияОперучетМеркурийПовтИсп.ЕдиницаИзмеренияМеркурийПоОКЕИОперучет(ОКЕИОперучет);
	
КонецФункции

//---> MSK/Osipov.A 21.07.2020 Задача SUP77-595483
Функция ПредприятияПоСкладамУчетнойСистемы(Склады) Экспорт
	
	Предприятие = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Таб.Предприятие КАК Предприятие
	|ИЗ
	|	РегистрСведений.СоответствиеПредприятийСкладамУчетнойСистемы КАК Таб
	|ГДЕ
	|	Таб.СкладУчетнойСистемы В(&СкладыУчетнойСистемы)";
	Запрос.УстановитьПараметр("СкладыУчетнойСистемы", Склады);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Предприятие");
	
КонецФункции //<--- MSK/Osipov.A 21.07.2020 Задача SUP77-595483

//---> MSK/Osipov.A 10.02.2021 Задача SUP77-598535
Функция ВыполняетсяРегламентноеЗадание(РегламентноеЗадание) Экспорт
	
	Отбор = Новый Структура;
	Отбор.Вставить("ИмяМетода", РегламентноеЗадание.ИмяМетода);
	Отбор.Вставить("Состояние", СостояниеФоновогоЗадания.Активно);
	ФоновыеЗаданияПроверка = ФоновыеЗадания.ПолучитьФоновыеЗадания(Отбор);
	
	Возврат ФоновыеЗаданияПроверка.Количество() > 0;
	
КонецФункции //<--- MSK/Osipov.A 10.02.2021 Задача SUP77-598535

//---> SPB/Smirnov.S 20.10.2021 Задача №SUP77-602139
//
Функция МаксимальнаяДатаОтправляемыхВСД() Экспорт
	//---> MSK/Osipov.A 02.11.2021 Задача SUP77-602408
	УстановитьПривилегированныйРежим(Истина);
	//<--- MSK/Osipov.A 02.11.2021 Задача SUP77-602408
	Возврат НачалоДня(ТекущаяДатаСеанса() - (Константы._МинимальноеВремяНачалаОтправкиВСДНаСеть.Получить() - Дата(1,1,1))); //Начинаем отправлять ВСД в 
КонецФункции//<--- SPB/Smirnov.S 20.10.2021 Задача №SUP77-602139

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ВозвратыПоставщику

Процедура ОбработатьВозвратыПоставщику(НужнаЕщеОДнаИтерация = Ложь) Экспорт
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	// SPB/Mochalov.Y 19.09.2018 
	// сильно переделал оба запроса, поэтому не стал отмечать в них изменения
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Остатки.Организация КАК Организация,
	|	Остатки.Предприятие КАК Предприятие,
	|	Остатки.ДокументВозврата КАК ДокументВозврата,
	|	Остатки.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
	|	Движения.Регистратор КАК Регистратор,
	|	Движения.НазначениеГруза КАК НазначениеГруза,
	|	Движения.Количество КАК Количество
	|ПОМЕСТИТЬ втВозвратыКОтправке
	|ИЗ
	|	РегистрНакопления._ТоварыКВозвратуПоставщикам.Остатки(, ДокументВозврата <> ЗНАЧЕНИЕ(Документ._ВозвратТоваровПоставщику.ПустаяСсылка)) КАК Остатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления._ТоварыКВозвратуПоставщикам КАК Движения
	|		ПО (Движения.ЗаписьСкладскогоЖурнала = Остатки.ЗаписьСкладскогоЖурнала)
	|			И (Движения.Организация = Остатки.Организация)
	|			И (Движения.Предприятие = Остатки.Предприятие)
	|			И (Движения.ДокументВозврата = Остатки.ДокументВозврата)
	|			И (Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|			И (Движения.Регистратор ССЫЛКА Документ._ВозвратТоваровПоставщику)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЗаписьСкладскогоЖурнала";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Если Выборка[0] = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Перемещения.ПеремещениеОперучет КАК ДокументВозврата,
	|	Возвраты.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
	|	Перемещения.ТранспортнаяОперация КАК ТранспортнаяОперация,
	|	Перемещения.Номенклатура КАК Номенклатура,
	|	СоответствиеНоменклатуры.Продукция КАК Продукция,
	|	СУММА(Перемещения.Количество) КАК Количество
	|ПОМЕСТИТЬ втОтгрузкиОперучет
	|ИЗ
	|	РегистрСведений._ПеремещенияМеркурий КАК Перемещения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеПродукцииНоменклатуреУчетнойСистемы КАК СоответствиеНоменклатуры
	|		ПО (СоответствиеНоменклатуры.НоменклатураУчетнойСистемы = Перемещения.Номенклатура)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втВозвратыКОтправке КАК Возвраты
	|		ПО (Возвраты.Регистратор = Перемещения.ПеремещениеОперучет)
	|			И (Возвраты.ЗаписьСкладскогоЖурнала.Продукция = СоответствиеНоменклатуры.Продукция)
	|ГДЕ
	|	НЕ Перемещения.ОтраженоВМеркурий
	|	И Перемещения.ТранспортнаяОперация.Ссылка IS NOT NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	Перемещения.ТранспортнаяОперация,
	|	Перемещения.ПеремещениеОперучет,
	|	Возвраты.ЗаписьСкладскогоЖурнала,
	|	Перемещения.Номенклатура,
	|	СоответствиеНоменклатуры.Продукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	тч.Ссылка КАК ТранспортнаяОперация,
	|	тч.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
	|	СУММА(тч.Количество) КАК Количество
	|ПОМЕСТИТЬ втОтгрузкиУжеСозданные
	|ИЗ
	|	Документ.ТранспортныеОперации.ТаблицаПродукция КАК тч
	|ГДЕ
	|	тч.Ссылка В
	|			(ВЫБРАТЬ
	|				фильтр.ТранспортнаяОперация
	|			ИЗ
	|				втОтгрузкиОперучет КАК фильтр)
	|	И НЕ тч.Ссылка.ПометкаУдаления
	|
	|СГРУППИРОВАТЬ ПО
	|	тч.Ссылка,
	|	тч.ЗаписьСкладскогоЖурнала
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Остатки.Организация КАК Организация,
	|	Остатки.Предприятие КАК Предприятие,
	|	Остатки.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
	|	Остатки.КоличествоОстаток КАК Количество
	|ИЗ
	|	РегистрНакопления.ДвижениеПродукции.Остатки(
	|			,
	|			(Организация, Предприятие, ЗаписьСкладскогоЖурнала) В
	|				(ВЫБРАТЬ
	|					т.Организация,
	|					т.Предприятие,
	|					т.ЗаписьСкладскогоЖурнала
	|				ИЗ
	|					втВозвратыКОтправке КАК т)) КАК Остатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Возвраты.Организация КАК Организация,
	|	Возвраты.Предприятие КАК Предприятие,
	|	ОтгрузкиОперучет.ТранспортнаяОперация КАК ТранспортнаяОперация,
	|	ОтгрузкиОперучет.Номенклатура КАК Номенклатура,
	|	Возвраты.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
	|	Поступление.СпособХраненияПриПеревозке КАК СпособХраненияПриПеревозке,
	|	Поступление.ПроводиласьВетсанэкспертиза КАК ПроводиласьВетсанэкспертиза,
	|	Поступление.ОсуществленКонтрольВрачом КАК ОсуществленКонтрольВрачом,
	|	Возвраты.НазначениеГруза КАК НазначениеГруза,
	|	Поступление.Ссылка КАК Поступление,
	|	Поступление.ВСД.СписокФизическихУпаковок КАК ТаблицаУпаковок,
	|	Поступление.ВСД.Количество КАК КоличествоВоВходящемВСД,
	|	Возвраты.Количество - ЕСТЬNULL(ОтгрузкиМеркурий.Количество, 0) КАК Количество
	|ИЗ
	|	втВозвратыКОтправке КАК Возвраты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОтгрузкиОперучет КАК ОтгрузкиОперучет
	|		ПО Возвраты.ДокументВозврата = ОтгрузкиОперучет.ДокументВозврата
	|			И Возвраты.ЗаписьСкладскогоЖурнала = ОтгрузкиОперучет.ЗаписьСкладскогоЖурнала
	|		ЛЕВОЕ СОЕДИНЕНИЕ втОтгрузкиУжеСозданные КАК ОтгрузкиМеркурий
	|		ПО (ОтгрузкиМеркурий.ТранспортнаяОперация = ОтгрузкиОперучет.ТранспортнаяОперация)
	|			И (ОтгрузкиМеркурий.ЗаписьСкладскогоЖурнала = ОтгрузкиОперучет.ЗаписьСкладскогоЖурнала)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДвижениеПродукции КАК ДвижениеПродукции
	|		ПО (ДвижениеПродукции.ЗаписьСкладскогоЖурнала = Возвраты.ЗаписьСкладскогоЖурнала)
	|			И (ДвижениеПродукции.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходныеОперации КАК Поступление
	|		ПО (Поступление.Ссылка = ДвижениеПродукции.Регистратор)
	|ГДЕ
	|	Возвраты.Количество - ЕСТЬNULL(ОтгрузкиМеркурий.Количество, 0) > 0";
	
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ТаблицаОстатков = РезультатЗапроса[2].Выгрузить();
	ТаблицаПереноса = РезультатЗапроса[3].Выгрузить();
	
	ТранспортныеОперацииДляЗаписи = Новый Соответствие; // Ключ - Ссылка, Значение - Объект
	
	Для Каждого СтрокаОстатков Из ТаблицаОстатков Цикл
		Остаток = СтрокаОстатков.Количество;
		Отбор = Новый Структура("Организация,Предприятие,ЗаписьСкладскогоЖурнала");
		ЗаполнитьЗначенияСвойств(Отбор, СтрокаОстатков);
		
		НайденныеСтроки = ТаблицаПереноса.НайтиСтроки(Отбор);
		Для Каждого СтрокаПереноса Из НайденныеСтроки Цикл
			Если Остаток < СтрокаПереноса.Количество Тогда
				Продолжить;
			КонецЕсли;
			
			ТранспортнаяОперация = ТранспортныеОперацииДляЗаписи[СтрокаПереноса.ТранспортнаяОперация];
			Если ТранспортнаяОперация = Неопределено Тогда
				ТранспортнаяОперация = СтрокаПереноса.ТранспортнаяОперация.ПолучитьОбъект();
				ТранспортныеОперацииДляЗаписи.Вставить(СтрокаПереноса.ТранспортнаяОперация, ТранспортнаяОперация);
			КонецЕсли;
			
			//---> SPB/Mochalov.Y 19.09.2018 
			Если ЗначениеЗаполнено(СтрокаПереноса.СпособХраненияПриПеревозке) Тогда
				ТранспортнаяОперация.СпособХраненияПриПеревозке = СтрокаПереноса.СпособХраненияПриПеревозке;
			КонецЕсли;
			//<--- SPB/Mochalov.Y 19.09.2018 
			
			ДобавитьПродукциюВТранспортнуюОперацию(
					ТранспортнаяОперация,
					СтрокаПереноса.ЗаписьСкладскогоЖурнала,
					СтрокаПереноса.Номенклатура,
					СтрокаПереноса.Количество);
			//---> SPB/Mochalov.Y 19.09.2018 
			
			СтрокаТранспортнойОперации = ТранспортнаяОперация.ТаблицаПродукция[ТранспортнаяОперация.ТаблицаПродукция.Количество()-1];
			СтрокаТранспортнойОперации.ОсуществленКонтрольВрачом = Истина;
			Если ЗначениеЗаполнено(СтрокаПереноса.ПроводиласьВетсанэкспертиза) Тогда
				СтрокаТранспортнойОперации.ПроводиласьВетсанэкспертиза = СтрокаПереноса.ПроводиласьВетсанэкспертиза;
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрокаПереноса.НазначениеГруза) Тогда
				СтрокаТранспортнойОперации.НазначениеГруза = СтрокаПереноса.НазначениеГруза;
			КонецЕсли;
			
			Если СтрокаПереноса.ТаблицаУпаковок.Количество() 
				И ТранспортнаяОперация.СписокФизическихУпаковок.Количество()=0
				И СтрокаПереноса.ТаблицаУпаковок[0].КоличествоУпаковок <> 0 Тогда
				
				СтрокаУпаковок = ТранспортнаяОперация.СписокФизическихУпаковок.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаУпаковок, СтрокаПереноса.ТаблицаУпаковок[0]);
				СтрокаУпаковок.GUIDСтроки = СтрокаТранспортнойОперации.GUIDСтроки;
				
				КоличествоВУпаковке = СтрокаПереноса.КоличествоВоВходящемВСД / СтрокаПереноса.ТаблицаУпаковок[0].КоличествоУпаковок;
				Если НЕ Цел(КоличествоВУпаковке) = КоличествоВУпаковке Тогда
					КоличествоВУпаковке = Цел(КоличествоВУпаковке) + 1;
				КонецЕсли;
				
				КоличествоУпаковок = СтрокаТранспортнойОперации.Количество / КоличествоВУпаковке;
				Если НЕ Цел(КоличествоУпаковок) = КоличествоУпаковок Тогда
					КоличествоУпаковок = Цел(КоличествоУпаковок) + 1;
				КонецЕсли;
				СтрокаУпаковок.КоличествоУпаковок = КоличествоУпаковок;
			КонецЕсли;
			//<--- SPB/Mochalov.Y 19.09.2018 
					
			Остаток = Остаток - СтрокаПереноса.Количество;
		КонецЦикла;
		
	КонецЦикла;
		
	Для Каждого КлючИЗначение Из ТранспортныеОперацииДляЗаписи Цикл
		//---> MSK/Fedorchuk.V 11.09.2020 SUP77-596384
		// Параметр передается неверно
		////---> MSK/Fedorchuk.V 07.08.2020 SUP77-595700
		//// Устанавливаем ответственного в соответствии с настройками
		//УстановитьОтветственного(КлючИЗначение);
		////<--- MSK/Fedorchuk.V 07.08.2020 SUP77-59570
		УстановитьОтветственного(КлючИЗначение.Значение);
		//<--- MSK/Fedorchuk.V 11.09.2020 SUP77-596384
		КлючИЗначение.Значение.Записать();
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ПеремещенияМеркурий

Процедура ОбработатьПеремещенияМеркурий(НужнаЕщеОднаИтерация = Ложь, ОбрабатыватьОтклоненные = Ложь) Экспорт
	
	РежимОтладки = Константы._РежимОтладки.Получить();
	
	// Определяем дату начала для отсечения остатков из "будущего" по минимальной дате перемещений к обработке.
	ДатаОстатков = ТекущаяДата();
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	//---> SPB/Mochalov.Y 11.07.2019 задача SUP77-589257 (Не создается ВСД по возврату поставщику)
	//|	МИНИМУМ(_ПеремещенияМеркурий.ТранспортнаяОперация.Дата) КАК ДатаОстатков
	|	ISNULL(  МИНИМУМ(ВЫБОР КОГДА _ПеремещенияМеркурий.КонтрагентУчетнойСистемы = ЗНАЧЕНИЕ(Справочник.КонтрагентыУчетнойСистемы.ПустаяСсылка) ТОГДА _ПеремещенияМеркурий.ТранспортнаяОперация.Дата КОНЕЦ)
	|			,МИНИМУМ(_ПеремещенияМеркурий.ТранспортнаяОперация.Дата)) КАК ДатаОстатков
	//<--- SPB/Mochalov.Y 11.07.2019 задача SUP77-589257 (Не создается ВСД по возврату поставщику)
	|ИЗ
	|	РегистрСведений._ПеремещенияМеркурий КАК _ПеремещенияМеркурий
	|ГДЕ
	|	НЕ _ПеремещенияМеркурий.ТранспортнаяОперация.ПометкаУдаления
	|	И НЕ _ПеремещенияМеркурий.ОтраженоВМеркурий
	|	И _ПеремещенияМеркурий.ТранспортнаяОперация <> ЗНАЧЕНИЕ(Документ.ТранспортныеОперации.ПустаяСсылка)";
	ВыборкаДанных = Запрос.Выполнить().Выбрать();
	Если ВыборкаДанных.Следующий() Тогда
		ДатаОстатков = ВыборкаДанных.ДатаОстатков;
		Если ДатаОстатков = NULL Тогда
			// Нет документов к обработке.
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	//---> MSK/Osipov.A 01.11.2021 Задача SUP77-602408
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ПодготовитьВременныеТаблицыПартийКРасходу(Запрос.МенеджерВременныхТаблиц);
	//<--- MSK/Osipov.A 01.11.2021 Задача SUP77-602408
	//---> SPB/Mochalov.Y 15.04.2020 задача SUP77-593632 (Не отгружаются сосиски на точки)
	//Запрос.УстановитьПараметр("ДатаОстатков", ДатаОстатков);
	// при перемещениях по довозам не видна партия, привезенная сегодня
	Запрос.УстановитьПараметр("ДатаОстатков", КонецДня(ДатаОстатков));
	//<--- SPB/Mochalov.Y 15.04.2020 задача SUP77-593632 (Не отгружаются сосиски на точки)
	Запрос.УстановитьПараметр("ОбрабатыватьОтклоненные", ОбрабатыватьОтклоненные);
	
	//---> SPB/Kaverzin.A 17.12.2021 Задача SUP77-602822	
	//Упаковки в транспортных операциях
	ТекстЗапросаУпаковкиВТранспортныхОперациях = "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОстаткиПромЗаписьЖурнала.ЗаписьСкладскогоЖурнала,
	|	СоответствиеПродукцииНоменклатуреУчетнойСистемы.НоменклатураУчетнойСистемы,
	|	МАКСИМУМ(ДвижениеПродукцииПриходы.Период) КАК Период
	|ПОМЕСТИТЬ ВТМаксимумПоСекунде
	|ИЗ
	|	втОстаткиПромЗаписьЖурнала КАК втОстаткиПромЗаписьЖурнала 
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДвижениеПродукции КАК ДвижениеПродукцииПриходы
	|		ПО втОстаткиПромЗаписьЖурнала.ЗаписьСкладскогоЖурнала = ДвижениеПродукцииПриходы.ЗаписьСкладскогоЖурнала
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеПродукцииНоменклатуреУчетнойСистемы КАК СоответствиеПродукцииНоменклатуреУчетнойСистемы
	|		ПО ДвижениеПродукцииПриходы.ЗаписьСкладскогоЖурнала.Продукция = СоответствиеПродукцииНоменклатуреУчетнойСистемы.Продукция
	|ГДЕ
	|	ДвижениеПродукцииПриходы.Регистратор ССЫЛКА Документ.ПриходныеОперации
	|	И СоответствиеПродукцииНоменклатуреУчетнойСистемы.НоменклатураУчетнойСистемы В (ВЫБРАТЬ втОсталосьПеренестиВТранспортныеОперации.Номенклатура ИЗ втОсталосьПеренестиВТранспортныеОперации)
	|СГРУППИРОВАТЬ ПО
	|	втОстаткиПромЗаписьЖурнала.ЗаписьСкладскогоЖурнала,
	|	СоответствиеПродукцииНоменклатуреУчетнойСистемы.НоменклатураУчетнойСистемы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|//Последние приходы
	|ВЫБРАТЬ
	|	ВТМаксимумПоСекунде.ЗаписьСкладскогоЖурнала,
	|	ВТМаксимумПоСекунде.НоменклатураУчетнойСистемы,
	|	МАКСИМУМ(ДвижениеПродукцииПриходы.Регистратор) КАК Регистратор
	|ПОМЕСТИТЬ ВТПоследниеПриходы
	|ИЗ
	|	ВТМаксимумПоСекунде
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДвижениеПродукции КАК ДвижениеПродукцииПриходы
	|		ПО ВТМаксимумПоСекунде.ЗаписьСкладскогоЖурнала = ДвижениеПродукцииПриходы.ЗаписьСкладскогоЖурнала
	|		И ВТМаксимумПоСекунде.Период = ДвижениеПродукцииПриходы.Период
	|ГДЕ
	|	ДвижениеПродукцииПриходы.Регистратор ССЫЛКА Документ.ПриходныеОперации
	|СГРУППИРОВАТЬ ПО
	|	ВТМаксимумПоСекунде.ЗаписьСкладскогоЖурнала,
	|	ВТМаксимумПоСекунде.НоменклатураУчетнойСистемы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|//Упаковки с минимальным уровнем
	|ВЫБРАТЬ
	|	ВТПоследниеПриходы.Регистратор КАК Регистратор,	
	|	МИНИМУМ(ПриходныеОперацииСписокФизическихУпаковок.УровеньУпаковки) КАК УровеньУпаковки,
	//---> SPB/Kaverzin.A 07.02.2022 Задача SUP77-603677	
	|	МАКСИМУМ(ПриходныеОперацииСписокФизическихУпаковок.КоличествоУпаковок) КАК КоличествоУпаковок
	//<--- SPB/Kaverzin.A 07.02.2022 Задача SUP77-603677
	|ПОМЕСТИТЬ ВТУпаковкиНизшиеУровни
	|ИЗ 
	|	ВТПоследниеПриходы
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходныеОперации.СписокФизическихУпаковок КАК ПриходныеОперацииСписокФизическихУпаковок
	|		ПО ВТПоследниеПриходы.Регистратор = ПриходныеОперацииСписокФизическихУпаковок.Ссылка
	|СГРУППИРОВАТЬ ПО 
	|	ВТПоследниеПриходы.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТПоследниеПриходы.ЗаписьСкладскогоЖурнала,
	|	ВТПоследниеПриходы.НоменклатураУчетнойСистемы,
	|	ВТПоследниеПриходы.Регистратор,
	|	ПриходныеОперацииСписокФизическихУпаковок.Ссылка.Количество,	
	//---> SPB/Kaverzin.A 07.02.2022 Задача SUP77-603677
	//|   ПриходныеОперацииСписокФизическихУпаковок.КоличествоУпаковок,
	//|	ПриходныеОперацииСписокФизическихУпаковок.Упаковка,
	//|	ПриходныеОперацииСписокФизическихУпаковок.УровеньУпаковки,
	//|	ПриходныеОперацииСписокФизическихУпаковок.ИндексУпаковки
	|	ВЫБОР
	|		КОГДА (ПриходныеОперацииСписокФизическихУпаковок.КоличествоУпаковок = 0 И ПриходныеОперацииСписокЗаполненныхУпаковок.КоличествоУпаковок = 0)
	|			ИЛИ ПриходныеОперацииСписокФизическихУпаковок.КоличествоУпаковок > 0
	|			ТОГДА ПриходныеОперацииСписокФизическихУпаковок.КоличествоУпаковок
	|		КОГДА ПриходныеОперацииСписокЗаполненныхУпаковок.КоличествоУпаковок > 0	
	|			ТОГДА ПриходныеОперацииСписокЗаполненныхУпаковок.КоличествоУпаковок
	|	КОНЕЦ КАК КоличествоУпаковок,		
	|	ВЫБОР
	|		КОГДА (ПриходныеОперацииСписокФизическихУпаковок.КоличествоУпаковок = 0 И ПриходныеОперацииСписокЗаполненныхУпаковок.КоличествоУпаковок = 0)
	|			ИЛИ ПриходныеОперацииСписокФизическихУпаковок.КоличествоУпаковок > 0
	|			ТОГДА ПриходныеОперацииСписокФизическихУпаковок.Упаковка
	|		КОГДА ПриходныеОперацииСписокЗаполненныхУпаковок.КоличествоУпаковок > 0	
	|			ТОГДА ПриходныеОперацииСписокЗаполненныхУпаковок.Упаковка
	|	КОНЕЦ КАК Упаковка,
	|	ВЫБОР
	|		КОГДА (ПриходныеОперацииСписокФизическихУпаковок.КоличествоУпаковок = 0 И ПриходныеОперацииСписокЗаполненныхУпаковок.КоличествоУпаковок = 0)
	|			ИЛИ ПриходныеОперацииСписокФизическихУпаковок.КоличествоУпаковок > 0
	|			ТОГДА ПриходныеОперацииСписокФизическихУпаковок.УровеньУпаковки
	|		КОГДА ПриходныеОперацииСписокЗаполненныхУпаковок.КоличествоУпаковок > 0	
	|			ТОГДА ПриходныеОперацииСписокЗаполненныхУпаковок.УровеньУпаковки
	|	КОНЕЦ КАК УровеньУпаковки,
	|	ВЫБОР
	|		КОГДА (ПриходныеОперацииСписокФизическихУпаковок.КоличествоУпаковок = 0 И ПриходныеОперацииСписокЗаполненныхУпаковок.КоличествоУпаковок = 0)
	|			ИЛИ ПриходныеОперацииСписокФизическихУпаковок.КоличествоУпаковок > 0
	|			ТОГДА ПриходныеОперацииСписокФизическихУпаковок.ИндексУпаковки
	|		КОГДА ПриходныеОперацииСписокЗаполненныхУпаковок.КоличествоУпаковок > 0	
	|			ТОГДА ПриходныеОперацииСписокЗаполненныхУпаковок.ИндексУпаковки
	|	КОНЕЦ КАК ИндексУпаковки
	//<--- SPB/Kaverzin.A 07.02.2022 Задача SUP77-603677	
	|ИЗ
	|	ВТПоследниеПриходы КАК ВТПоследниеПриходы
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТУпаковкиНизшиеУровни
	|		ПО ВТПоследниеПриходы.Регистратор = ВТУпаковкиНизшиеУровни.Регистратор
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходныеОперации.СписокФизическихУпаковок КАК ПриходныеОперацииСписокФизическихУпаковок
	|		ПО ВТУпаковкиНизшиеУровни.Регистратор =  ПриходныеОперацииСписокФизическихУпаковок.Ссылка
	|		И ВТУпаковкиНизшиеУровни.УровеньУпаковки = ПриходныеОперацииСписокФизическихУпаковок.УровеньУпаковки
	//---> SPB/Kaverzin.A 07.02.2022 Задача SUP77-603677
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходныеОперации.СписокФизическихУпаковок КАК ПриходныеОперацииСписокЗаполненныхУпаковок
	|		ПО (ВТУпаковкиНизшиеУровни.Регистратор = ПриходныеОперацииСписокЗаполненныхУпаковок.Ссылка)
	|		И (ВТУпаковкиНизшиеУровни.КоличествоУпаковок = ПриходныеОперацииСписокЗаполненныхУпаковок.КоличествоУпаковок)
	//<--- SPB/Kaverzin.A 07.02.2022 Задача SUP77-603677
	|;
	|";
	//<--- SPB/Kaverzin.A 17.12.2021 Задача SUP77-602822
	
	Запрос.Текст =
	#Область Запрос
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	_ПеремещенияМеркурий.ТранспортнаяОперация КАК Ссылка
	|ПОМЕСТИТЬ втНезакрытыеДокументы
	|ИЗ
	|	РегистрСведений._ПеремещенияМеркурий КАК _ПеремещенияМеркурий
	|ГДЕ
	|	НЕ _ПеремещенияМеркурий.ТранспортнаяОперация.ПометкаУдаления
	|	И НЕ _ПеремещенияМеркурий.ОтраженоВМеркурий
	|	И _ПеремещенияМеркурий.ТранспортнаяОперация <> ЗНАЧЕНИЕ(Документ.ТранспортныеОперации.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	_ПеремещенияМеркурий.ПроизводственнаяОперация
	|ИЗ
	|	РегистрСведений._ПеремещенияМеркурий КАК _ПеремещенияМеркурий
	|ГДЕ
	|	НЕ _ПеремещенияМеркурий.ПроизводственнаяОперация.ПометкаУдаления
	|	И НЕ _ПеремещенияМеркурий.ОтраженоВМеркурий
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таб.ДокументСсылка КАК ДокументСсылка,
	|	Таб.Статус КАК Статус
	|ПОМЕСТИТЬ втЖурналСостоянийЗаявок
	|ИЗ
	|	РегистрСведений.ЖурналРегистрацииСостоянийЗаявокНаОформлениеОпераций.СрезПоследних(
	|			,
	|			ДокументСсылка В
	|				(ВЫБРАТЬ
	|					Таб.Ссылка
	|				ИЗ
	|					втНезакрытыеДокументы КАК Таб)) КАК Таб
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втНезакрытыеДокументы.Ссылка КАК ТранспортнаяОперация
	|ПОМЕСТИТЬ втНезакрытыеТранспортныеОперации
	|ИЗ
	|	втНезакрытыеДокументы КАК втНезакрытыеДокументы
	|ГДЕ
	|	втНезакрытыеДокументы.Ссылка ССЫЛКА Документ.ТранспортныеОперации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТранспортнаяОперация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	_ПеремещенияМеркурий.ПроизводственнаяОперация КАК ПроизводственнаяОперация
	|ПОМЕСТИТЬ втОперацииПроизводстваПодОтгрузку
	|ИЗ
	|	РегистрСведений._ПеремещенияМеркурий КАК _ПеремещенияМеркурий
	|ГДЕ
	|	_ПеремещенияМеркурий.ПроизводственнаяОперация <> ЗНАЧЕНИЕ(Документ.ПроизводственныеОперации.ПустаяСсылка)
	|	И НЕ _ПеремещенияМеркурий.ОтраженоВМеркурий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДвижениеПродукции.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
	|	втОперацииПроизводстваПодОтгрузку.ПроизводственнаяОперация КАК ПроизводственнаяОперация
	|ПОМЕСТИТЬ втПродукцияВыпущеннаяПодОтгрузку
	|ИЗ
	|	втОперацииПроизводстваПодОтгрузку КАК втОперацииПроизводстваПодОтгрузку
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ДвижениеПродукции КАК ДвижениеПродукции
	|		ПО втОперацииПроизводстваПодОтгрузку.ПроизводственнаяОперация = ДвижениеПродукции.Регистратор
	|ГДЕ
	|	ДвижениеПродукции.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЗаписьСкладскогоЖурнала
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	_ПеремещенияМеркурий.Номенклатура КАК Номенклатура,
	|	_ПеремещенияМеркурий.КоличествоБазЕд КАК КоличествоБазЕд,
	//---> SPB/Mochalov.Y 28.04.2020 задача SUP77-593756 (Ошибка 00 Формирование ВСД по маршрутам. Контроль)
	//|	_ПеремещенияМеркурий.КоличествоБазЕд * _ПеремещенияМеркурий.Номенклатура._КоличествоЕдиницМеркурийВБазовойЕдинице КАК КоличествоЕдиницМеркурий,
	|	ВЫРАЗИТЬ(_ПеремещенияМеркурий.КоличествоБазЕд * _ПеремещенияМеркурий.Номенклатура._КоличествоЕдиницМеркурийВБазовойЕдинице КАК ЧИСЛО(18,6)) КАК КоличествоЕдиницМеркурий,
	//<--- SPB/Mochalov.Y 28.04.2020 задача SUP77-593756 (Ошибка 00 Формирование ВСД по маршрутам. Контроль)
	|	_ПеремещенияМеркурий.Номенклатура._ЕдиницаИзмеренияМеркурий КАК ЕдиницаИзмеренияМеркурий,
	|	_ПеремещенияМеркурий.ТранспортнаяОперация КАК ТранспортнаяОперация,
	|	втНезакрытыеТранспортныеОперации.ТранспортнаяОперация.ПредприятиеОтправитель КАК ПредприятиеОтправитель,
	|	_ПеремещенияМеркурий.Количество КАК Количество,
	|	_ПеремещенияМеркурий.Коэффициент КАК Коэффициент,
	|	_ПеремещенияМеркурий.ЕдиницаИзмерения.ЕдиницаПоКлассификатору КАК ЕдиницаИзмеренияУчетнойСистемы,
	|	_ПеремещенияМеркурий.ПроизводственнаяОперация КАК ПроизводственнаяОперация,
	|	_ПеремещенияМеркурий.ПроизведеноКоличествоХранЕд КАК ПроизведеноКоличествоХранЕд,
	|	_ПеремещенияМеркурий.ЕдиницаИзмерения.ЕдиницаПоКлассификатору КАК ЕдиницаПоКлассификатору,
	//---> SPB/Kaverzin.A 21.02.2022 PRJ-137
	|	_ПеремещенияМеркурий.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	//<--- SPB/Kaverzin.A 21.02.2022 PRJ-137
	|	_ПеремещенияМеркурий.ПеремещениеОперучет КАК ПеремещениеОперучет
	|ПОМЕСТИТЬ втКОтгрузкеВсего
	|ИЗ
	|	РегистрСведений._ПеремещенияМеркурий КАК _ПеремещенияМеркурий
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втНезакрытыеТранспортныеОперации КАК втНезакрытыеТранспортныеОперации
	|		ПО _ПеремещенияМеркурий.ТранспортнаяОперация = втНезакрытыеТранспортныеОперации.ТранспортнаяОперация
	|		
	|ГДЕ
	|	НЕ _ПеремещенияМеркурий.ПеремещениеОперучет ССЫЛКА Документ._ВозвратТоваровПоставщику
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	ТранспортнаяОперация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втНезакрытыеТранспортныеОперации.ТранспортнаяОперация.ПредприятиеОтправитель КАК ПредприятиеОтправитель,
	|	ТранспортныеОперацииТаблицаПродукция.НоменклатураУчетнойСистемы КАК НоменклатураУчетнойСистемы,
	|	ТранспортныеОперацииТаблицаПродукция.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
	|	ТранспортныеОперацииТаблицаПродукция.Количество КАК КоличествоЕдиницМеркурий,
	|	ТранспортныеОперацииТаблицаПродукция.ЗаписьСкладскогоЖурнала.ЕдиницаИзмерения КАК ЕдиницаИзмеренияМеркурий,
	|	СоответствиеЕдиницИзмеренийЕдиницамУчетнойСистемы.ЕдиницаИзмеренияУчетнойСистемы КАК ЕдиницаИзмеренияУчетнойСистемы,
	|	втНезакрытыеТранспортныеОперации.ТранспортнаяОперация КАК ТранспортнаяОперация
	|ПОМЕСТИТЬ втОстаткиВТранспортныхОперацияхПромЕдИзм
	|ИЗ
	|	втНезакрытыеТранспортныеОперации КАК втНезакрытыеТранспортныеОперации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТранспортныеОперации.ТаблицаПродукция КАК ТранспортныеОперацииТаблицаПродукция
	|		ПО втНезакрытыеТранспортныеОперации.ТранспортнаяОперация = ТранспортныеОперацииТаблицаПродукция.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеЕдиницИзмеренийЕдиницамУчетнойСистемы КАК СоответствиеЕдиницИзмеренийЕдиницамУчетнойСистемы
	|		ПО (ТранспортныеОперацииТаблицаПродукция.ЗаписьСкладскогоЖурнала.ЕдиницаИзмерения = СоответствиеЕдиницИзмеренийЕдиницамУчетнойСистемы.ЕдиницаИзмеренияУпаковка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЕдиницаИзмеренияУчетнойСистемы,
	|	НоменклатураУчетнойСистемы
	|;
	//---> SPB/Mochalov.Y 22.01.2020 задача SUP77-592478 (падают отгрузки при задваивании единиц измерения у номенклатуры)
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	единицы.Владелец,
	|	единицы.ЕдиницаПоКлассификатору,
	|	МАКСИМУМ(единицы.Коэффициент) КАК Коэффициент
	|ПОМЕСТИТЬ втЕдиницыИзмеренияОперучет
	|ИЗ
	|	Справочник._ЕдиницыИзмеренияОперучет КАК единицы
	|ГДЕ
	|	единицы.ПометкаУдаления = ЛОЖЬ
	|СГРУППИРОВАТЬ ПО
	|	единицы.Владелец,
	|	единицы.ЕдиницаПоКлассификатору
	|;
	//<--- SPB/Mochalov.Y 22.01.2020 задача SUP77-592478 (падают отгрузки при задваивании единиц измерения у номенклатуры)
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОстаткиВТранспортныхОперацияхПромЕдИзм.ПредприятиеОтправитель КАК ПредприятиеОтправитель,
	|	втОстаткиВТранспортныхОперацияхПромЕдИзм.НоменклатураУчетнойСистемы КАК НоменклатураУчетнойСистемы,
	|	втОстаткиВТранспортныхОперацияхПромЕдИзм.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
	|	втОстаткиВТранспортныхОперацияхПромЕдИзм.КоличествоЕдиницМеркурий КАК КоличествоЕдиницМеркурий,
	|	втОстаткиВТранспортныхОперацияхПромЕдИзм.ЕдиницаИзмеренияМеркурий КАК ЕдиницаИзмеренияМеркурий,
	|	втОстаткиВТранспортныхОперацияхПромЕдИзм.КоличествоЕдиницМеркурий * _ЕдиницыИзмеренияОперучет.Коэффициент КАК КоличествоБазЕд,
	|	втОстаткиВТранспортныхОперацияхПромЕдИзм.ТранспортнаяОперация КАК ТранспортнаяОперация
	|ПОМЕСТИТЬ втОстаткиВТранспортныхОперациях
	|ИЗ
	|	втОстаткиВТранспортныхОперацияхПромЕдИзм КАК втОстаткиВТранспортныхОперацияхПромЕдИзм
	//---> SPB/Mochalov.Y 22.01.2020 задача SUP77-592478 (падают отгрузки при задваивании единиц измерения у номенклатуры)
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник._ЕдиницыИзмеренияОперучет КАК _ЕдиницыИзмеренияОперучет
	|		ЛЕВОЕ СОЕДИНЕНИЕ втЕдиницыИзмеренияОперучет КАК _ЕдиницыИзмеренияОперучет
	//<--- SPB/Mochalov.Y 22.01.2020 задача SUP77-592478 (падают отгрузки при задваивании единиц измерения у номенклатуры)
	|		ПО втОстаткиВТранспортныхОперацияхПромЕдИзм.ЕдиницаИзмеренияУчетнойСистемы = _ЕдиницыИзмеренияОперучет.ЕдиницаПоКлассификатору
	|			И втОстаткиВТранспортныхОперацияхПромЕдИзм.НоменклатураУчетнойСистемы = _ЕдиницыИзмеренияОперучет.Владелец
	//---> SPB/Mochalov.Y 22.01.2020 задача SUP77-592478 (падают отгрузки при задваивании единиц измерения у номенклатуры)
	//---> SPB/Mochalov.Y 09.07.2019 задача SUP77-589249 (Некорректно учитывались отгруженные остатки при формировании транспортной операции)
	//|			И _ЕдиницыИзмеренияОперучет.ПометкаУдаления = ЛОЖЬ
	//<--- SPB/Mochalov.Y 09.07.2019 задача SUP77-589249 (Некорректно учитывались отгруженные остатки при формировании транспортной операции)
	//<--- SPB/Mochalov.Y 22.01.2020 задача SUP77-592478 (падают отгрузки при задваивании единиц измерения у номенклатуры)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Остатки.Предприятие КАК Предприятие,
	|	Остатки.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
	|	Остатки.ЗаписьСкладскогоЖурнала.ЕдиницаИзмерения КАК ЕдиницаИзмеренияМеркурий,
	|	Остатки.ЗаписьСкладскогоЖурнала.Продукция КАК Продукция,
	|	Остатки.КоличествоОстаток КАК КоличествоЕдиницМеркурий,
	//---> MSK/Osipov.A 01.11.2021 Задача SUP77-602408
	|	ЕСТЬNULL(втОстаткиПартийКРасходу.КоличествоЕдиницМеркурий, 0) КАК КоличествоЕдиницМеркурийКРасходу,
	|	ВЫБОР
	|		КОГДА втОстаткиПартийКРасходу.КоличествоЕдиницМеркурий ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьРучнаяУстановкаРасхода,
	//<--- MSK/Osipov.A 01.11.2021 Задача SUP77-602408
	|	СоответствиеЕдиницИзмеренийЕдиницамУчетнойСистемы.ЕдиницаИзмеренияУчетнойСистемы КАК ЕдиницаИзмеренияУчетнойСистемы
	|ПОМЕСТИТЬ втОстаткиПромПродукция
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОстаткиТекИНаДату.Предприятие КАК Предприятие,
	|		ОстаткиТекИНаДату.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
	|		МИНИМУМ(ОстаткиТекИНаДату.КоличествоОстаток) КАК КоличествоОстаток
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТекОстаткиИВозвраты.Организация КАК Организация,
	|			ТекОстаткиИВозвраты.Предприятие КАК Предприятие,
	|			ТекОстаткиИВозвраты.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
	|			СУММА(ТекОстаткиИВозвраты.КоличествоОстатокСУчетомВозвратов) КАК КоличествоОстаток,
	|			СУММА(ТекОстаткиИВозвраты.КоличествоОстатокСУчетомВозвратов) КАК ТекОстаток,
	|			0 КАК ОстатокНаДату
	|		ИЗ
	|			(ВЫБРАТЬ
	|				Остатки.Организация КАК Организация,
	|				Остатки.Предприятие КАК Предприятие,
	|				Остатки.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
	|				Остатки.КоличествоОстаток КАК КоличествоОстатокСУчетомВозвратов,
	|				Остатки.КоличествоОстаток КАК КоличествоОстаток
	|			ИЗ
	|				РегистрНакопления.ДвижениеПродукции.Остатки(
	|						,
	|						Предприятие В
	|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|								Таб.Ссылка.ПредприятиеОтправитель
	|							ИЗ
	|								втНезакрытыеДокументы КАК Таб)) КАК Остатки
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ
	|				Возвраты.Организация,
	|				Возвраты.Предприятие,
	|				Возвраты.ЗаписьСкладскогоЖурнала,
	|				-Возвраты.КоличествоОстаток,
	|				0
	|			ИЗ
	|				РегистрНакопления._ТоварыКВозвратуПоставщикам.Остатки(
	|						,
	|						Предприятие В
	|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|								Таб.Ссылка.ПредприятиеОтправитель
	|							ИЗ
	|								втНезакрытыеДокументы КАК Таб)) КАК Возвраты) КАК ТекОстаткиИВозвраты
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ТекОстаткиИВозвраты.Организация,
	|			ТекОстаткиИВозвраты.Предприятие,
	|			ТекОстаткиИВозвраты.ЗаписьСкладскогоЖурнала
	|		
	|		ИМЕЮЩИЕ
	|			СУММА(ТекОстаткиИВозвраты.КоличествоОстаток) > 0
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ОстаткиИВозвратыНаДату.Организация,
	|			ОстаткиИВозвратыНаДату.Предприятие,
	|			ОстаткиИВозвратыНаДату.ЗаписьСкладскогоЖурнала,
	|			СУММА(ОстаткиИВозвратыНаДату.КоличествоОстатокСУчетомВозвратов),
	|			0,
	|			СУММА(ОстаткиИВозвратыНаДату.КоличествоОстатокСУчетомВозвратов)
	|		ИЗ
	|			(ВЫБРАТЬ
	|				Остатки.Организация КАК Организация,
	|				Остатки.Предприятие КАК Предприятие,
	|				Остатки.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
	|				Остатки.КоличествоОстаток КАК КоличествоОстатокСУчетомВозвратов,
	|				Остатки.КоличествоОстаток КАК КоличествоОстаток
	|			ИЗ
	|				РегистрНакопления.ДвижениеПродукции.Остатки(
	|						&ДатаОстатков,
	|						Предприятие В
	|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|								Таб.Ссылка.ПредприятиеОтправитель
	|							ИЗ
	|								втНезакрытыеДокументы КАК Таб)) КАК Остатки
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ
	|				Возвраты.Организация,
	|				Возвраты.Предприятие,
	|				Возвраты.ЗаписьСкладскогоЖурнала,
	|				-Возвраты.КоличествоОстаток,
	|				0
	|			ИЗ
	|				РегистрНакопления._ТоварыКВозвратуПоставщикам.Остатки(
	|						&ДатаОстатков,
	|						Предприятие В
	|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|								Таб.Ссылка.ПредприятиеОтправитель
	|							ИЗ
	|								втНезакрытыеДокументы КАК Таб)) КАК Возвраты) КАК ОстаткиИВозвратыНаДату
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ОстаткиИВозвратыНаДату.Организация,
	|			ОстаткиИВозвратыНаДату.Предприятие,
	|			ОстаткиИВозвратыНаДату.ЗаписьСкладскогоЖурнала
	|		
	|		ИМЕЮЩИЕ
	|			СУММА(ОстаткиИВозвратыНаДату.КоличествоОстаток) > 0 И
	|			СУММА(ОстаткиИВозвратыНаДату.КоличествоОстатокСУчетомВозвратов) > 0) КАК ОстаткиТекИНаДату
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ОстаткиТекИНаДату.Предприятие,
	|		ОстаткиТекИНаДату.ЗаписьСкладскогоЖурнала
	|	
	|	ИМЕЮЩИЕ
	|		СУММА(ОстаткиТекИНаДату.ТекОстаток) > 0 И
	|		СУММА(ОстаткиТекИНаДату.ОстатокНаДату) > 0) КАК Остатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеЕдиницИзмеренийЕдиницамУчетнойСистемы КАК СоответствиеЕдиницИзмеренийЕдиницамУчетнойСистемы
	|		ПО Остатки.ЗаписьСкладскогоЖурнала.ЕдиницаИзмерения = СоответствиеЕдиницИзмеренийЕдиницамУчетнойСистемы.ЕдиницаИзмеренияУпаковка
	//---> MSK/Osipov.A 01.11.2021 Задача SUP77-602408
	|		ЛЕВОЕ СОЕДИНЕНИЕ втОстаткиПартийКРасходу КАК втОстаткиПартийКРасходу
	|		ПО Остатки.Предприятие = втОстаткиПартийКРасходу.Предприятие
	|			И Остатки.ЗаписьСкладскогоЖурнала = втОстаткиПартийКРасходу.ЗаписьСкладскогоЖурнала
	//<--- MSK/Osipov.A 01.11.2021 Задача SUP77-602408
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Продукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОстаткиПромПродукция.Предприятие КАК Предприятие,
	|	втОстаткиПромПродукция.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
	|	втОстаткиПромПродукция.КоличествоЕдиницМеркурий КАК КоличествоЕдиницМеркурий,
	|	втОстаткиПромПродукция.ЕдиницаИзмеренияМеркурий КАК ЕдиницаИзмеренияМеркурий,
	|	втОстаткиПромПродукция.ЕдиницаИзмеренияУчетнойСистемы КАК ЕдиницаИзмеренияУчетнойСистемы,
	|	втОстаткиПромПродукция.КоличествоЕдиницМеркурийКРасходу КАК КоличествоЕдиницМеркурийКРасходу,
	|	втОстаткиПромПродукция.ЕстьРучнаяУстановкаРасхода КАК ЕстьРучнаяУстановкаРасхода,
	|	СоответствиеПродукцииНоменклатуреУчетнойСистемы.НоменклатураУчетнойСистемы КАК НоменклатураУчетнойСистемы
	|ПОМЕСТИТЬ втОстаткиПромЕдИзм
	|ИЗ
	|	втОстаткиПромПродукция КАК втОстаткиПромПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеПродукцииНоменклатуреУчетнойСистемы КАК СоответствиеПродукцииНоменклатуреУчетнойСистемы
	|		ПО втОстаткиПромПродукция.Продукция = СоответствиеПродукцииНоменклатуреУчетнойСистемы.Продукция
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЕдиницаИзмеренияУчетнойСистемы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таб.НоменклатураУчетнойСистемы КАК НоменклатураУчетнойСистемы,
	|	СУММА(Таб.КоличествоБазЕд) КАК КоличествоБазЕд,
	|	Таб.ЕдиницаИзмеренияМеркурий КАК ЕдиницаИзмеренияМеркурий,
	|	СУММА(Таб.КоличествоЕдиницМеркурий) КАК КоличествоЕдиницМеркурий,
	|	Таб.Предприятие КАК Предприятие,
	//---> MSK/Osipov.A 01.11.2021 Задача SUP77-602408
	|	СУММА(Таб.КоличествоЕдиницМеркурийКРасходу) КАК КоличествоЕдиницМеркурийКРасходу,
	|	МАКСИМУМ(Таб.ЕстьРучнаяУстановкаРасхода) КАК ЕстьРучнаяУстановкаРасхода,
	//<--- MSK/Osipov.A 01.11.2021 Задача SUP77-602408
	|	Таб.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала
	|ПОМЕСТИТЬ втОстаткиПромЗаписьЖурнала
	|ИЗ
	|	(ВЫБРАТЬ
	|		втОстаткиПромЕдИзм.НоменклатураУчетнойСистемы КАК НоменклатураУчетнойСистемы,
	|		втОстаткиПромЕдИзм.КоличествоЕдиницМеркурий * _ЕдиницыИзмеренияОперучет.Коэффициент КАК КоличествоБазЕд,
	|		втОстаткиПромЕдИзм.ЕдиницаИзмеренияМеркурий КАК ЕдиницаИзмеренияМеркурий,
	|		втОстаткиПромЕдИзм.КоличествоЕдиницМеркурий КАК КоличествоЕдиницМеркурий,
	|		втОстаткиПромЕдИзм.Предприятие КАК Предприятие,
	//---> MSK/Osipov.A 01.11.2021 Задача SUP77-602408
	|		втОстаткиПромЕдИзм.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
	|		втОстаткиПромЕдИзм.ЕстьРучнаяУстановкаРасхода КАК ЕстьРучнаяУстановкаРасхода,
	|		втОстаткиПромЕдИзм.КоличествоЕдиницМеркурийКРасходу КАК КоличествоЕдиницМеркурийКРасходу
	//<--- MSK/Osipov.A 01.11.2021 Задача SUP77-602408
	|	ИЗ
	|		втОстаткиПромЕдИзм КАК втОстаткиПромЕдИзм
	//---> SPB/Mochalov.Y 22.01.2020 задача SUP77-592478 (падают отгрузки при задваивании единиц измерения у номенклатуры)
	//|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник._ЕдиницыИзмеренияОперучет КАК _ЕдиницыИзмеренияОперучет
	|			ЛЕВОЕ СОЕДИНЕНИЕ втЕдиницыИзмеренияОперучет КАК _ЕдиницыИзмеренияОперучет
	//<--- SPB/Mochalov.Y 22.01.2020 задача SUP77-592478 (падают отгрузки при задваивании единиц измерения у номенклатуры)
	|			ПО втОстаткиПромЕдИзм.ЕдиницаИзмеренияУчетнойСистемы = _ЕдиницыИзмеренияОперучет.ЕдиницаПоКлассификатору
	|				И втОстаткиПромЕдИзм.НоменклатураУчетнойСистемы = _ЕдиницыИзмеренияОперучет.Владелец
	//---> SPB/Mochalov.Y 22.01.2020 задача SUP77-592478 (падают отгрузки при задваивании единиц измерения у номенклатуры)
	////---> SPB/Mochalov.Y 09.07.2019 задача SUP77-589249 (Некорректно учитывались отгруженные остатки при формировании транспортной операции)
	//|				И _ЕдиницыИзмеренияОперучет.ПометкаУдаления = ЛОЖЬ
	////<--- SPB/Mochalov.Y 09.07.2019 задача SUP77-589249 (Некорректно учитывались отгруженные остатки при формировании транспортной операции)
	//<--- SPB/Mochalov.Y 22.01.2020 задача SUP77-592478 (падают отгрузки при задваивании единиц измерения у номенклатуры)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		втОстаткиВТранспортныхОперациях.НоменклатураУчетнойСистемы,
	|		-втОстаткиВТранспортныхОперациях.КоличествоБазЕд,
	|		втОстаткиВТранспортныхОперациях.ЕдиницаИзмеренияМеркурий,
	|		-втОстаткиВТранспортныхОперациях.КоличествоЕдиницМеркурий,
	|		втОстаткиВТранспортныхОперациях.ПредприятиеОтправитель,
	//---> MSK/Osipov.A 07.12.2021 Задача SUP77-602408
	|		втОстаткиВТранспортныхОперациях.ЗаписьСкладскогоЖурнала,
	|		ЛОЖЬ,
	|		-втОстаткиВТранспортныхОперациях.КоличествоЕдиницМеркурий
	//<--- MSK/Osipov.A 07.12.2021 Задача SUP77-602408
	|	ИЗ
	|		втОстаткиВТранспортныхОперациях КАК втОстаткиВТранспортныхОперациях
	|	ГДЕ
	|		НЕ втОстаткиВТранспортныхОперациях.ТранспортнаяОперация.Проведен) КАК Таб
	|
	|СГРУППИРОВАТЬ ПО
	|	Таб.НоменклатураУчетнойСистемы,
	|	Таб.ЕдиницаИзмеренияМеркурий,
	|	Таб.ЗаписьСкладскогоЖурнала,
	|	Таб.Предприятие
	|
	|ИМЕЮЩИЕ
	|	СУММА(Таб.КоличествоЕдиницМеркурий) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЗаписьСкладскогоЖурнала
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таб.Номенклатура КАК Номенклатура,
	|	Таб.ЕдиницаИзмеренияМеркурий КАК ЕдиницаИзмеренияМеркурий,
	|	СУММА(Таб.КоличествоБазЕд) КАК КоличествоБазЕд,
	|	СУММА(Таб.КоличествоЕдиницМеркурий) КАК КоличествоЕдиницМеркурий,
	|	Таб.ТранспортнаяОперация КАК ТранспортнаяОперация,
	|	Таб.ПредприятиеОтправитель КАК ПредприятиеОтправитель
	|ПОМЕСТИТЬ втОсталосьПеренестиВТранспортныеОперации
	|ИЗ
	|	(ВЫБРАТЬ
	|		втКОтгрузкеВсего.Номенклатура КАК Номенклатура,
	|		втКОтгрузкеВсего.КоличествоБазЕд КАК КоличествоБазЕд,
	|		втКОтгрузкеВсего.ЕдиницаИзмеренияМеркурий КАК ЕдиницаИзмеренияМеркурий,
	|		втКОтгрузкеВсего.КоличествоЕдиницМеркурий КАК КоличествоЕдиницМеркурий,
	|		втКОтгрузкеВсего.ТранспортнаяОперация КАК ТранспортнаяОперация,
	|		втКОтгрузкеВсего.ПредприятиеОтправитель КАК ПредприятиеОтправитель
	|	ИЗ
	|		втКОтгрузкеВсего КАК втКОтгрузкеВсего
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		втОстаткиВТранспортныхОперациях.НоменклатураУчетнойСистемы,
	|		-втОстаткиВТранспортныхОперациях.КоличествоБазЕд,
	|		втОстаткиВТранспортныхОперациях.ЕдиницаИзмеренияМеркурий,
	|		-втОстаткиВТранспортныхОперациях.КоличествоЕдиницМеркурий,
	|		втОстаткиВТранспортныхОперациях.ТранспортнаяОперация,
	|		втОстаткиВТранспортныхОперациях.ПредприятиеОтправитель
	|	ИЗ
	|		втОстаткиВТранспортныхОперациях КАК втОстаткиВТранспортныхОперациях) КАК Таб
	|
	|СГРУППИРОВАТЬ ПО
	|	Таб.Номенклатура,
	|	Таб.ЕдиницаИзмеренияМеркурий,
	|	Таб.ТранспортнаяОперация,
	|	Таб.ПредприятиеОтправитель
	|
	|ИМЕЮЩИЕ
	|	СУММА(Таб.КоличествоЕдиницМеркурий) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТранспортнаяОперация
	|;
	//---> SPB/Kaverzin.A 17.12.2021 Задача SUP77-602822	
	//Упаковки в транспортных операциях
	|" + ?(Константы._ЗаполнятьУпаковкиПриПеремещенииПродукции.Получить(), ТекстЗапросаУпаковкиВТранспортныхОперациях, "") + "
	| 
	//<--- SPB/Kaverzin.A 17.12.2021 Задача SUP77-602822
	|// 13 ТаблицаОстатков //////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОстаткиПромЗаписьЖурнала.Предприятие КАК Предприятие,
	|	втОстаткиПромЗаписьЖурнала.НоменклатураУчетнойСистемы КАК Номенклатура,
	|	втОстаткиПромЗаписьЖурнала.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
	|	втОстаткиПромЗаписьЖурнала.КоличествоБазЕд КАК КоличествоБазЕд,
	//---> SPB/Mochalov.Y 25.02.2020 задача SUP77-592921 (Меркурий Молоко для капучино)
	//|	втОстаткиПромЗаписьЖурнала.КоличествоЕдиницМеркурий КАК КоличествоЕдиницМеркурий,
	|	ВЫРАЗИТЬ(втОстаткиПромЗаписьЖурнала.КоличествоЕдиницМеркурий КАК Число(15,6)) КАК КоличествоЕдиницМеркурий,
	//<--- SPB/Mochalov.Y 25.02.2020 задача SUP77-592921 (Меркурий Молоко для капучино)
	//---> MSK/Osipov.A 01.11.2021 Задача SUP77-602408
	|	втОстаткиПромЗаписьЖурнала.КоличествоЕдиницМеркурийКРасходу КАК КоличествоЕдиницМеркурийКРасходу,
	|	втОстаткиПромЗаписьЖурнала.ЕстьРучнаяУстановкаРасхода КАК ЕстьРучнаяУстановкаРасхода,
	//<--- MSK/Osipov.A 01.11.2021 Задача SUP77-602408
	|	втОстаткиПромЗаписьЖурнала.ЕдиницаИзмеренияМеркурий КАК ЕдиницаИзмеренияМеркурий,
	|	ЕСТЬNULL(втПродукцияПодОтгрузку.ПроизводственнаяОперация, ЗНАЧЕНИЕ(Документ.ПроизводственныеОперации.ПустаяСсылка)) КАК ПроизводственнаяОперация,
	//---> SPB/Mochalov.Y 15.05.2019 задача SUP77-588160 (справки ВСД с истекшим сроком годности)
	//|	втОстаткиПромЗаписьЖурнала.ЗаписьСкладскогоЖурнала.ДатаОкончанияСрокаГодностиОкончание КАК ДатаОкончанияСрокаГодностиОкончание,
	//|	втОстаткиПромЗаписьЖурнала.ЗаписьСкладскогоЖурнала.ДатаОкончанияСрокаГодностиНачало КАК ДатаОкончанияСрокаГодностиНачало,
	|	НАЧАЛОПЕРИОДА(втОстаткиПромЗаписьЖурнала.ЗаписьСкладскогоЖурнала.ДатаОкончанияСрокаГодностиОкончание, ДЕНЬ) КАК ДатаОкончанияСрокаГодностиОкончание,
	|	НАЧАЛОПЕРИОДА(втОстаткиПромЗаписьЖурнала.ЗаписьСкладскогоЖурнала.ДатаОкончанияСрокаГодностиНачало, ДЕНЬ) КАК ДатаОкончанияСрокаГодностиНачало,
	//<--- SPB/Mochalov.Y 15.05.2019 задача SUP77-588160 (справки ВСД с истекшим сроком годности)
	//---> SPB/Mochalov.Y 22.01.2020 задача SUP77-592478 (падают отгрузки при задваивании единиц измерения у номенклатуры)
	//|	втОстаткиПромЗаписьЖурнала.ЗаписьСкладскогоЖурнала.ДатаВыработкиНачало КАК ДатаВыработкиНачало
	|	НАЧАЛОПЕРИОДА(втОстаткиПромЗаписьЖурнала.ЗаписьСкладскогоЖурнала.ДатаВыработкиНачало, ДЕНЬ) КАК ДатаВыработкиНачало
	//<--- SPB/Mochalov.Y 22.01.2020 задача SUP77-592478 (падают отгрузки при задваивании единиц измерения у номенклатуры)
	|ИЗ
	|	втОстаткиПромЗаписьЖурнала КАК втОстаткиПромЗаписьЖурнала
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПродукцияВыпущеннаяПодОтгрузку КАК втПродукцияПодОтгрузку
	|		ПО втОстаткиПромЗаписьЖурнала.ЗаписьСкладскогоЖурнала = втПродукцияПодОтгрузку.ЗаписьСкладскогоЖурнала
	//---> MSK/Osipov.A 24.09.2021 Задача SUP77-601729
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений._ПриоритетСписанияТоваров.СрезПоследних() КАК ПриоритетСписания
	|		ПО втОстаткиПромЗаписьЖурнала.ЗаписьСкладскогоЖурнала = ПриоритетСписания.ЗаписьСкладскогоЖурнала
	//<--- MSK/Osipov.A 24.09.2021 Задача SUP77-601729
	|
	|УПОРЯДОЧИТЬ ПО
	|	втОстаткиПромЗаписьЖурнала.НоменклатураУчетнойСистемы,
	|	втОстаткиПромЗаписьЖурнала.Предприятие,
	//---> MSK/Osipov.A 24.09.2021 Задача SUP77-601729
	//---> MSK/Osipov.A 01.11.2021 Задача SUP77-602408
	|	втОстаткиПромЗаписьЖурнала.КоличествоЕдиницМеркурийКРасходу УБЫВ,
	//<--- MSK/Osipov.A 01.11.2021 Задача SUP77-602408
	|	ЕСТЬNULL(ПриоритетСписания.Приоритет, 0) УБЫВ,
	|	втПродукцияПодОтгрузку.ЗаписьСкладскогоЖурнала.ДатаОкончанияСрокаГодностиНачало,
	|	втПродукцияПодОтгрузку.ЗаписьСкладскогоЖурнала.ДатаОкончанияСрокаГодностиОкончание,
	//<--- MSK/Osipov.A 24.09.2021 Задача SUP77-601729
	|	втОстаткиПромЗаписьЖурнала.ЗаписьСкладскогоЖурнала.ДатаВыработкиНачало
	|;
	|
	|// 14 ТаблицаПереноса //////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОсталосьПеренестиВТранспортныеОперацииПром.Номенклатура КАК Номенклатура,
	|	втОсталосьПеренестиВТранспортныеОперацииПром.Номенклатура._Производится КАК НоменклатураПроизводится,
	|	втОсталосьПеренестиВТранспортныеОперацииПром.Номенклатура._ЕдиницаХраненияОстатков.ЕдиницаПоКлассификатору КАК ХранениеЕдиницаПоКлассификатору,
	|	втОсталосьПеренестиВТранспортныеОперацииПром.Номенклатура._ЕдиницаХраненияОстатков.Коэффициент КАК ХранениеКоэффициент,
	|	втОсталосьПеренестиВТранспортныеОперацииПром.КоличествоБазЕд КАК КоличествоБазЕд,
	|	втОсталосьПеренестиВТранспортныеОперацииПром.ЕдиницаИзмеренияМеркурий КАК ЕдиницаИзмеренияМеркурий,
	//---> SPB/Mochalov.Y 25.02.2020 задача SUP77-592921 (Меркурий Молоко для капучино)
	//|	втОсталосьПеренестиВТранспортныеОперацииПром.КоличествоЕдиницМеркурий КАК КоличествоЕдиницМеркурий,
	|	ВЫРАЗИТЬ(втОсталосьПеренестиВТранспортныеОперацииПром.КоличествоЕдиницМеркурий КАК ЧИСЛО(15,6)) КАК КоличествоЕдиницМеркурий,
	//<--- SPB/Mochalov.Y 25.02.2020 задача SUP77-592921 (Меркурий Молоко для капучино)
	|	втОсталосьПеренестиВТранспортныеОперацииПром.ТранспортнаяОперация КАК ТранспортнаяОперация,
	|	втОсталосьПеренестиВТранспортныеОперацииПром.ПредприятиеОтправитель КАК ПредприятиеОтправитель,
	|	втКОтгрузкеВсего.ПроизводственнаяОперация КАК ПроизводственнаяОперация,
	|	втКОтгрузкеВсего.ПроизведеноКоличествоХранЕд КАК ПроизведеноКоличествоХранЕд,
	|	втКОтгрузкеВсего.ЕдиницаПоКлассификатору КАК ЕдиницаПоКлассификатору,
	//---> SPB/Mochalov.Y 26.04.2019 задача SUP77-588160 (справки ВСД с истекшим сроком годности)
	|	отгрузка.ДатаТТН КАК ДатаТТН,
	//<--- SPB/Mochalov.Y 26.04.2019 задача SUP77-588160 (справки ВСД с истекшим сроком годности)
	|	втКОтгрузкеВсего.ПеремещениеОперучет КАК ПеремещениеОперучет,
	//---> SPB/Kaverzin.A 17.12.2021 Задача SUP77-602822	
	//Упаковки в транспортных операциях
	|	втКОтгрузкеВсего.Коэффициент,
	//<--- SPB/Kaverzin.A 17.12.2021 Задача SUP77-602822	
	//---> SPB/Kaverzin.A 21.02.2022 PRJ-137
	|	втКОтгрузкеВсего.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	//<--- SPB/Kaverzin.A 21.02.2022 PRJ-137
	|ИЗ
	|	втОсталосьПеренестиВТранспортныеОперации КАК втОсталосьПеренестиВТранспортныеОперацииПром
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКОтгрузкеВсего КАК втКОтгрузкеВсего
	|		ПО втОсталосьПеренестиВТранспортныеОперацииПром.Номенклатура = втКОтгрузкеВсего.Номенклатура
	|			И втОсталосьПеренестиВТранспортныеОперацииПром.ТранспортнаяОперация = втКОтгрузкеВсего.ТранспортнаяОперация
	//---> SPB/Mochalov.Y 26.04.2019 задача SUP77-588160 (справки ВСД с истекшим сроком годности)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТранспортныеОперации КАК отгрузка
	|		ПО отгрузка.Ссылка = втОсталосьПеренестиВТранспортныеОперацииПром.ТранспортнаяОперация
	//<--- SPB/Mochalov.Y 26.04.2019 задача SUP77-588160 (справки ВСД с истекшим сроком годности)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТранспортнаяОперация,
	|	ПроизводственнаяОперация
	|;
	|
	|// 15 ТаблицаФормированияЗаявокПоТранспортнымОперациям //////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втНезакрытыеТранспортныеОперации.ТранспортнаяОперация КАК ТранспортнаяОперация
	|ИЗ
	|	втНезакрытыеТранспортныеОперации КАК втНезакрытыеТранспортныеОперации
	|		ЛЕВОЕ СОЕДИНЕНИЕ втОсталосьПеренестиВТранспортныеОперации КАК втОсталосьПеренестиВТранспортныеОперации
	|		ПО втНезакрытыеТранспортныеОперации.ТранспортнаяОперация = втОсталосьПеренестиВТранспортныеОперации.ТранспортнаяОперация
	|		ЛЕВОЕ СОЕДИНЕНИЕ втЖурналСостоянийЗаявок КАК ЖурналСостояний
	|		ПО втНезакрытыеТранспортныеОперации.ТранспортнаяОперация = ЖурналСостояний.ДокументСсылка
	|ГДЕ
	|	втОсталосьПеренестиВТранспортныеОперации.ТранспортнаяОперация ЕСТЬ NULL
	|	И (ЖурналСостояний.ДокументСсылка ЕСТЬ NULL
	|			ИЛИ (&ОбрабатыватьОтклоненные И ЖурналСостояний.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыЗаявок.Отклонена))
	|			ИЛИ ЖурналСостояний.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыЗаявок.ОшибкаОтправкиЗапроса)
	|			ИЛИ ЖурналСостояний.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыЗаявок.Черновик))
	|;
	|
	|// 16 Запрос статусов отправленных заявок //////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(МАКСИМУМ(ЖурналСостояний.ДокументСсылка ССЫЛКА Документ.ТранспортныеОперации), ЛОЖЬ) КАК ОтветПоТранспортнымОперациям,
	|	ЕСТЬNULL(МАКСИМУМ(ЖурналСостояний.ДокументСсылка ССЫЛКА Документ.ПроизводственныеОперации), ЛОЖЬ) КАК ОтветПоПроизводственнымОперациям
	|ИЗ
	|	втЖурналСостоянийЗаявок КАК ЖурналСостояний
	|ГДЕ
	|	(ЖурналСостояний.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыЗаявок.IDПолучен)
	|			ИЛИ ЖурналСостояний.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыЗаявок.Обрабатывается)
	|			ИЛИ ЖурналСостояний.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыЗаявок.ОшибкаОбработкиОтвета))
	|;
	|
	|// 17 Проставка пометок Отражено в меркурий //////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	_ПеремещенияМеркурий.ПеремещениеОперучет КАК ПеремещениеОперучет,
	|	_ПеремещенияМеркурий.Номенклатура КАК Номенклатура
	|ИЗ
	|	РегистрСведений._ПеремещенияМеркурий КАК _ПеремещенияМеркурий
	|		ЛЕВОЕ СОЕДИНЕНИЕ втЖурналСостоянийЗаявок КАК ЖурналСостояний
	|		ПО _ПеремещенияМеркурий.ТранспортнаяОперация = ЖурналСостояний.ДокументСсылка
	|ГДЕ
	|	ЖурналСостояний.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыЗаявок.УспешноОбработана)
	|	И НЕ _ПеремещенияМеркурий.ОтраженоВМеркурий
	|;
	|
	|// 18 Отправка в облако //////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втНезакрытыеДокументы.Ссылка КАК Ссылка
	|ИЗ
	|	втНезакрытыеДокументы КАК втНезакрытыеДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ втЖурналСостоянийЗаявок КАК ЖурналСостояний
	|		ПО втНезакрытыеДокументы.Ссылка = ЖурналСостояний.ДокументСсылка
	|ГДЕ
	|	втНезакрытыеДокументы.Ссылка ССЫЛКА Документ.ПроизводственныеОперации
	|	И (ЖурналСостояний.Статус ЕСТЬ NULL
	|			ИЛИ ЖурналСостояний.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыЗаявок.ОшибкаОтправкиЗапроса))";
	#КонецОбласти
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	//---> SPB/Mochalov.Y 23.01.2020 задача SUP77-592478 (падают отгрузки при задваивании единиц измерения у номенклатуры)
	//ТаблицаОстатков = РезультатЗапроса[12].Выгрузить();
	//ТаблицаПереноса = РезультатЗапроса[13].Выгрузить();
	//ТаблицаФормированияЗаявокПоТранспортнымОперациям = РезультатЗапроса[14].Выгрузить();
	ЗапросовВПакете = РезультатЗапроса.ВГраница();
	ТаблицаОстатков = РезультатЗапроса[ЗапросовВПакете-5].Выгрузить();
	ТаблицаПереноса = РезультатЗапроса[ЗапросовВПакете-4].Выгрузить();
	ТаблицаФормированияЗаявокПоТранспортнымОперациям = РезультатЗапроса[ЗапросовВПакете-3].Выгрузить();
	//<--- SPB/Mochalov.Y 23.01.2020 задача SUP77-592478 (падают отгрузки при задваивании единиц измерения у номенклатуры)
	
	//---> SPB/Kaverzin.A 17.12.2021 Задача SUP77-602822
	//Упаковки в транспортных операциях
	Если Константы._ЗаполнятьУпаковкиПриПеремещенииПродукции.Получить() Тогда
		ТаблицаУпаковокПоПриходом = РезультатЗапроса[ЗапросовВПакете-6].Выгрузить();
	Иначе
		ТаблицаУпаковокПоПриходом = Новый ТаблицаЗначений;
	КонецЕсли;	
	//<--- SPB/Kaverzin.A 17.12.2021 Задача SUP77-602822
	
	// На основе анализа выполним обработку ответов для каждого типа документов.
	//---> SPB/Mochalov.Y 23.01.2020 задача SUP77-592478 (падают отгрузки при задваивании единиц измерения у номенклатуры)
	//ВыборкаДанных = РезультатЗапроса[15].Выбрать();
	ВыборкаДанных = РезультатЗапроса[ЗапросовВПакете-2].Выбрать();
	//<--- SPB/Mochalov.Y 23.01.2020 задача SUP77-592478 (падают отгрузки при задваивании единиц измерения у номенклатуры)
	Если ВыборкаДанных.Следующий() Тогда
		Если ВыборкаДанных.ОтветПоТранспортнымОперациям Тогда
			РегламентныеЗаданияСлужебный.ВыполнитьРегламентноеЗаданиеВручную(Метаданные.РегламентныеЗадания.ОбработкаОтветаПоТранспортнымОперациям);
			НужнаЕщеОднаИтерация = Истина;
		КонецЕсли;
		Если ВыборкаДанных.ОтветПоПроизводственнымОперациям Тогда
			РегламентныеЗаданияСлужебный.ВыполнитьРегламентноеЗаданиеВручную(Метаданные.РегламентныеЗадания.ОбработкаОтветаПоПроизводственнымОперациям);
			НужнаЕщеОднаИтерация = Истина;
		КонецЕсли;
	КонецЕсли;
	
	// Обновляем записи для отправки в Оперучет по закрытым транспортным операциям.
	//---> SPB/Mochalov.Y 23.01.2020 задача SUP77-592478 (падают отгрузки при задваивании единиц измерения у номенклатуры)
	//ВыборкаДанных = РезультатЗапроса[16].Выбрать();
	ВыборкаДанных = РезультатЗапроса[ЗапросовВПакете-1].Выбрать();
	//<--- SPB/Mochalov.Y 23.01.2020 задача SUP77-592478 (падают отгрузки при задваивании единиц измерения у номенклатуры)
	Пока ВыборкаДанных.Следующий() Цикл
		МенеджерЗаписи = РегистрыСведений._ПеремещенияМеркурий.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.ПеремещениеОперучет = ВыборкаДанных.ПеремещениеОперучет;
		МенеджерЗаписи.Номенклатура        = ВыборкаДанных.Номенклатура;
		МенеджерЗаписи.Прочитать();
		МенеджерЗаписи.ОтраженоВМеркурий = Истина;
		МенеджерЗаписи.Записать();
	КонецЦикла;
	
	ТаблицаОстатков.Индексы.Добавить("ПроизводственнаяОперация");
	ТаблицаОстатков.Индексы.Добавить("Номенклатура");
	
	ТаблицаСозданияПроизводственныхОпераций = Новый ТаблицаЗначений;
	ТаблицаСозданияПроизводственныхОпераций.Колонки.Добавить("Дата");
	ТаблицаСозданияПроизводственныхОпераций.Колонки.Добавить("Организация");
	ТаблицаСозданияПроизводственныхОпераций.Колонки.Добавить("Контрагент");
	ТаблицаСозданияПроизводственныхОпераций.Колонки.Добавить("Предприятие");
	ТаблицаСозданияПроизводственныхОпераций.Колонки.Добавить("НоменклатураУчетнойСистемы");
	ТаблицаСозданияПроизводственныхОпераций.Колонки.Добавить("КоличествоЕдиницМеркурий");
	ТаблицаСозданияПроизводственныхОпераций.Колонки.Добавить("ЕдиницаИзмеренияМеркурий");
	ТаблицаСозданияПроизводственныхОпераций.Колонки.Добавить("ПеремещениеОперучет");
	ТаблицаСозданияПроизводственныхОпераций.Колонки.Добавить("ПроизводственнаяОперация");
	
	Попытка
		НачатьТранзакцию();
		ТранспортнаяОперацияСсылка = Неопределено;
		ТранспортнаяОперация = Неопределено;
		ИзмененаТранспортнаяОперация = Ложь;
		Для Каждого СтрокаПереноса Из ТаблицаПереноса Цикл
			
			// Начало строк, относящися с новой транспортной операции.
			Если СтрокаПереноса.ТранспортнаяОперация <> ТранспортнаяОперацияСсылка Тогда
				
				Если ЗначениеЗаполнено(ТранспортнаяОперацияСсылка)
					И ИзмененаТранспортнаяОперация Тогда
					//---> MSK/Fedorchuk.V 07.08.2020 SUP77-595700
					// Устанавливаем ответственного в соответствии с настройками
					УстановитьОтветственного(ТранспортнаяОперация);
					//<--- MSK/Fedorchuk.V 07.08.2020 SUP77-59570
					// Это не первая итерация, записываем объект.
					ТранспортнаяОперация.Записать();
					ИзмененаТранспортнаяОперация = Ложь;
				КонецЕсли;
				
				ТранспортнаяОперацияСсылка = СтрокаПереноса.ТранспортнаяОперация;
				ТранспортнаяОперация = ТранспортнаяОперацияСсылка.ПолучитьОбъект();
			КонецЕсли;
			
			// Списание выпуска под перемещение.
			Если ЗначениеЗаполнено(СтрокаПереноса.ПроизводственнаяОперация) Тогда
				
				// Если оформление производственной операции "зависло", дожидаемся успешного подтверждения,
				// списываем из ее прихода, а уже потом из "свободных" остатков.
				РегистрСостояний = РегистрыСведений.ЖурналРегистрацииСостоянийЗаявокНаОформлениеОпераций;
				ТекущийСтатус = РегистрСостояний.ТекущийСтатусДокумента(СтрокаПереноса.ПроизводственнаяОперация);
				Если ТекущийСтатус <> Справочники.СтатусыЗаявок.УспешноОбработана Тогда
					Продолжить;
				КонецЕсли;
				
				СтруктураПоиска = Новый Структура;
				СтруктураПоиска.Вставить("ПроизводственнаяОперация", СтрокаПереноса.ПроизводственнаяОперация);
				СтруктураПоиска.Вставить("Номенклатура", СтрокаПереноса.Номенклатура);
				СтрокиОстатков = ТаблицаОстатков.НайтиСтроки(СтруктураПоиска);
				Для Каждого СтрокаОстатков Из СтрокиОстатков Цикл
					
					//---> SPB/Mochalov.Y 15.05.2019 задача SUP77-588160 (справки ВСД с истекшим сроком годности)
					// просроченные не отгружаем
					Если СтрокаОстатков.ДатаОкончанияСрокаГодностиНачало <= СтрокаПереноса.ДатаТТН 
						И СтрокаОстатков.ДатаОкончанияСрокаГодностиОкончание <= СтрокаПереноса.ДатаТТН Тогда
						Продолжить;
					КонецЕсли;
					//<--- SPB/Mochalov.Y 15.05.2019 задача SUP77-588160 (справки ВСД с истекшим сроком годности)
					
					//---> SPB/Mochalov.Y 22.01.2020 задача SUP77-592478 (падают отгрузки при задваивании единиц измерения у номенклатуры)
					Если СтрокаОстатков.ДатаВыработкиНачало > СтрокаПереноса.ДатаТТН Тогда
						Продолжить;
					КонецЕсли;
					//<--- SPB/Mochalov.Y 22.01.2020 задача SUP77-592478 (падают отгрузки при задваивании единиц измерения у номенклатуры)
					
					СписываемЕдиницМеркурий = Мин(СтрокаОстатков.КоличествоЕдиницМеркурий, СтрокаПереноса.КоличествоЕдиницМеркурий);
					
					ДобавитьПродукциюВТранспортнуюОперацию(
						ТранспортнаяОперация,
						СтрокаОстатков.ЗаписьСкладскогоЖурнала,
						СтрокаОстатков.Номенклатура,
						СписываемЕдиницМеркурий);
					ИзмененаТранспортнаяОперация = Истина;
					
					// Транспортная операция могла перейти к следующему состоянию - оформлению заявки.
					НужнаЕщеОднаИтерация = Истина;
					
					// Количество к переносу уменьшаем.
					// Если к переносу еще что-то осталось, далее продолжаем списание свободных остатков.
					СтрокаПереноса.КоличествоЕдиницМеркурий = СтрокаПереноса.КоличествоЕдиницМеркурий - СписываемЕдиницМеркурий;
					
					СтрокаОстатков.КоличествоЕдиницМеркурий = СтрокаОстатков.КоличествоЕдиницМеркурий - СписываемЕдиницМеркурий;
					
					//---> SPB/Kaverzin.A 17.12.2021 Задача SUP77-602822	
					ДополнитьТранспортнуюОперациюУпаковками(ТранспортнаяОперация, СтрокаПереноса, СтрокаОстатков.ЗаписьСкладскогоЖурнала, ТаблицаУпаковокПоПриходом)			
					//<--- SPB/Kaverzin.A 17.12.2021 Задача SUP77-602822								
				КонецЦикла;
				
				Если СтрокаПереноса.КоличествоЕдиницМеркурий = 0 Тогда
					Продолжить;
				КонецЕсли;
				
			КонецЕсли;
			
			// Списание свободных остатков.
			СтрокаНачалаПоиска = ТаблицаОстатков.Найти(СтрокаПереноса.Номенклатура, "Номенклатура");
			Если СтрокаНачалаПоиска <> Неопределено Тогда
				
				ИндексСтроки = ТаблицаОстатков.Индекс(СтрокаНачалаПоиска);
				Для ТекущийИндекс = ИндексСтроки По ТаблицаОстатков.Количество() - 1 Цикл
					
					СтрокаОстатков = ТаблицаОстатков[ТекущийИндекс];
					
					//---> SPB/Mochalov.Y 15.05.2019 задача SUP77-588160 (справки ВСД с истекшим сроком годности)
					// просроченные не отгружаем
					Если СтрокаОстатков.ДатаОкончанияСрокаГодностиНачало <= СтрокаПереноса.ДатаТТН 
						И СтрокаОстатков.ДатаОкончанияСрокаГодностиОкончание <= СтрокаПереноса.ДатаТТН Тогда
						Продолжить;
					КонецЕсли;
					//<--- SPB/Mochalov.Y 15.05.2019 задача SUP77-588160 (справки ВСД с истекшим сроком годности)
					
					//---> SPB/Mochalov.Y 22.01.2020 задача SUP77-592478 (падают отгрузки при задваивании единиц измерения у номенклатуры)
					Если СтрокаОстатков.ДатаВыработкиНачало > СтрокаПереноса.ДатаТТН Тогда
						Продолжить;
					КонецЕсли;
					//<--- SPB/Mochalov.Y 22.01.2020 задача SUP77-592478 (падают отгрузки при задваивании единиц измерения у номенклатуры)
					
					Если ЗначениеЗаполнено(СтрокаОстатков.ПроизводственнаяОперация) Тогда
						// Такие остатки списываем адресно, в конкретную транспортную операцию (см. выше).
						Продолжить;
					КонецЕсли;
					
					Если СтрокаОстатков.Номенклатура <> СтрокаПереноса.Номенклатура Тогда
						// Конец секции подходящей номенклатуры, можно прекратить поиск.
						Прервать;
					КонецЕсли;
					Если СтрокаОстатков.Предприятие <> СтрокаПереноса.ПредприятиеОтправитель Тогда
						// Предприятие не подходит, пропускаем.
						Продолжить;
					КонецЕсли;
					Если СтрокаОстатков.ЕдиницаИзмеренияМеркурий <> СтрокаПереноса.ЕдиницаИзмеренияМеркурий Тогда
						// Единица не подходит, пропускаем.
						Продолжить;
					КонецЕсли;
					Если СтрокаОстатков.КоличествоЕдиницМеркурий = 0 Тогда
						// Уже нечего списывать, пропускаем.
						Продолжить;
					КонецЕсли;
					СписываемЕдиницМеркурий = Мин(СтрокаОстатков.КоличествоЕдиницМеркурий, СтрокаПереноса.КоличествоЕдиницМеркурий);
					
					//---> MSK/Osipov.A 01.11.2021 Задача SUP77-602408
					Если СтрокаОстатков.ЕстьРучнаяУстановкаРасхода Тогда
						СписываемЕдиницМеркурий = Мин(СписываемЕдиницМеркурий, СтрокаОстатков.КоличествоЕдиницМеркурийКРасходу);
					КонецЕсли;
					Если СписываемЕдиницМеркурий <= 0 Тогда
						Продолжить;
					КонецЕсли;
					//<--- MSK/Osipov.A 01.11.2021 Задача SUP77-602408
					
					 ДобавитьПродукциюВТранспортнуюОперацию(
						ТранспортнаяОперация,
						СтрокаОстатков.ЗаписьСкладскогоЖурнала,
						СтрокаОстатков.Номенклатура,
						СписываемЕдиницМеркурий);
					ИзмененаТранспортнаяОперация = Истина;
					НужнаЕщеОднаИтерация = Истина;
					
					СтрокаПереноса.КоличествоЕдиницМеркурий = СтрокаПереноса.КоличествоЕдиницМеркурий - СписываемЕдиницМеркурий;
					СтрокаОстатков.КоличествоЕдиницМеркурий = СтрокаОстатков.КоличествоЕдиницМеркурий - СписываемЕдиницМеркурий;
					
					//---> MSK/Osipov.A 01.11.2021 Задача SUP77-602408
					Если СтрокаОстатков.ЕстьРучнаяУстановкаРасхода Тогда
						СтрокаОстатков.КоличествоЕдиницМеркурийКРасходу = СтрокаОстатков.КоличествоЕдиницМеркурийКРасходу - СписываемЕдиницМеркурий;
					КонецЕсли;
					//<--- MSK/Osipov.A 01.11.2021 Задача SUP77-602408
					
					//---> SPB/Kaverzin.A 17.12.2021 Задача SUP77-602822	
					ДополнитьТранспортнуюОперациюУпаковками(ТранспортнаяОперация, СтрокаПереноса, СтрокаОстатков.ЗаписьСкладскогоЖурнала, ТаблицаУпаковокПоПриходом);			
					//<--- SPB/Kaverzin.A 17.12.2021 Задача SUP77-602822			
					
					Если СтрокаПереноса.КоличествоЕдиницМеркурий = 0 Тогда
						Прервать;
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(СтрокаПереноса.ПроизводственнаяОперация)
				И СтрокаПереноса.НоменклатураПроизводится
				И СтрокаПереноса.КоличествоЕдиницМеркурий <> 0 Тогда
				
				ДобавлениеПроизводственнойОперации = ТаблицаСозданияПроизводственныхОпераций.Добавить();
				ДобавлениеПроизводственнойОперации.ПеремещениеОперучет = СтрокаПереноса.ПеремещениеОперучет;
				
				СвойстваТранспортнойОперации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ТранспортнаяОперацияСсылка, "Дата,Организация,КонтрагентОтправитель,ПредприятиеОтправитель");
				ДобавлениеПроизводственнойОперации.Дата        = СвойстваТранспортнойОперации.Дата - 1;
				ДобавлениеПроизводственнойОперации.Организация = СвойстваТранспортнойОперации.Организация;
				ДобавлениеПроизводственнойОперации.Контрагент  = СвойстваТранспортнойОперации.КонтрагентОтправитель;
				ДобавлениеПроизводственнойОперации.Предприятие = СвойстваТранспортнойОперации.ПредприятиеОтправитель;
				
				ДобавлениеПроизводственнойОперации.НоменклатураУчетнойСистемы = СтрокаПереноса.Номенклатура;
				ДобавлениеПроизводственнойОперации.КоличествоЕдиницМеркурий   = СтрокаПереноса.КоличествоЕдиницМеркурий;
				ДобавлениеПроизводственнойОперации.ЕдиницаИзмеренияМеркурий   = СтрокаПереноса.ЕдиницаИзмеренияМеркурий;
				
			КонецЕсли;
			
		КонецЦикла;
		
		// Окончание заполнения транспортных операций.
		Если ЗначениеЗаполнено(ТранспортнаяОперацияСсылка)
			И ИзмененаТранспортнаяОперация Тогда
			//---> MSK/Fedorchuk.V 07.08.2020 SUP77-595700
			// Устанавливаем ответственного в соответствии с настройками
			УстановитьОтветственного(ТранспортнаяОперация);
			//<--- MSK/Fedorchuk.V 07.08.2020 SUP77-59570
			// Это не первая итерация, записываем объект.
			ТранспортнаяОперация.Записать();
		КонецЕсли;
		
		// Формируем заявки по только что созданным документам, а также по зависшим (например, из-за лицензии).
		МассивДокументов = ТаблицаФормированияЗаявокПоТранспортнымОперациям.ВыгрузитьКолонку("ТранспортнаяОперация");
		//---> SPB/Mochalov.Y 23.01.2020 задача SUP77-592478 (падают отгрузки при задваивании единиц измерения у номенклатуры)
		//ВыборкаДанных = РезультатЗапроса[17].Выбрать();
		ВыборкаДанных = РезультатЗапроса[ЗапросовВПакете].Выбрать();
		//<--- SPB/Mochalov.Y 23.01.2020 задача SUP77-592478 (падают отгрузки при задваивании единиц измерения у номенклатуры)
		Пока ВыборкаДанных.Следующий() Цикл
			Если МассивДокументов.Найти(ВыборкаДанных.Ссылка) = Неопределено Тогда
				МассивДокументов.Добавить(ВыборкаДанных.Ссылка);
			КонецЕсли;
		КонецЦикла;
		
		ЗаполнитьУсловияРегионализации(МассивДокументов);
		
		//---> SPB/Mochalov.Y 20.04.2020 задача SUP77-593694 (Не отгружается сметана. У прихода время больше, чем у перемещения)
		ПереставитьВремяТранспортныхОпераций(МассивДокументов);
		//<--- SPB/Mochalov.Y 20.04.2020 задача SUP77-593694 (Не отгружается сметана. У прихода время больше, чем у перемещения)

		//---> MSK/Fedorchuk.V 26.08.2020 SUP77-595801
		// Не отправляем документы, в получателях которых установлено свойство "Исключать из автоматической отправки ВСД"

		МассивКонтрагентов = _ИнтеграцияОперучетМеркурийПовтИсп.ПолучателиИсключаемыеИзАвтоматическойОтправкиВСД();
	
		Если МассивКонтрагентов.Количество() > 0 Тогда
			
			ЗапросИсключений = Новый Запрос(
				"ВЫБРАТЬ
				|	ТранспортныеОперации.Ссылка КАК Ссылка
				|ИЗ
				|	Документ.ТранспортныеОперации КАК ТранспортныеОперации
				|ГДЕ
				|	ТранспортныеОперации.Ссылка В(&МассивДокументов)
				|	И ТранспортныеОперации.КонтрагентПолучатель В(&МассивКонтрагентов)");
			
			ЗапросИсключений.УстановитьПараметр("МассивДокументов", МассивДокументов);
			ЗапросИсключений.УстановитьПараметр("МассивКонтрагентов", МассивКонтрагентов);
			РезультатЗапросаИсключений = ЗапросИсключений.Выполнить();
			ВыборкаИсключений = РезультатЗапросаИсключений.Выбрать();
			
			Пока ВыборкаИсключений.Следующий() Цикл
				МассивДокументов.Удалить(МассивДокументов.Найти(ВыборкаИсключений.Ссылка));
			КонецЦикла;
			
		КонецЕсли;
		
		//<--- MSK/Fedorchuk.V 26.08.2020 SUP77-595801
		
		// В режиме логирования отправку заявок не делаем, чтобы контролировать процесс.
		Если Не РежимОтладки Тогда
			Если МассивДокументов.Количество() > 0 Тогда
				Для Каждого ДокументСсылка Из МассивДокументов Цикл
					МассивИзОдногоДокумента = Новый Массив;
					МассивИзОдногоДокумента.Добавить(ДокументСсылка);
					// Отправка заявки
					ИнтеграцияВетисAPIОтправкаЗаявокНаОформление.СформироватьЗаявки(МассивИзОдногоДокумента);
				КонецЦикла;
				РегламентныеЗаданияСлужебный.ВыполнитьРегламентноеЗаданиеВручную(Метаданные.РегламентныеЗадания.ОтправкаТранспортныхОпераций);
				НужнаЕщеОднаИтерация = Истина;
			КонецЕсли;
		КонецЕсли;
		
		// Создание производства под перемещения (сводно).
		ТаблицаПеремещенийСПроизводством = ТаблицаСозданияПроизводственныхОпераций.Скопировать();
		//---> SPB/Mochalov.Y 22.01.2020 задача SUP77-592478 (падают отгрузки при задваивании единиц измерения у номенклатуры)
		///ТаблицаПеремещенийСПроизводством.Свернуть("ПеремещениеОперучет,НоменклатураУчетнойСистемы,Контрагент,Предприятие", "КоличествоЕдиницМеркурий");
		ТаблицаПеремещенийСПроизводством.Свернуть("Дата,ПеремещениеОперучет,НоменклатураУчетнойСистемы,Контрагент,Предприятие", "КоличествоЕдиницМеркурий");
		//<--- SPB/Mochalov.Y 22.01.2020 задача SUP77-592478 (падают отгрузки при задваивании единиц измерения у номенклатуры)
		
		ТаблицаСозданияПроизводственныхОпераций.Свернуть("Дата,Организация,Контрагент,Предприятие,НоменклатураУчетнойСистемы,ЕдиницаИзмеренияМеркурий,ПроизводственнаяОперация", "КоличествоЕдиницМеркурий");
		Для Каждого ДанныеПроизводственнойОперации Из ТаблицаСозданияПроизводственныхОпераций Цикл
			
			ПараметрыПроизводственнойОперации = ПараметрыПроизводственнойОперации();
			
			ЗаполнитьЗначенияСвойств(ПараметрыПроизводственнойОперации, ДанныеПроизводственнойОперации);
			
			ПроизводственнаяОперацияСсылка = СоздатьЗаполнитьПроизводственнуюОперацию(ПараметрыПроизводственнойОперации);
			
			ДанныеПроизводственнойОперации.ПроизводственнаяОперация = ПроизводственнаяОперацияСсылка;
			
			НужнаЕщеОднаИтерация = Истина;
			
		КонецЦикла;
		
		// Записываем ссылки в регистр с перемещениями.
		СтруктураПоиска = Новый Структура;
		//---> SPB/Mochalov.Y 22.01.2020 задача SUP77-592478 (падают отгрузки при задваивании единиц измерения у номенклатуры)
		СтруктураПоиска.Вставить("Дата");
		//<--- SPB/Mochalov.Y 22.01.2020 задача SUP77-592478 (падают отгрузки при задваивании единиц измерения у номенклатуры)
		СтруктураПоиска.Вставить("Контрагент");
		СтруктураПоиска.Вставить("Предприятие");
		СтруктураПоиска.Вставить("НоменклатураУчетнойСистемы");
		ТаблицаСозданияПроизводственныхОпераций.Индексы.Добавить("Контрагент");
		ТаблицаСозданияПроизводственныхОпераций.Индексы.Добавить("Предприятие");
		ТаблицаСозданияПроизводственныхОпераций.Индексы.Добавить("НоменклатураУчетнойСистемы");
		Для Каждого КлючПоиска Из ТаблицаПеремещенийСПроизводством Цикл
			
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, КлючПоиска);
			ДанныеПроизводства = ТаблицаСозданияПроизводственныхОпераций.НайтиСтроки(СтруктураПоиска)[0];
			
			// Обновляем запись регистра перемещений Оперучет.
			МенеджерЗаписи = РегистрыСведений._ПеремещенияМеркурий.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.ПеремещениеОперучет = КлючПоиска.ПеремещениеОперучет;
			МенеджерЗаписи.Номенклатура        = КлючПоиска.НоменклатураУчетнойСистемы;
			МенеджерЗаписи.Прочитать();
			
			МенеджерЗаписи.ПроизводственнаяОперация = ДанныеПроизводства.ПроизводственнаяОперация;
			
			ЕдиницаХраненияОстатков = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(КлючПоиска.НоменклатураУчетнойСистемы, "_ЕдиницаХраненияОстатков");
			МенеджерЗаписи.ПроизведеноКоличествоХранЕд = КлючПоиска.КоличествоЕдиницМеркурий
				/ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(КлючПоиска.НоменклатураУчетнойСистемы, "_КоличествоЕдиницМеркурийВБазовойЕдинице")
				/ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЕдиницаХраненияОстатков, "Коэффициент");
				
			МенеджерЗаписи.Записать();
			
		КонецЦикла;
		
		// В режиме логирования отправку заявок не делаем, чтобы контролировать процесс.
		Если Не РежимОтладки Тогда
			МассивДокументов = ТаблицаСозданияПроизводственныхОпераций.ВыгрузитьКолонку("ПроизводственнаяОперация");
			Для Каждого ДокументСсылка Из МассивДокументов Цикл
				МассивИзОдногоДокумента = Новый Массив;
				МассивИзОдногоДокумента.Добавить(ДокументСсылка);
				// Отправка заявки
				ИнтеграцияВетисAPIОтправкаЗаявокНаОформление.СформироватьЗаявки(МассивИзОдногоДокумента);
			КонецЦикла;
			Если МассивДокументов.Количество() > 0 Тогда
				РегламентныеЗаданияСлужебный.ВыполнитьРегламентноеЗаданиеВручную(Метаданные.РегламентныеЗадания.ОтправкаПроизводственныхОпераций);
			КонецЕсли;
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ЗаписьЖурналаРегистрации(СобытиеИнтеграцияОперучетМеркурий(), УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

Процедура СоздатьПустыеТранспортныеОперации() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	_ПеремещенияМеркурий.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ втНоменклатура
	|ИЗ
	|	РегистрСведений._ПеремещенияМеркурий КАК _ПеремещенияМеркурий
	|ГДЕ
	|	_ПеремещенияМеркурий.ТранспортнаяОперация = ЗНАЧЕНИЕ(Документ.ТранспортныеОперации.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втНоменклатура.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(МАКСИМУМ(СоответствиеПродукцииНоменклатуреУчетнойСистемы.Продукция), НЕОПРЕДЕЛЕНО) КАК Продукция,
	|	втНоменклатура.Номенклатура._ЕдиницаИзмеренияМеркурий КАК ЕдиницаИзмеренияМеркурий,
	|	втНоменклатура.Номенклатура._КоличествоЕдиницМеркурийВБазовойЕдинице КАК КоличествоЕдиницМеркурийВБазовойЕдинице
	|ИЗ
	|	втНоменклатура КАК втНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеПродукцииНоменклатуреУчетнойСистемы КАК СоответствиеПродукцииНоменклатуреУчетнойСистемы
	|		ПО втНоменклатура.Номенклатура = СоответствиеПродукцииНоменклатуреУчетнойСистемы.НоменклатураУчетнойСистемы
	|
	|СГРУППИРОВАТЬ ПО
	|	втНоменклатура.Номенклатура";
	ВыборкаДанных = Запрос.Выполнить().Выбрать();
	Если ВыборкаДанных.Количество() = 0 Тогда
		// Нет строк для обработки.
		Возврат;
	Иначе
		// Выполняем проверку на заполненность необходимых реквизитов.
		ОписаниеОшибки = "";
		Пока ВыборкаДанных.Следующий() Цикл
			СтрокаОписанияОшибки = "";
			Если Не ЗначениеЗаполнено(ВыборкаДанных.Продукция) Тогда
				СтрокаОписанияОшибки = СтрокаОписанияОшибки
					+ ?(ЗначениеЗаполнено(СтрокаОписанияОшибки), ", ", "")
					+ "продукция Меркурий";
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ВыборкаДанных.ЕдиницаИзмеренияМеркурий) Тогда
				СтрокаОписанияОшибки = СтрокаОписанияОшибки
					+ ?(ЗначениеЗаполнено(СтрокаОписанияОшибки), ", ", "")
					+ "единица измерения Меркурий";
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ВыборкаДанных.КоличествоЕдиницМеркурийВБазовойЕдинице) Тогда
				СтрокаОписанияОшибки = СтрокаОписанияОшибки
					+ ?(ЗначениеЗаполнено(СтрокаОписанияОшибки), ", ", "")
					+ "количество единиц Меркурий в базовой единице";
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаОписанияОшибки) Тогда
				ОписаниеОшибки = ОписаниеОшибки +
					?(ЗначениеЗаполнено(ОписаниеОшибки), Символы.ПС, "")
					+ "Для номенклатуры " + ВыборкаДанных.Номенклатура
					+ " не указаны: "
					+ СтрокаОписанияОшибки;
			КонецЕсли;
		КонецЦикла;
		
		Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда
			ЗаписьЖурналаРегистрации(СобытиеИнтеграцияОперучетМеркурий(), УровеньЖурналаРегистрации.Ошибка,,, ОписаниеОшибки);
			//---> SPB/Mochalov.Y 06.11.2019 задача SUP77-591301 (Не отгрузились ВСД при неуказании сопоставления для одной из номенклатур)
			//ВызватьИсключение ОписаниеОшибки;
			Сообщить(ОписаниеОшибки);
			//<--- SPB/Mochalov.Y 06.11.2019 задача SUP77-591301 (Не отгрузились ВСД при неуказании сопоставления для одной из номенклатур)
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	_ПеремещенияМеркурий.ДатаПеремещения КАК Дата,
	|	_ПеремещенияМеркурий.ДатаПеремещения КАК ДатаТТН,
	|	СвязиМеждуКонтрагентамиИПредприятиями.Контрагент КАК КонтрагентОтправитель,
	|	isnull(СвязиМеждуКонтрагентамиИПредприятиямиПолучатель.Контрагент, СубъектыПолучатели.ХозяйствующийСубъект) КАК КонтрагентПолучатель,
	|	_ПеремещенияМеркурий.НомерПеремещения КАК НомерТТН,
	|	СоответствиеОрганизацийОрганизациямУчетнойСистемы.Организация КАК Организация,
	|	_ПеремещенияМеркурий.ПеремещениеОперучет КАК ПеремещениеОперучет,
	|	_ПеремещенияМеркурий.Номенклатура КАК Номенклатура,
	|	_ПеремещенияМеркурий.Номенклатура._СпособХраненияПриПеревозке КАК СпособХраненияПриПеревозке,
	|	_ПеремещенияМеркурий.Номенклатура._Производится КАК Номенклатура_Производится,
	|	_ПеремещенияМеркурий.ПодразделениеОтправитель КАК ПодразделениеОтправитель,
	|	ЕСТЬNULL(ПредприятиеОтправитель.Предприятие, ЗНАЧЕНИЕ(Справочник.Предприятия.ПустаяСсылка)) КАК ПредприятиеОтправитель,
	|	_ПеремещенияМеркурий.ПодразделениеПолучатель КАК ПодразделениеПолучатель,
	|	ЕСТЬNULL(ПредприятиеПолучатель.Предприятие, ПредприятияКонргентовПолучатель.ПредприятиеВозврата) КАК ПредприятиеПолучатель,
	|	_ПеремещенияМеркурий.ТранспортноеСредство КАК Транспорт
	|ИЗ
	|	РегистрСведений._ПеремещенияМеркурий КАК _ПеремещенияМеркурий
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеПредприятийСкладамУчетнойСистемы КАК ПредприятиеОтправитель
	|		ПО _ПеремещенияМеркурий.ПодразделениеОтправитель = ПредприятиеОтправитель.СкладУчетнойСистемы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеПредприятийСкладамУчетнойСистемы КАК ПредприятиеПолучатель
	|		ПО _ПеремещенияМеркурий.ПодразделениеПолучатель = ПредприятиеПолучатель.СкладУчетнойСистемы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязиМеждуКонтрагентамиИПредприятиями КАК СвязиМеждуКонтрагентамиИПредприятиями
	|		ПО (ПредприятиеОтправитель.Предприятие = СвязиМеждуКонтрагентамиИПредприятиями.Предприятие)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязиМеждуКонтрагентамиИПредприятиями КАК СвязиМеждуКонтрагентамиИПредприятиямиПолучатель
	|		ПО (ПредприятиеПолучатель.Предприятие = СвязиМеждуКонтрагентамиИПредприятиямиПолучатель.Предприятие)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеХозяйствующихСубъектовОрганизациямУчетнойСистемы КАК СоответствиеХозяйствующихСубъектовОрганизациямУчетнойСистемы
	|		ПО (СвязиМеждуКонтрагентамиИПредприятиями.Контрагент = СоответствиеХозяйствующихСубъектовОрганизациямУчетнойСистемы.ХозяйствующийСубъект)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОрганизацийОрганизациямУчетнойСистемы КАК СоответствиеОрганизацийОрганизациямУчетнойСистемы
	|		ПО (СоответствиеХозяйствующихСубъектовОрганизациямУчетнойСистемы.ОрганизацияУчетнойСистемы = СоответствиеОрганизацийОрганизациямУчетнойСистемы.ОрганизацияУчетнойСистемы)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеХозяйствующихСубъектовКонтрагентамУчетнойСистемы КАК СубъектыПолучатели
	|		ПО СубъектыПолучатели.КонтрагентУчетнойСистемы = _ПеремещенияМеркурий.КонтрагентУчетнойСистемы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений._ПараметрыВозвратовПоставщикам КАК ПредприятияКонргентовПолучатель
	|		ПО (ПредприятияКонргентовПолучатель.Контрагент = СубъектыПолучатели.ХозяйствующийСубъект)
	|ГДЕ
	|	_ПеремещенияМеркурий.ТранспортнаяОперация = ЗНАЧЕНИЕ(Документ.ТранспортныеОперации.ПустаяСсылка)
	|	И ( НЕ ПредприятиеПолучатель.Предприятие ЕСТЬ NULL
	|		ИЛИ _ПеремещенияМеркурий.ПеремещениеОперучет ССЫЛКА Документ._ВозвратТоваровПоставщику)
	//---> SPB/Mochalov.Y 06.11.2019 задача SUP77-591301 (Не отгрузились ВСД при неуказании сопоставления для одной из номенклатур)
	|	И _ПеремещенияМеркурий.Номенклатура В (ВЫБРАТЬ отбор.НоменклатураУчетнойСистемы ИЗ РегистрСведений.СоответствиеПродукцииНоменклатуреУчетнойСистемы КАК отбор)
	//<--- SPB/Mochalov.Y 06.11.2019 задача SUP77-591301 (Не отгрузились ВСД при неуказании сопоставления для одной из номенклатур)
	|
	|УПОРЯДОЧИТЬ ПО
	|	_ПеремещенияМеркурий.ДатаПеремещения,
	|	_ПеремещенияМеркурий.НомерПеремещения,
	|	СпособХраненияПриПеревозке";
	ВыборкаДанных = Запрос.Выполнить().Выбрать();
	
	СтруктураСортировки  = Новый Структура("ДатаТТН,НомерТТН,СпособХраненияПриПеревозке");
	ТранспортнаяОперация = Неопределено;
	Попытка
		
		НачатьТранзакцию();
		
		Пока ВыборкаДанных.Следующий() Цикл
			
			//---> SPB/Mochalov.Y 06.11.2019 задача SUP77-591301 (Не отгрузились ВСД при неуказании сопоставления для одной из номенклатур)
			Если Не ЗначениеЗаполнено(ВыборкаДанных.Организация) Тогда
				ОписаниеОшибки = НСтр("ru = 'Не указана организация для '") + " " + ВыборкаДанных.Организация;
				ЗаписьЖурналаРегистрации(СобытиеИнтеграцияОперучетМеркурий(), УровеньЖурналаРегистрации.Ошибка,,, ОписаниеОшибки);
				Сообщить(ОписаниеОшибки);
				Продолжить;
				//ВызватьИсключение ОписаниеОшибки;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ВыборкаДанных.ПредприятиеОтправитель) Тогда
				ОписаниеОшибки = НСтр("ru = 'Не указано предприятие для '") + " " + ВыборкаДанных.ПодразделениеОтправитель;
				ЗаписьЖурналаРегистрации(СобытиеИнтеграцияОперучетМеркурий(), УровеньЖурналаРегистрации.Ошибка,,, ОписаниеОшибки);
				Сообщить(ОписаниеОшибки);
				Продолжить;
				//ВызватьИсключение ОписаниеОшибки;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ВыборкаДанных.ПодразделениеПолучатель) Тогда
				ОписаниеОшибки = НСтр("ru = 'Не указано предприятие для '") + " " + ВыборкаДанных.ПодразделениеПолучатель;
				ЗаписьЖурналаРегистрации(СобытиеИнтеграцияОперучетМеркурий(), УровеньЖурналаРегистрации.Ошибка,,, ОписаниеОшибки);
				//ВызватьИсключение ОписаниеОшибки;
				Сообщить(ОписаниеОшибки);
				Продолжить;
			КонецЕсли;
			//<--- SPB/Mochalov.Y 06.11.2019 задача SUP77-591301 (Не отгрузились ВСД при неуказании сопоставления для одной из номенклатур)
			
			//---> SPB/Smirnov.S 20.10.2021 Задача №SUP77-602139
			//Пропускаем, если дата ТТН из будущего.
			МаксимальнаяДатаОтправляемыхВСД = МаксимальнаяДатаОтправляемыхВСД();
			Если НачалоДня(ВыборкаДанных.ДатаТТН) > МаксимальнаяДатаОтправляемыхВСД Тогда
				ОписаниеОшибки = НСтр("ru = 'ДатаТТН больше текущей'");
				ЗаписьЖурналаРегистрации(СобытиеИнтеграцияОперучетМеркурий(), УровеньЖурналаРегистрации.Ошибка,,, ОписаниеОшибки);
				//ВызватьИсключение ОписаниеОшибки;
				Сообщить(ОписаниеОшибки);
				Продолжить;
			КонецЕсли;
			//<--- SPB/Smirnov.S 20.10.2021 Задача №SUP77-602139
			
			
			Если СтруктураСортировки.ДатаТТН <> ВыборкаДанных.ДатаТТН
				Или СтруктураСортировки.НомерТТН <> ВыборкаДанных.НомерТТН
				Или СтруктураСортировки.СпособХраненияПриПеревозке <> ВыборкаДанных.СпособХраненияПриПеревозке Тогда
				
				ТранспортнаяОперация = Документы.ТранспортныеОперации.СоздатьДокумент();
				ЗаполнениеРеквизитовОбъектов.ЗаполнитьРеквизитыДокументовПоУмолчаниюОбработкаЗаполнения(ТранспортнаяОперация, Неопределено, "", Ложь);
				
				ЗаполнитьЗначенияСвойств(ТранспортнаяОперация, ВыборкаДанных, , "СпособХраненияПриПеревозке");
				Если ЗначениеЗаполнено(ВыборкаДанных.СпособХраненияПриПеревозке) Тогда
					ТранспортнаяОперация.СпособХраненияПриПеревозке = ВыборкаДанных.СпособХраненияПриПеревозке;
				КонецЕсли;
				
				//---> SPB/Mochalov.Y 11.09.2018 
				ТранспортнаяОперация.ДополнительныеСвойства.Вставить("_РеквизитыИсключаемыеИзПроверки", Новый Массив);
				ТранспортнаяОперация.ДополнительныеСвойства._РеквизитыИсключаемыеИзПроверки.Добавить("ТаблицаПродукция");
				Если ТранспортнаяОперация.ПроверитьЗаполнение() = Ложь Тогда
					ОписаниеОшибки = НСтр("ru = 'Обнаружены ошибки заполнения транспортной операции по подразделению :'") + ВыборкаДанных.ПодразделениеПолучатель
									+ НСтр("ru = ' на дату перемещения: '") + Формат(ВыборкаДанных.Дата, "ДФ=dd.MM.yyyy");
					ЗаписьЖурналаРегистрации(СобытиеИнтеграцияОперучетМеркурий(), УровеньЖурналаРегистрации.Ошибка,,, ОписаниеОшибки);
					//---> SPB/Mochalov.Y 06.11.2019 задача SUP77-591301 (Не отгрузились ВСД при неуказании сопоставления для одной из номенклатур)
					Сообщить(ОписаниеОшибки);
					//<--- SPB/Mochalov.Y 06.11.2019 задача SUP77-591301 (Не отгрузились ВСД при неуказании сопоставления для одной из номенклатур)
					Продолжить;
				КонецЕсли;
				//<--- SPB/Mochalov.Y 11.09.2018 
				
				//---> MSK/Fedorchuk.V 07.08.2020 SUP77-595700
				// Устанавливаем ответственного в соответствии с настройками
				УстановитьОтветственного(ТранспортнаяОперация);
				//<--- MSK/Fedorchuk.V 07.08.2020 SUP77-595700
				
				ТранспортнаяОперация.Записать();
				
				ЗаполнитьЗначенияСвойств(СтруктураСортировки, ВыборкаДанных);
				
			КонецЕсли;
			
			РСЗапись = РегистрыСведений._ПеремещенияМеркурий.СоздатьМенеджерЗаписи();
			РСЗапись.ПеремещениеОперучет = ВыборкаДанных.ПеремещениеОперучет;
			РСЗапись.Номенклатура        = ВыборкаДанных.Номенклатура;
			РСЗапись.Прочитать();
			РСЗапись.ТранспортнаяОперация = ТранспортнаяОперация.Ссылка;
			РСЗапись.Записать();
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ЗаписьЖурналаРегистрации(СобытиеИнтеграцияОперучетМеркурий(), УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

Процедура ДобавитьПродукциюВТранспортнуюОперацию(ТранспортнаяОперация, ЗаписьСкладскогоЖурнала, Номенклатура, Количество)
	
	ТаблицаПродукции = ТранспортнаяОперация.ТаблицаПродукция;
	НоваяСтрока = ТаблицаПродукции.Добавить();
	НоваяСтрока.GUIDСтроки = Строка(Новый УникальныйИдентификатор());
	НоваяСтрока.ЗаписьСкладскогоЖурнала    = ЗаписьСкладскогоЖурнала;
	НоваяСтрока.НоменклатураУчетнойСистемы = Номенклатура;
	НоваяСтрока.Количество                 = Количество;
	
	СтруктураРеквизитов = ЗаполнениеРеквизитовОбъектов.ПолучитьЗначенияРеквизитовТабличнойЧасти(ТранспортнаяОперация, "ТаблицаПродукция");
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураРеквизитов);
	
КонецПроцедуры

//---> SPB/Kaverzin.A 17.12.2021 Задача SUP77-602822	
//Упаковки в транспортных операциях
Процедура ДополнитьТранспортнуюОперациюУпаковками(ТранспортнаяОперация, СтрокаПереноса, ЗаписьСкладскогоЖурнала, ТаблицаУпаковок)
	
	//---> SPB/Kaverzin.A 21.02.2022 PRJ-137
	КоличествоУпаковокИзРегистра = СтрокаПереноса.КоличествоБазЕд / СтрокаПереноса.Коэффициент;
	//<--- SPB/Kaverzin.A 21.02.2022 PRJ-137
	Если Не Константы._ЗаполнятьУпаковкиПриПеремещенииПродукции.Получить() Тогда
		Возврат;
	КонецЕсли;	
	
	СтрокаТранспортнойОперации = ТранспортнаяОперация.ТаблицаПродукция[ТранспортнаяОперация.ТаблицаПродукция.Количество()-1];
	
	Отбор = Новый Структура("ЗаписьСкладскогоЖурнала", ЗаписьСкладскогоЖурнала);
	НайденныеСтроки = ТаблицаУпаковок.НайтиСтроки(Отбор);
	//Если есть данные по прихоходным операциям, то это номенклатура от поставщика.
	ЭтоНоменклатураОтПоставщика = НайденныеСтроки.Количество() > 0;
	Если ЭтоНоменклатураОтПоставщика Тогда
		НайденнаяУпаковка = НайденныеСтроки[0];

		//Если упаковки не заполнены.
		Если Не ЗначениеЗаполнено(НайденнаяУпаковка.Упаковка) Тогда
			ОписаниеОшибки = НСтр("ru = 'Ошибка заполнения упаковки для номенклатуры:'") + " " + НайденнаяУпаковка.НоменклатураУчетнойСистемы + " (" + НайденнаяУпаковка.Регистратор + ")";
			ЗаписьЖурналаРегистрации(СобытиеИнтеграцияОперучетМеркурийЛогАлгоритмов(), УровеньЖурналаРегистрации.Информация,,, ОписаниеОшибки);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	СтрокаУпаковок = ТранспортнаяОперация.СписокФизическихУпаковок.Добавить();
	СтрокаУпаковок.GUIDСтроки = СтрокаТранспортнойОперации.GUIDСтроки;
	
	Если ЭтоНоменклатураОтПоставщика Тогда
		//---> SPB/Kaverzin.A 21.02.2022 PRJ-137
		Если ЗначениеЗаполнено(СтрокаПереноса.ЕдиницаИзмерения.КоличествоЕдиницВУпаковке) И ЗначениеЗаполнено(СтрокаПереноса.ЕдиницаИзмерения.Упаковка)Тогда
			СтрокаУпаковок.Упаковка			= СтрокаПереноса.ЕдиницаИзмерения.Упаковка;
			СтрокаУпаковок.УровеньУпаковки	= Справочники.УровниУпаковок.ПромежуточныйУровень;
			КоличествоУпаковок				= КоличествоУпаковокИзРегистра / СтрокаПереноса.ЕдиницаИзмерения.КоличествоЕдиницВУпаковке;
		Иначе	
			//<--- SPB/Kaverzin.A 21.02.2022 PRJ-137
			ЗаполнитьЗначенияСвойств(СтрокаУпаковок, НайденнаяУпаковка);
			//---> SPB/Kaverzin.A 04.02.2022 Задача SUP77-603677
			//КоличествоВУпаковке = НайденнаяУпаковка.Количество / НайденнаяУпаковка.КоличествоУпаковок;
			КоличествоВУпаковке = НайденнаяУпаковка.Количество / ?(НайденнаяУпаковка.КоличествоУпаковок = 0, 1, НайденнаяУпаковка.КоличествоУпаковок);
			//<--- SPB/Kaverzin.A 04.02.2022 Задача SUP77-603677
			КоличествоУпаковок = СтрокаТранспортнойОперации.Количество / КоличествоВУпаковке;
		КонецЕсли;	
	Иначе
		КоличествоУпаковок	= КоличествоУпаковокИзРегистра;
		СтрокаУпаковок.Упаковка			= _ИнтеграцияОперучетМеркурийПовтИсп.ПолучитьУпаковкуПродуктовСобственногоПроизводства();
		СтрокаУпаковок.УровеньУпаковки	= Справочники.УровниУпаковок.ПромежуточныйУровень;
	КонецЕсли;
	
	Если НЕ Цел(КоличествоУпаковок) = КоличествоУпаковок Тогда
		КоличествоУпаковок = Цел(КоличествоУпаковок) + 1;
	КонецЕсли;
	СтрокаУпаковок.КоличествоУпаковок = КоличествоУпаковок;
		
КонецПроцедуры//<--- SPB/Kaverzin.A 17.12.2021 Задача SUP77-602822	

//---> SPB/Mochalov.Y 18.07.2018
Процедура ЗаполнитьУсловияРегионализации(МассивДокументов)
	
	//НачатьТранзакцию();
	РежимОтладки = Константы._РежимОтладки.Получить();
	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТранспортныеОперации.Организация КАК Организация,
	|	ТранспортныеОперации.Ссылка КАК Документ
	|ПОМЕСТИТЬ втДокументы
	|ИЗ
	|	Документ.ТранспортныеОперации КАК ТранспортныеОперации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Предприятия.КонтактнаяИнформация КАК Получатель
	|		ПО (Получатель.Ссылка = ТранспортныеОперации.ПредприятиеПолучатель)
	|			И (Получатель.НомерСтроки = 1)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Предприятия.КонтактнаяИнформация КАК Отправитель
	|		ПО (Отправитель.Ссылка = ТранспортныеОперации.ПредприятиеОтправитель)
	|			И (Отправитель.НомерСтроки = 1)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТранспортныеОперации.ТаблицаПродукция КАК Продукция
	|		ПО ТранспортныеОперации.Ссылка = Продукция.Ссылка
	|			И Продукция.РешениеПоПеревозке = ЗНАЧЕНИЕ(Справочник.ВидыТребованийДляПеремещения.ПустаяСсылка)
	|ГДЕ
	|	ТранспортныеОперации.Ссылка В(&МассивДокументов)
	|	И Отправитель.Регион <> Получатель.Регион
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Документы.Организация КАК Организация
	|ИЗ
	|	втДокументы КАК Документы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Организация КАК Организация,
	|	Документы.Документ КАК Документ
	|ИЗ
	|	втДокументы КАК Документы";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаОрганизации = РезультатЗапроса[1].Выбрать();
	ТаблицаДокументов = РезультатЗапроса[2].Выгрузить();
	
	Если ВыборкаОрганизации.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// по каждой организации делаем запрос и результаты складываем в общую таблицу УсловияПеремещенияПродукции
	УсловияПеремещенияПродукции = Неопределено;
	Пока ВыборкаОрганизации.Следующий() Цикл
		Отбор = Новый Структура("Организация", ВыборкаОрганизации.Организация);
		ТаблицаДокументовТекущая = ТаблицаДокументов.Скопировать(Отбор, "Документ");
		ТаблицаДокументовТекущая.Колонки.Добавить("Статус", Новый ОписаниеТипов("СправочникСсылка.СтатусыЗаявок"));
		ТаблицаДокументовТекущая.Колонки.Добавить("ИдентификаторЗаявки", Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(36)));
		ТаблицаДокументовТекущая.Колонки.Добавить("РезультатПолученияОтвета");
		ТаблицаДокументовТекущая.Колонки.Добавить("РезультатФормированияЗапроса");
		ТаблицаДокументовТекущая.Колонки.Добавить("Информация");
		
		Если РежимОтладки Тогда
			Продолжить;
		КонецЕсли;
		
		ДанныеРегионализации = ИнтеграцияВетисAPIОтправкаЗаявокНаОформление.ОтправитьДанныеНаПроверкуВозможностиОсуществленияПеревозки(ВыборкаОрганизации.Организация, ПараметрыСеанса.ТекущийПользователь, ТаблицаДокументовТекущая);
		Если ДанныеРегионализации = Неопределено Тогда
			ОписаниеОшибки = НСтр("ru = 'Не удалось получить проверки регионализации для организации '") + " " + ВыборкаОрганизации.Организация;
			ЗаписьЖурналаРегистрации(СобытиеИнтеграцияОперучетМеркурийЛогАлгоритмов(), УровеньЖурналаРегистрации.Ошибка,,, ОписаниеОшибки);
			Продолжить;
		КонецЕсли;
		
		Если УсловияПеремещенияПродукции = Неопределено Тогда
			УсловияПеремещенияПродукции = ДанныеРегионализации.УсловияПеремещенияПродукции;
		Иначе
			Для Каждого Строка Из ДанныеРегионализации.УсловияПеремещенияПродукции Цикл
				ЗаполнитьЗначенияСвойств(УсловияПеремещенияПродукции.Добавить(), Строка);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Если УсловияПеремещенияПродукции = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// заполняем табличную часть УсловияПеремещенияПродукции условиями регионализации и еще устанавливаем отметку РешениеПоПеревозке в тч. Продукция у проверенных строк
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("УсловияПеремещенияПродукции", УсловияПеремещенияПродукции);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	т.Документ КАК Документ,
	|	т.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
	|	т.Заболевание КАК Заболевание,
	|	т.НомерБлока КАК НомерБлока,
	|	т.УсловиеПеремещения КАК УсловиеПеремещения
	|ПОМЕСТИТЬ втУсловияПеремещенияПродукции
	|ИЗ
	|	&УсловияПеремещенияПродукции КАК т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Условия.Документ КАК Документ,
	|	Условия.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
	|	Условия.Заболевание КАК Заболевание,
	|	Условия.НомерБлока КАК НомерБлока,
	|	Условия.УсловиеПеремещения КАК УсловиеПеремещения,
	|	ИСТИНА КАК ВыполняетсяУсловие,
	|	Продукция.GUIDСтроки КАК GUIDСтроки
	|ИЗ
	|	втУсловияПеремещенияПродукции КАК Условия
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТранспортныеОперации.ТаблицаПродукция КАК Продукция
	|		ПО (Продукция.Ссылка = Условия.Документ)
	|			И (Продукция.ЗаписьСкладскогоЖурнала = Условия.ЗаписьСкладскогоЖурнала)
	|ИТОГИ ПО
	|	Документ";
	
	ВыборкаДокументы = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Документ");
	Пока ВыборкаДокументы.Следующий() Цикл
		ДокументОбъект = ВыборкаДокументы.Документ.ПолучитьОбъект();
		ДокументОбъект.УсловияПеремещенияПродукции.Очистить();
		ВыборкаСтрока = ВыборкаДокументы.Выбрать();
		Пока ВыборкаСтрока.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(ДокументОбъект.УсловияПеремещенияПродукции.Добавить(), ВыборкаСтрока);
		КонецЦикла;
		
		Отбор = Новый Структура("РешениеПоПеревозке", Справочники.ВидыТребованийДляПеремещения.ПустаяСсылка());
		НайденныеСтрокиПродукция = ДокументОбъект.ТаблицаПродукция.НайтиСтроки(Отбор);
		Для Каждого Строка Из НайденныеСтрокиПродукция Цикл
			Если ДокументОбъект.УсловияПеремещенияПродукции.Найти(Строка.GUIDСтроки, "GUIDСтроки") = Неопределено Тогда
				РешениеПоПеревозке = Справочники.ВидыТребованийДляПеремещения.ПеремещениеРазрешено;
			Иначе
				РешениеПоПеревозке = Справочники.ВидыТребованийДляПеремещения.ПеремещениеРазрешеноПриУсловии;
			КонецЕсли;
			Строка.РешениеПоПеревозке = РешениеПоПеревозке;
		КонецЦикла;
		
		Попытка
			//---> MSK/Fedorchuk.V 07.08.2020 SUP77-595700
			// Устанавливаем ответственного в соответствии с настройками
			УстановитьОтветственного(ДокументОбъект);
			//<--- MSK/Fedorchuk.V 07.08.2020 SUP77-59570
			ДокументОбъект.Записать();
		Исключение
			ОписаниеОшибки = ОписаниеОшибки();
			ЗаписьЖурналаРегистрации(СобытиеИнтеграцияОперучетМеркурийЛогАлгоритмов(), УровеньЖурналаРегистрации.Ошибка,,ВыборкаСтрока.Документ, ОписаниеОшибки);
		КонецПопытки;
	КонецЦикла;
	
	//ОтменитьТранзакцию();
	
КонецПроцедуры
//<--- SPB/Mochalov.Y 18.07.2018

//---> SPB/Mochalov.Y 20.04.2020 задача SUP77-593694 (Не отгружается сметана. У прихода время больше, чем у перемещения)
Процедура ПереставитьВремяТранспортныхОпераций(МассивДокументов)
	Если МассивДокументов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.УстановитьПараметр("НачалоТекущегоДня", НачалоДня(ТекущаяДата()));
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	тч.Ссылка КАК Ссылка,
	|	тч.Ссылка.Дата КАК Дата,
	|	тч.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала
	|ПОМЕСТИТЬ втТранспортныеОперации
	|ИЗ
	|	Документ.ТранспортныеОперации.ТаблицаПродукция КАК тч
	|ГДЕ
	|	тч.Ссылка В(&МассивДокументов)
	|	И тч.Ссылка.Дата >= &НачалоТекущегоДня
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	отгрузки.Ссылка КАК Ссылка,
	|	МАКСИМУМ(приходы.Период) КАК Период
	|ИЗ
	|	РегистрНакопления.ДвижениеПродукции КАК приходы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втТранспортныеОперации КАК отгрузки
	|		ПО (отгрузки.ЗаписьСкладскогоЖурнала = приходы.ЗаписьСкладскогоЖурнала)
	|			И (отгрузки.Дата <= приходы.Период)
	|			И (НАЧАЛОПЕРИОДА(приходы.Период, ДЕНЬ) = НАЧАЛОПЕРИОДА(отгрузки.Дата, ДЕНЬ))
	|ГДЕ
	|	приходы.Период >= &НачалоТекущегоДня
	|	И приходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|СГРУППИРОВАТЬ ПО
	|	отгрузки.Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ТранспортнаяОперацияОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ТранспортнаяОперацияОбъект.Дата = Мин(КонецДня(ТранспортнаяОперацияОбъект.Дата), Выборка.Период+1);
		//---> MSK/Fedorchuk.V 07.08.2020 SUP77-595700
		// Устанавливаем ответственного в соответствии с настройками
		УстановитьОтветственного(ТранспортнаяОперацияОбъект);
		//<--- MSK/Fedorchuk.V 07.08.2020 SUP77-59570
		ТранспортнаяОперацияОбъект.Записать();
	КонецЦикла;
	
КонецПроцедуры //<--- SPB/Mochalov.Y 20.04.2020 задача SUP77-593694 (Не отгружается сметана. У прихода время больше, чем у перемещения)

#КонецОбласти

#Область ДополнительныйВыпускМеркурий

Процедура ОбработатьВыпускДополнительнойПродукцииМеркурий(НужнаЕщеОднаИтерация, ОбрабатыватьОтклоненные = Ложь) Экспорт
	
	// Выпуск выполняем одновременно со списанием сырья.
	Возврат;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	_ВыпускДополнительнойПродукцииМеркурий.Номенклатура КАК Номенклатура,
	|	_ВыпускДополнительнойПродукцииМеркурий.Количество * _ВыпускДополнительнойПродукцииМеркурий.Номенклатура._ЕдиницаХраненияОстатков.Коэффициент * _ВыпускДополнительнойПродукцииМеркурий.Номенклатура._КоличествоЕдиницМеркурийВБазовойЕдинице КАК КоличествоЕдиницМеркурий,
	|	_ВыпускДополнительнойПродукцииМеркурий.Номенклатура._ЕдиницаИзмеренияМеркурий КАК ЕдиницаИзмеренияМеркурий,
	|	_ВыпускДополнительнойПродукцииМеркурий.Дата КАК Дата,
	|	_ВыпускДополнительнойПродукцииМеркурий.Подразделение КАК Подразделение,
	|	_ВыпускДополнительнойПродукцииМеркурий.ПроизводственнаяОперация КАК ПроизводственнаяОперация
	|ПОМЕСТИТЬ втНезакрытыеДокументы
	|ИЗ
	|	РегистрСведений._ВыпускДополнительнойПродукцииМеркурий КАК _ВыпускДополнительнойПродукцииМеркурий
	|ГДЕ
	|	НЕ _ВыпускДополнительнойПродукцииМеркурий.ОтраженоВМеркурий
	|ИНДЕКСИРОВАТЬ ПО
	|	ПроизводственнаяОперация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таб.ДокументСсылка КАК ДокументСсылка,
	|	Таб.Статус КАК Статус
	|ПОМЕСТИТЬ втСтатусы
	|ИЗ
	|	РегистрСведений.ЖурналРегистрацииСостоянийЗаявокНаОформлениеОпераций.СрезПоследних(
	|			,
	|			ДокументСсылка В
	|				(ВЫБРАТЬ
	|					втНезакрытыеДокументы.ПроизводственнаяОперация
	|				ИЗ
	|					втНезакрытыеДокументы КАК втНезакрытыеДокументы)) КАК Таб
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК ОтветПоПроизводственнымОперациям
	|ИЗ
	|	втСтатусы КАК ЖурналСостояний
	|ГДЕ
	|	(ЖурналСостояний.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыЗаявок.IDПолучен)
	|			ИЛИ ЖурналСостояний.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыЗаявок.Обрабатывается))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втНезакрытыеДокументы.Дата КАК Дата,
	|	втНезакрытыеДокументы.Номенклатура КАК Номенклатура,
	|	втНезакрытыеДокументы.Подразделение КАК Подразделение
	|ИЗ
	|	втНезакрытыеДокументы КАК втНезакрытыеДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтатусы КАК ЖурналСостояний
	|		ПО втНезакрытыеДокументы.ПроизводственнаяОперация = ЖурналСостояний.ДокументСсылка
	|ГДЕ
	|	ЖурналСостояний.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыЗаявок.УспешноОбработана)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втНезакрытыеДокументы.Номенклатура КАК НоменклатураУчетнойСистемы,
	|	втНезакрытыеДокументы.КоличествоЕдиницМеркурий КАК КоличествоЕдиницМеркурий,
	|	втНезакрытыеДокументы.ЕдиницаИзмеренияМеркурий КАК ЕдиницаИзмеренияМеркурий,
	|	втНезакрытыеДокументы.Дата КАК Дата,
	|	втНезакрытыеДокументы.Подразделение КАК Подразделение,
	|	втНезакрытыеДокументы.ПроизводственнаяОперация КАК ПроизводственнаяОперация,
	|	СвязиМеждуКонтрагентамиИПредприятиями.Контрагент КАК Контрагент,
	|	СоответствиеПредприятийСкладамУчетнойСистемы.Предприятие КАК Предприятие,
	|	СоответствиеОрганизацийОрганизациямУчетнойСистемы.Организация КАК Организация
	|ИЗ
	|	втНезакрытыеДокументы КАК втНезакрытыеДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеПредприятийСкладамУчетнойСистемы КАК СоответствиеПредприятийСкладамУчетнойСистемы
	|		ПО втНезакрытыеДокументы.Подразделение = СоответствиеПредприятийСкладамУчетнойСистемы.СкладУчетнойСистемы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязиМеждуКонтрагентамиИПредприятиями КАК СвязиМеждуКонтрагентамиИПредприятиями
	|		ПО (СоответствиеПредприятийСкладамУчетнойСистемы.Предприятие = СвязиМеждуКонтрагентамиИПредприятиями.Предприятие)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеХозяйствующихСубъектовОрганизациямУчетнойСистемы КАК СоответствиеХозяйствующихСубъектовОрганизациямУчетнойСистемы
	|		ПО (СвязиМеждуКонтрагентамиИПредприятиями.Контрагент = СоответствиеХозяйствующихСубъектовОрганизациямУчетнойСистемы.ХозяйствующийСубъект)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОрганизацийОрганизациямУчетнойСистемы КАК СоответствиеОрганизацийОрганизациямУчетнойСистемы
	|		ПО (СоответствиеХозяйствующихСубъектовОрганизациямУчетнойСистемы.ОрганизацияУчетнойСистемы = СоответствиеОрганизацийОрганизациямУчетнойСистемы.ОрганизацияУчетнойСистемы)
	|ГДЕ
	|	втНезакрытыеДокументы.ПроизводственнаяОперация = ЗНАЧЕНИЕ(Документ.ПроизводственныеОперации.ПустаяСсылка)";
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	// На основе анализа выполним обработку ответов для каждого типа документов.
	ВыборкаДанных = РезультатЗапроса[2].Выбрать();
	Если ВыборкаДанных.Следующий() Тогда
		Если ВыборкаДанных.ОтветПоПроизводственнымОперациям Тогда
			РегламентныеЗаданияСлужебный.ВыполнитьРегламентноеЗаданиеВручную(Метаданные.РегламентныеЗадания.ОбработкаОтветаПоПроизводственнымОперациям);
			НужнаЕщеОднаИтерация = Истина;
		КонецЕсли;
	КонецЕсли;
	
	// Обновляем записи для отправки в Оперучет по закрытым транспортным операциям.
	ВыборкаДанных = РезультатЗапроса[3].Выбрать();
	Пока ВыборкаДанных.Следующий() Цикл
		МенеджерЗаписи = РегистрыСведений._ВыпускДополнительнойПродукцииМеркурий.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Дата          = ВыборкаДанных.Дата;
		МенеджерЗаписи.Номенклатура  = ВыборкаДанных.Номенклатура;
		МенеджерЗаписи.Подразделение = ВыборкаДанных.Подразделение;
		МенеджерЗаписи.Прочитать();
		МенеджерЗаписи.ОтраженоВМеркурий = Истина;
		МенеджерЗаписи.Записать();
	КонецЦикла;
	
	// Создание производственных операций.
	ВыборкаДанных = РезультатЗапроса[4].Выбрать();
	Пока ВыборкаДанных.Следующий() Цикл
		
		ПараметрыПроизводственнойОперации = ПараметрыПроизводственнойОперации();
		ЗаполнитьЗначенияСвойств(ПараметрыПроизводственнойОперации, ВыборкаДанных);
		СоздатьЗаполнитьПроизводственнуюОперациюПодВыпускДополнительнойПродукции(
			ПараметрыПроизводственнойОперации, ВыборкаДанных.Подразделение);
		НужнаЕщеОднаИтерация = Истина;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СоздатьЗаполнитьПроизводственнуюОперациюПодВыпускДополнительнойПродукции(ПараметрыПроизводственнойОперации, Подразделение)
	
	РежимОтладки = Константы._РежимОтладки.Получить();

	// Обновляем запись регистра перемещений Оперучет.
	МенеджерЗаписи = РегистрыСведений._ВыпускДополнительнойПродукцииМеркурий.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Дата          = ПараметрыПроизводственнойОперации.Дата;
	МенеджерЗаписи.Подразделение = Подразделение;
	МенеджерЗаписи.Номенклатура  = ПараметрыПроизводственнойОперации.НоменклатураУчетнойСистемы;
	МенеджерЗаписи.Прочитать();
	
	ПроизводственнаяОперацияСсылка = СоздатьЗаполнитьПроизводственнуюОперацию(ПараметрыПроизводственнойОперации);
	
	МенеджерЗаписи.ПроизводственнаяОперация = ПроизводственнаяОперацияСсылка;
	МенеджерЗаписи.Записать();
	
	// Отправка заявки
	// В режиме логирования отправку заявок не делаем, чтобы контролировать процесс.
	Если Не РежимОтладки Тогда
		МассивДокументов = Новый Массив;
		МассивДокументов.Добавить(ПроизводственнаяОперацияСсылка);
		ИнтеграцияВетисAPIОтправкаЗаявокНаОформление.СформироватьЗаявки(МассивДокументов);
		РегламентныеЗаданияСлужебный.ВыполнитьРегламентноеЗаданиеВручную(Метаданные.РегламентныеЗадания.ОтправкаПроизводственныхОпераций);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СписаниеСырьяМеркурий

Процедура СоздатьПустыеДокументыЗавершенияПроизводства() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1 КАК Поле1
	|ИЗ
	|	РегистрСведений._СписаниеСырьяМеркурий КАК _СписаниеСырьяМеркурий
	|ГДЕ
	|	НЕ _СписаниеСырьяМеркурий.ОтраженоВМеркурий
	|	И _СписаниеСырьяМеркурий.ПроизводственнаяОперация = ЗНАЧЕНИЕ(Документ.ПроизводственныеОперации.ПустаяСсылка)
	|	И _СписаниеСырьяМеркурий.ВыходноеИзделие <> ЗНАЧЕНИЕ(Справочник.НоменклатураУчетнойСистемы.ПустаяСсылка)";
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	_СписаниеСырьяМеркурий.Дата КАК Дата,
	|	_СписаниеСырьяМеркурий.Подразделение КАК Подразделение,
	|	_СписаниеСырьяМеркурий.Номенклатура КАК Номенклатура,
	|	_СписаниеСырьяМеркурий.ВыходноеИзделие КАК ВыходноеИзделие,
	|	СоответствиеОрганизацийОрганизациямУчетнойСистемы.Организация КАК Организация,
	|	Предприятия.Предприятие КАК Предприятие,
	|	СвязиМеждуКонтрагентамиИПредприятиями.Контрагент КАК Контрагент,
	|	_АналитикаИдентификаторовПроизводственныхТранзакций.ИдентификаторПроизводственнойТранзакции КАК ИдентификаторТранзакции,
	//---> MSK/Osipov.A 12.11.2021 Задача SUP77-602408
	|	ЕСТЬNULL(_ВыпускДополнительнойПродукцииМеркурий.Номенклатура, _СписаниеСырьяМеркурий.ВыходноеИзделие) КАК НоменклатураУчетнойСистемы,
	//<--- MSK/Osipov.A 12.11.2021 Задача SUP77-602408
	|	_ВыпускДополнительнойПродукцииМеркурий.Количество * _ВыпускДополнительнойПродукцииМеркурий.Номенклатура._ЕдиницаХраненияОстатков.Коэффициент * _ВыпускДополнительнойПродукцииМеркурий.Номенклатура._КоличествоЕдиницМеркурийВБазовойЕдинице КАК КоличествоЕдиницМеркурий,
	|	_ВыпускДополнительнойПродукцииМеркурий.Номенклатура._ЕдиницаИзмеренияМеркурий КАК ЕдиницаИзмеренияМеркурий
	|ИЗ
	|	РегистрСведений._СписаниеСырьяМеркурий КАК _СписаниеСырьяМеркурий
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений._ВыпускДополнительнойПродукцииМеркурий КАК _ВыпускДополнительнойПродукцииМеркурий
	|		ПО _СписаниеСырьяМеркурий.Дата = _ВыпускДополнительнойПродукцииМеркурий.Дата
	|			И _СписаниеСырьяМеркурий.Подразделение = _ВыпускДополнительнойПродукцииМеркурий.Подразделение
	|			И _СписаниеСырьяМеркурий.ВыходноеИзделие = _ВыпускДополнительнойПродукцииМеркурий.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеПредприятийСкладамУчетнойСистемы КАК Предприятия
	|		ПО _СписаниеСырьяМеркурий.Подразделение = Предприятия.СкладУчетнойСистемы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязиМеждуКонтрагентамиИПредприятиями КАК СвязиМеждуКонтрагентамиИПредприятиями
	|		ПО (Предприятия.Предприятие = СвязиМеждуКонтрагентамиИПредприятиями.Предприятие)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеХозяйствующихСубъектовОрганизациямУчетнойСистемы КАК СоответствиеХозяйствующихСубъектовОрганизациямУчетнойСистемы
	|		ПО (СвязиМеждуКонтрагентамиИПредприятиями.Контрагент = СоответствиеХозяйствующихСубъектовОрганизациямУчетнойСистемы.ХозяйствующийСубъект)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОрганизацийОрганизациямУчетнойСистемы КАК СоответствиеОрганизацийОрганизациямУчетнойСистемы
	|		ПО (СоответствиеХозяйствующихСубъектовОрганизациямУчетнойСистемы.ОрганизацияУчетнойСистемы = СоответствиеОрганизацийОрганизациямУчетнойСистемы.ОрганизацияУчетнойСистемы)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений._АналитикаИдентификаторовПроизводственныхТранзакций КАК _АналитикаИдентификаторовПроизводственныхТранзакций
	|		ПО _СписаниеСырьяМеркурий.ВыходноеИзделие = _АналитикаИдентификаторовПроизводственныхТранзакций.Номенклатура
	|			И (НАЧАЛОПЕРИОДА(_СписаниеСырьяМеркурий.Дата, ДЕНЬ) = _АналитикаИдентификаторовПроизводственныхТранзакций.ДатаТранзакции)
	|ГДЕ
	|	НЕ _СписаниеСырьяМеркурий.ОтраженоВМеркурий
	|	И _СписаниеСырьяМеркурий.ПроизводственнаяОперация = ЗНАЧЕНИЕ(Документ.ПроизводственныеОперации.ПустаяСсылка)
	|	И _СписаниеСырьяМеркурий.ВыходноеИзделие <> ЗНАЧЕНИЕ(Справочник.НоменклатураУчетнойСистемы.ПустаяСсылка)
	|	И (НЕ _СписаниеСырьяМеркурий.ЕстьДополнительныйВыпуск ИЛИ НЕ _ВыпускДополнительнойПродукцииМеркурий.Номенклатура ЕСТЬ NULL)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Подразделение,
	|	ВыходноеИзделие";
	ВыборкаДанных = Запрос.Выполнить().Выбрать();
	
	СтруктураСортировки  = Новый Структура("Дата,Подразделение,ВыходноеИзделие");
	ПроизводственнаяОперацияСсылка = Неопределено;
	Попытка
		
		НачатьТранзакцию();
		
		Пока ВыборкаДанных.Следующий() Цикл
			
			Если СтруктураСортировки.Дата <> ВыборкаДанных.Дата
				Или СтруктураСортировки.Подразделение <> ВыборкаДанных.Подразделение
				Или СтруктураСортировки.ВыходноеИзделие <> ВыборкаДанных.ВыходноеИзделие Тогда
				
				ПараметрыПроизводственнойОперации = ПараметрыПроизводственнойОперации();
				ЗаполнитьЗначенияСвойств(ПараметрыПроизводственнойОперации, ВыборкаДанных);
				// Если есть доп. выпуск, он добавляется в производственную операцию.
				ПроизводственнаяОперацияСсылка = СоздатьЗаполнитьПроизводственнуюОперацию(ПараметрыПроизводственнойОперации, Истина);
				
				ЗаполнитьЗначенияСвойств(СтруктураСортировки, ВыборкаДанных);
				
			КонецЕсли;
			
			РСЗапись = РегистрыСведений._СписаниеСырьяМеркурий.СоздатьМенеджерЗаписи();
			РСЗапись.Дата            = ВыборкаДанных.Дата;
			РСЗапись.Номенклатура    = ВыборкаДанных.Номенклатура;
			РСЗапись.Подразделение   = ВыборкаДанных.Подразделение;
			РСЗапись.ВыходноеИзделие = ВыборкаДанных.ВыходноеИзделие;
			РСЗапись.Прочитать();
			РСЗапись.ПроизводственнаяОперация = ПроизводственнаяОперацияСсылка;
			РСЗапись.Записать();
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ЗаписьЖурналаРегистрации(СобытиеИнтеграцияОперучетМеркурий(), УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

Процедура ОбработатьСписаниеСырьяВПроизводство(НужнаЕщеОднаИтерация) Экспорт
	
	РежимОтладки = Константы._РежимОтладки.Получить();
	
	// Определяем дату начала для отсечения остатков из "будущего" по минимальной дате документов производства к обработке.
	ДатаОстатков = ТекущаяДата();
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(_СписаниеСырьяМеркурий.ПроизводственнаяОперация.Дата) КАК ДатаОстатков
	|ИЗ
	|	РегистрСведений._СписаниеСырьяМеркурий КАК _СписаниеСырьяМеркурий
	|ГДЕ
	|	НЕ _СписаниеСырьяМеркурий.ПроизводственнаяОперация.ПометкаУдаления
	|	И НЕ _СписаниеСырьяМеркурий.ОтраженоВМеркурий
	|	И _СписаниеСырьяМеркурий.ПроизводственнаяОперация <> ЗНАЧЕНИЕ(Документ.ПроизводственныеОперации.ПустаяСсылка)";
	ВыборкаДанных = Запрос.Выполнить().Выбрать();
	Если ВыборкаДанных.Следующий() Тогда
		ДатаОстатков = ВыборкаДанных.ДатаОстатков;
		Если ДатаОстатков = NULL Тогда
			// Нет документов к обработке.
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаОстатков", ДатаОстатков);
	//---> MSK/Osipov.A 01.11.2021 Задача SUP77-602408
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ПодготовитьВременныеТаблицыПартийКРасходу(Запрос.МенеджерВременныхТаблиц);
	//<--- MSK/Osipov.A 01.11.2021 Задача SUP77-602408
	// 1,2 Временные таблицы для общего использования.
	// 3,4. Сырье к списанию (в базовых единицах).
	// 5,6. Сырье в документах (в базовых единицах).
	// 7. Сырье, которое необходимо добавить в расход (разница двух предыдущих).
	// 8,9,10. Сырье на остатках (в т.ч. в базовых единицах).
	// 11. Таблица остатков.
	// 12. Таблица переноса.
	// 13. Таблица отправки заявок.
	// 14. Таблица получения ответа по заявкам.
	// 15. Таблица "закрытия" документов.
	Запрос.Текст =
	#Область Запрос
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	_СписаниеСырьяМеркурий.Дата КАК Дата,
	|	_СписаниеСырьяМеркурий.ПроизводственнаяОперация КАК ПроизводственнаяОперация,
	|	_СписаниеСырьяМеркурий.Подразделение КАК Подразделение,
	|	_СписаниеСырьяМеркурий.ВыходноеИзделие КАК ВыходноеИзделие
	|ПОМЕСТИТЬ втНезакрытыеОперации
	|ИЗ
	|	РегистрСведений._СписаниеСырьяМеркурий КАК _СписаниеСырьяМеркурий
	|ГДЕ
	|	НЕ _СписаниеСырьяМеркурий.ПроизводственнаяОперация = ЗНАЧЕНИЕ(Документ.ПроизводственныеОперации.ПустаяСсылка)
	|	И НЕ _СписаниеСырьяМеркурий.Номенклатура = ЗНАЧЕНИЕ(Справочник.НоменклатураУчетнойСистемы.ПустаяСсылка)
	|	И НЕ _СписаниеСырьяМеркурий.ОтраженоВМеркурий
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПроизводственнаяОперация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таб.ДокументСсылка КАК ДокументСсылка,
	|	Таб.Статус КАК Статус
	|ПОМЕСТИТЬ втЖурналСостоянийЗаявок
	|ИЗ
	|	РегистрСведений.ЖурналРегистрацииСостоянийЗаявокНаОформлениеОпераций.СрезПоследних(
	|			,
	|			ДокументСсылка В
	|				(ВЫБРАТЬ
	|					Таб.ПроизводственнаяОперация
	|				ИЗ
	|					втНезакрытыеОперации КАК Таб)) КАК Таб
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	_СписаниеСырьяМеркурий.Дата КАК Дата,
	|	_СписаниеСырьяМеркурий.Номенклатура КАК Номенклатура,
	|	_СписаниеСырьяМеркурий.ВыходноеИзделие КАК ВыходноеИзделие,
	|	_СписаниеСырьяМеркурий.Количество * _СписаниеСырьяМеркурий.Номенклатура._ЕдиницаХраненияОстатков.Коэффициент * _СписаниеСырьяМеркурий.Номенклатура._КоличествоЕдиницМеркурийВБазовойЕдинице КАК КоличествоЕдиницМеркурий,
	|	_СписаниеСырьяМеркурий.ПроизводственнаяОперация КАК ПроизводственнаяОперация,
	|	_СписаниеСырьяМеркурий.Подразделение КАК Подразделение
	|ПОМЕСТИТЬ втКРасходуВсегоПромПодразделение
	|ИЗ
	|	РегистрСведений._СписаниеСырьяМеркурий КАК _СписаниеСырьяМеркурий
	|ГДЕ
	|	НЕ _СписаниеСырьяМеркурий.ПроизводственнаяОперация = ЗНАЧЕНИЕ(Документ.ПроизводственныеОперации.ПустаяСсылка)
	|	И НЕ _СписаниеСырьяМеркурий.Номенклатура = ЗНАЧЕНИЕ(Справочник.НоменклатураУчетнойСистемы.ПустаяСсылка)
	|	И НЕ _СписаниеСырьяМеркурий.ОтраженоВМеркурий
	|	И НЕ _СписаниеСырьяМеркурий.НедостаточноСырьяВМеркурий
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втКРасходуВсегоПромПодразделение.Дата КАК Дата,
	|	втКРасходуВсегоПромПодразделение.Номенклатура КАК Номенклатура,
	|	втКРасходуВсегоПромПодразделение.ВыходноеИзделие КАК ВыходноеИзделие,
	|	втКРасходуВсегоПромПодразделение.КоличествоЕдиницМеркурий КАК КоличествоЕдиницМеркурий,
	|	втКРасходуВсегоПромПодразделение.ПроизводственнаяОперация КАК ПроизводственнаяОперация,
	|	втКРасходуВсегоПромПодразделение.Подразделение КАК Подразделение,
	|	СоответствиеПредприятийСкладамУчетнойСистемы.Предприятие КАК Предприятие
	|ПОМЕСТИТЬ втКРасходуВсего
	|ИЗ
	|	втКРасходуВсегоПромПодразделение КАК втКРасходуВсегоПромПодразделение
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеПредприятийСкладамУчетнойСистемы КАК СоответствиеПредприятийСкладамУчетнойСистемы
	|		ПО втКРасходуВсегоПромПодразделение.Подразделение = СоответствиеПредприятийСкладамУчетнойСистемы.СкладУчетнойСистемы
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	ПроизводственнаяОперация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втНезакрытыеОперации.Дата КАК Дата,
	|	втНезакрытыеОперации.Подразделение КАК Подразделение,
	|	втНезакрытыеОперации.ВыходноеИзделие КАК ВыходноеИзделие,
	|	втНезакрытыеОперации.ПроизводственнаяОперация КАК ПроизводственнаяОперация,
	|	втНезакрытыеОперации.ПроизводственнаяОперация.Предприятие КАК Предприятие,
	|	ПроизводственныеОперацииТаблицаСырье.НоменклатураУчетнойСистемы КАК НоменклатураУчетнойСистемы,
	|	ПроизводственныеОперацииТаблицаСырье.Количество КАК КоличествоЕдиницМеркурий,
	|	ПроизводственныеОперацииТаблицаСырье.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
	|	ПроизводственныеОперацииТаблицаСырье.ЗаписьСкладскогоЖурнала.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ПОМЕСТИТЬ втРасходВДокументах
	|ИЗ
	|	втНезакрытыеОперации КАК втНезакрытыеОперации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПроизводственныеОперации.ТаблицаСырье КАК ПроизводственныеОперацииТаблицаСырье
	|		ПО втНезакрытыеОперации.ПроизводственнаяОперация = ПроизводственныеОперацииТаблицаСырье.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таб.Дата КАК Дата,
	|	Таб.Подразделение КАК Подразделение,
	|	Таб.ВыходноеИзделие КАК ВыходноеИзделие,
	|	Таб.Номенклатура КАК Номенклатура,
	//---> SPB/Mochalov.Y 06.04.2020 задача SUP77-593519 (Финализация производства. Начинка Грибы)
	//|	СУММА(Таб.КоличествоЕдиницМеркурий) КАК КоличествоЕдиницМеркурий,
	|	ВЫРАЗИТЬ(СУММА(Таб.КоличествоЕдиницМеркурий) КАК ЧИСЛО(15,6)) КАК КоличествоЕдиницМеркурий,
	//<--- SPB/Mochalov.Y 06.04.2020 задача SUP77-593519 (Финализация производства. Начинка Грибы)
	|	Таб.ПроизводственнаяОперация КАК ПроизводственнаяОперация,
	|	Таб.Предприятие КАК Предприятие
	|ПОМЕСТИТЬ втДобавитьВРасход
	|ИЗ
	|	(ВЫБРАТЬ
	|		втКРасходуВсего.Дата КАК Дата,
	|		втКРасходуВсего.Номенклатура КАК Номенклатура,
	|		втКРасходуВсего.КоличествоЕдиницМеркурий КАК КоличествоЕдиницМеркурий,
	|		втКРасходуВсего.ПроизводственнаяОперация КАК ПроизводственнаяОперация,
	|		втКРасходуВсего.Предприятие КАК Предприятие,
	|		втКРасходуВсего.Подразделение КАК Подразделение,
	|		втКРасходуВсего.ВыходноеИзделие КАК ВыходноеИзделие
	|	ИЗ
	|		втКРасходуВсего КАК втКРасходуВсего
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		втРасходВДокументах.Дата,
	|		втРасходВДокументах.НоменклатураУчетнойСистемы,
	|		-втРасходВДокументах.КоличествоЕдиницМеркурий,
	|		втРасходВДокументах.ПроизводственнаяОперация,
	|		втРасходВДокументах.Предприятие,
	|		втРасходВДокументах.Подразделение,
	|		втРасходВДокументах.ВыходноеИзделие
	|	ИЗ
	|		втРасходВДокументах КАК втРасходВДокументах) КАК Таб
	|
	|СГРУППИРОВАТЬ ПО
	|	Таб.Дата,
	|	Таб.Номенклатура,
	|	Таб.ПроизводственнаяОперация,
	|	Таб.Предприятие,
	|	Таб.Подразделение,
	|	Таб.ВыходноеИзделие
	|
	|ИМЕЮЩИЕ
	//---> SPB/Mochalov.Y 06.04.2020 задача SUP77-593519 (Финализация производства. Начинка Грибы)
	//|	СУММА(Таб.КоличествоЕдиницМеркурий) > 0
	|	ВЫРАЗИТЬ(СУММА(Таб.КоличествоЕдиницМеркурий) КАК ЧИСЛО(15,6)) > 0
	//<--- SPB/Mochalov.Y 06.04.2020 задача SUP77-593519 (Финализация производства. Начинка Грибы)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПроизводственнаяОперация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Остатки.Предприятие КАК Предприятие,
	|	Остатки.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
	|	Остатки.ЗаписьСкладскогоЖурнала.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Остатки.ЗаписьСкладскогоЖурнала.Продукция КАК Продукция,
	|	Остатки.КоличествоОстаток КАК КоличествоЕдиницМеркурий
	|ПОМЕСТИТЬ втОстаткиПромПродукция
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОстаткиТекИНаДату.Предприятие КАК Предприятие,
	|		ОстаткиТекИНаДату.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
	|		МИНИМУМ(ОстаткиТекИНаДату.КоличествоОстаток) КАК КоличествоОстаток
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТекОстаткиИВозвраты.Организация КАК Организация,
	|			ТекОстаткиИВозвраты.Предприятие КАК Предприятие,
	|			ТекОстаткиИВозвраты.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
	|			СУММА(ТекОстаткиИВозвраты.КоличествоОстатокСУчетомВозвратов) КАК КоличествоОстаток,
	|			СУММА(ТекОстаткиИВозвраты.КоличествоОстатокСУчетомВозвратов) КАК ТекОстаток,
	|			0 КАК ОстатокНаДату
	|		ИЗ
	|			(ВЫБРАТЬ
	|				Остатки.Организация КАК Организация,
	|				Остатки.Предприятие КАК Предприятие,
	|				Остатки.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
	|				Остатки.КоличествоОстаток КАК КоличествоОстатокСУчетомВозвратов,
	|				Остатки.КоличествоОстаток КАК КоличествоОстаток
	|			ИЗ
	|				РегистрНакопления.ДвижениеПродукции.Остатки(
	|						,
	|						Предприятие В
	|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|								Таб.ПроизводственнаяОперация.Предприятие
	|							ИЗ
	|								втНезакрытыеОперации КАК Таб)) КАК Остатки
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ
	|				Возвраты.Организация,
	|				Возвраты.Предприятие,
	|				Возвраты.ЗаписьСкладскогоЖурнала,
	|				-Возвраты.КоличествоОстаток,
	|				0
	|			ИЗ
	|				РегистрНакопления._ТоварыКВозвратуПоставщикам.Остатки(
	|						,
	|						Предприятие В
	|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|								Таб.ПроизводственнаяОперация.Предприятие
	|							ИЗ
	|								втНезакрытыеОперации КАК Таб)) КАК Возвраты) КАК ТекОстаткиИВозвраты
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ТекОстаткиИВозвраты.Организация,
	|			ТекОстаткиИВозвраты.Предприятие,
	|			ТекОстаткиИВозвраты.ЗаписьСкладскогоЖурнала
	|		
	|		ИМЕЮЩИЕ
	|			СУММА(ТекОстаткиИВозвраты.КоличествоОстаток) > 0 И
	|			СУММА(ТекОстаткиИВозвраты.КоличествоОстатокСУчетомВозвратов) > 0
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ОстаткиИВозвратыНаДату.Организация,
	|			ОстаткиИВозвратыНаДату.Предприятие,
	|			ОстаткиИВозвратыНаДату.ЗаписьСкладскогоЖурнала,
	|			СУММА(ОстаткиИВозвратыНаДату.КоличествоОстатокСУчетомВозвратов),
	|			0,
	|			СУММА(ОстаткиИВозвратыНаДату.КоличествоОстатокСУчетомВозвратов)
	|		ИЗ
	|			(ВЫБРАТЬ
	|				Остатки.Организация КАК Организация,
	|				Остатки.Предприятие КАК Предприятие,
	|				Остатки.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
	|				Остатки.КоличествоОстаток КАК КоличествоОстатокСУчетомВозвратов,
	|				Остатки.КоличествоОстаток КАК КоличествоОстаток
	|			ИЗ
	|				РегистрНакопления.ДвижениеПродукции.Остатки(
	|						&ДатаОстатков,
	|						Предприятие В
	|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|								Таб.ПроизводственнаяОперация.Предприятие
	|							ИЗ
	|								втНезакрытыеОперации КАК Таб)) КАК Остатки
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ
	|				Возвраты.Организация,
	|				Возвраты.Предприятие,
	|				Возвраты.ЗаписьСкладскогоЖурнала,
	|				-Возвраты.КоличествоОстаток,
	|				0
	|			ИЗ
	|				РегистрНакопления._ТоварыКВозвратуПоставщикам.Остатки(
	|						&ДатаОстатков,
	|						Предприятие В
	|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|								Таб.ПроизводственнаяОперация.Предприятие
	|							ИЗ
	|								втНезакрытыеОперации КАК Таб)) КАК Возвраты) КАК ОстаткиИВозвратыНаДату
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ОстаткиИВозвратыНаДату.Организация,
	|			ОстаткиИВозвратыНаДату.Предприятие,
	|			ОстаткиИВозвратыНаДату.ЗаписьСкладскогоЖурнала
	|		
	|		ИМЕЮЩИЕ
	|			СУММА(ОстаткиИВозвратыНаДату.КоличествоОстаток) > 0 И
	|			СУММА(ОстаткиИВозвратыНаДату.КоличествоОстатокСУчетомВозвратов) > 0) КАК ОстаткиТекИНаДату
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ОстаткиТекИНаДату.Предприятие,
	|		ОстаткиТекИНаДату.ЗаписьСкладскогоЖурнала
	|	
	|	ИМЕЮЩИЕ
	|		СУММА(ОстаткиТекИНаДату.ТекОстаток) > 0 И
	|		СУММА(ОстаткиТекИНаДату.ОстатокНаДату) > 0) КАК Остатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Продукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОстаткиПромПродукция.Предприятие КАК Предприятие,
	|	втОстаткиПромПродукция.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
	|	втОстаткиПромПродукция.КоличествоЕдиницМеркурий КАК КоличествоЕдиницМеркурий,
	|	втОстаткиПромПродукция.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СоответствиеПродукцииНоменклатуреУчетнойСистемы.НоменклатураУчетнойСистемы КАК НоменклатураУчетнойСистемы
	|ПОМЕСТИТЬ втОстаткиПромНоменклатураЕдИзм
	|ИЗ
	|	втОстаткиПромПродукция КАК втОстаткиПромПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеПродукцииНоменклатуреУчетнойСистемы КАК СоответствиеПродукцииНоменклатуреУчетнойСистемы
	|		ПО втОстаткиПромПродукция.Продукция = СоответствиеПродукцииНоменклатуреУчетнойСистемы.Продукция
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НоменклатураУчетнойСистемы,
	|	ЕдиницаИзмерения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОстаткиПромНоменклатураЕдИзм.Предприятие КАК Предприятие,
	|	втОстаткиПромНоменклатураЕдИзм.НоменклатураУчетнойСистемы КАК НоменклатураУчетнойСистемы,
	|	втОстаткиПромНоменклатураЕдИзм.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
	|	втОстаткиПромНоменклатураЕдИзм.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	втОстаткиПромНоменклатураЕдИзм.КоличествоЕдиницМеркурий КАК КоличествоЕдиницМеркурий
	|ПОМЕСТИТЬ втОстатки
	|ИЗ
	|	втОстаткиПромНоменклатураЕдИзм КАК втОстаткиПромНоменклатураЕдИзм
	//---> MSK/Osipov.A 24.09.2021 Задача SUP77-601729
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЗаписьСкладскогоЖурнала
	//<--- MSK/Osipov.A 24.09.2021 Задача SUP77-601729
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОстатки.Предприятие КАК Предприятие,
	|	втОстатки.НоменклатураУчетнойСистемы КАК Номенклатура,
	|	втОстатки.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
	|	втОстатки.ЗаписьСкладскогоЖурнала.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	//---> SPB/Mochalov.Y 25.02.2020 задача SUP77-592921 (Меркурий Молоко для капучино)
	|	ВЫРАЗИТЬ(втОстатки.КоличествоЕдиницМеркурий КАК ЧИСЛО(15,6)) КАК КоличествоЕдиницМеркурий,
	//<--- SPB/Mochalov.Y 25.02.2020 задача SUP77-592921 (Меркурий Молоко для капучино)
	|	втОстатки.ЗаписьСкладскогоЖурнала.ДатаОкончанияСрокаГодностиОкончание КАК ЗаписьСкладскогоЖурналаДатаОкончанияСрокаГодностиОкончание,
	|	втОстатки.ЗаписьСкладскогоЖурнала.ДатаОкончанияСрокаГодностиНачало КАК ЗаписьСкладскогоЖурналаДатаОкончанияСрокаГодностиНачало,
	//---> MSK/Osipov.A 01.11.2021 Задача SUP77-602408
	|	ЕСТЬNULL(втОстаткиПартийКРасходу.КоличествоЕдиницМеркурий, 0) КАК КоличествоЕдиницМеркурийКРасходу,
	|	ВЫБОР
	|		КОГДА втОстаткиПартийКРасходу.КоличествоЕдиницМеркурий ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьРучнаяУстановкаРасхода,
	//<--- MSK/Osipov.A 01.11.2021 Задача SUP77-602408
	|	втОстатки.ЗаписьСкладскогоЖурнала.ДатаВыработкиНачало КАК ЗаписьСкладскогоЖурналаДатаВыработкиНачало
	|ИЗ
	|	втОстатки КАК втОстатки
	//---> MSK/Osipov.A 24.09.2021 Задача SUP77-601729
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений._ПриоритетСписанияТоваров.СрезПоследних() КАК ПриоритетСписания
	|		ПО втОстатки.ЗаписьСкладскогоЖурнала = ПриоритетСписания.ЗаписьСкладскогоЖурнала
	//<--- MSK/Osipov.A 24.09.2021 Задача SUP77-601729
	//---> MSK/Osipov.A 01.11.2021 Задача SUP77-602408
	|		ЛЕВОЕ СОЕДИНЕНИЕ втОстаткиПартийКРасходу КАК втОстаткиПартийКРасходу
	|		ПО втОстатки.ЗаписьСкладскогоЖурнала = втОстаткиПартийКРасходу.ЗаписьСкладскогоЖурнала
	//<--- MSK/Osipov.A 01.11.2021 Задача SUP77-602408
	|
	|УПОРЯДОЧИТЬ ПО
	|	втОстатки.НоменклатураУчетнойСистемы,
	|	втОстатки.Предприятие,
	//---> MSK/Osipov.A 01.11.2021 Задача SUP77-602408
	|	втОстаткиПартийКРасходу.КоличествоЕдиницМеркурий УБЫВ,
	//<--- MSK/Osipov.A 01.11.2021 Задача SUP77-602408
	//---> MSK/Osipov.A 27.10.2021 Задача SUP77-602396
	|	ЕСТЬNULL(ПриоритетСписания.Приоритет, 0) УБЫВ,
	|	втОстатки.ЗаписьСкладскогоЖурнала.ДатаОкончанияСрокаГодностиНачало,
	|	втОстатки.ЗаписьСкладскогоЖурнала.ДатаОкончанияСрокаГодностиОкончание,
	//<--- MSK/Osipov.A 27.10.2021 Задача SUP77-602396
	|	втОстатки.ЗаписьСкладскогоЖурнала.ДатаВыработкиНачало,
	|	втОстатки.ЗаписьСкладскогоЖурнала.ДатаВыработкиОкончание,
	|	втОстатки.ЗаписьСкладскогоЖурнала.НомерПартии,
	|	втОстатки.ЗаписьСкладскогоЖурнала.НомерЗаписиЖурнала
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДобавитьВРасход.Дата КАК Дата,
	|	втДобавитьВРасход.Подразделение КАК Подразделение,
	|	втДобавитьВРасход.ВыходноеИзделие КАК ВыходноеИзделие,
	|	втДобавитьВРасход.Номенклатура КАК Номенклатура,
	|	втДобавитьВРасход.Номенклатура._КоличествоЕдиницМеркурийВБазовойЕдинице КАК _КоличествоЕдиницМеркурийВБазовойЕдинице,
	//---> SPB/Mochalov.Y 25.02.2020 задача SUP77-592921 (Меркурий Молоко для капучино)
	//|	втДобавитьВРасход.КоличествоЕдиницМеркурий КАК КоличествоЕдиницМеркурий,
	|	ВЫРАЗИТЬ(втДобавитьВРасход.КоличествоЕдиницМеркурий КАК ЧИСЛО(15,6)) КАК КоличествоЕдиницМеркурий,
	//<--- SPB/Mochalov.Y 25.02.2020 задача SUP77-592921 (Меркурий Молоко для капучино)
	|	втДобавитьВРасход.ПроизводственнаяОперация КАК ПроизводственнаяОперация,
	|	втДобавитьВРасход.Предприятие КАК Предприятие
	|ИЗ
	|	втДобавитьВРасход КАК втДобавитьВРасход
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПроизводственнаяОперация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втНезакрытыеОперации.ПроизводственнаяОперация КАК ПроизводственнаяОперация
	|ИЗ
	|	втНезакрытыеОперации КАК втНезакрытыеОперации
	|		ЛЕВОЕ СОЕДИНЕНИЕ втДобавитьВРасход КАК втДобавитьВРасход
	|		ПО втНезакрытыеОперации.ПроизводственнаяОперация = втДобавитьВРасход.ПроизводственнаяОперация
	|		ЛЕВОЕ СОЕДИНЕНИЕ втЖурналСостоянийЗаявок КАК ЖурналСостояний
	|		ПО втНезакрытыеОперации.ПроизводственнаяОперация = ЖурналСостояний.ДокументСсылка
	|ГДЕ
	|	втДобавитьВРасход.ПроизводственнаяОперация ЕСТЬ NULL
	|	И (ЖурналСостояний.ДокументСсылка ЕСТЬ NULL
	|			ИЛИ ЖурналСостояний.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыЗаявок.ОшибкаОтправкиЗапроса)
	|			ИЛИ ЖурналСостояний.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыЗаявок.Черновик))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(МАКСИМУМ(ЖурналСостояний.ДокументСсылка ССЫЛКА Документ.ПроизводственныеОперации), ЛОЖЬ) КАК ОтветПоПроизводственнымОперациям
	|ИЗ
	|	втЖурналСостоянийЗаявок КАК ЖурналСостояний
	|ГДЕ
	|	(ЖурналСостояний.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыЗаявок.IDПолучен)
	|			ИЛИ ЖурналСостояний.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыЗаявок.Обрабатывается))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Операции.Дата КАК Дата,
	|	Операции.Номенклатура КАК Номенклатура,
	|	Операции.Подразделение КАК Подразделение,
	|	Операции.ВыходноеИзделие КАК ВыходноеИзделие
	|ИЗ
	|	РегистрСведений._СписаниеСырьяМеркурий КАК Операции
	|		ЛЕВОЕ СОЕДИНЕНИЕ втЖурналСостоянийЗаявок КАК ЖурналСостояний
	|		ПО Операции.ПроизводственнаяОперация = ЖурналСостояний.ДокументСсылка
	|ГДЕ
	|	ЖурналСостояний.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыЗаявок.УспешноОбработана)
	|	И НЕ Операции.ОтраженоВМеркурий";
	#КонецОбласти
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ТаблицаОстатков = РезультатЗапроса[9].Выгрузить();
	ТаблицаПереноса = РезультатЗапроса[10].Выгрузить();
	ТаблицаФормированияЗаявокПоОперациям = РезультатЗапроса[11].Выгрузить();
	
	// На основе анализа выполним обработку ответов для каждого типа документов.
	ВыборкаДанных = РезультатЗапроса[12].Выбрать();
	Если ВыборкаДанных.Следующий() Тогда
		Если ВыборкаДанных.ОтветПоПроизводственнымОперациям Тогда
			РегламентныеЗаданияСлужебный.ВыполнитьРегламентноеЗаданиеВручную(Метаданные.РегламентныеЗадания.ОбработкаОтветаПоПроизводственнымОперациям);
			НужнаЕщеОднаИтерация = Истина;
		КонецЕсли;
	КонецЕсли;
	
	// Обновляем записи для отправки в Оперучет по закрытым операциям.
	ВыборкаДанных = РезультатЗапроса[13].Выбрать();
	Пока ВыборкаДанных.Следующий() Цикл
		МенеджерЗаписи = РегистрыСведений._СписаниеСырьяМеркурий.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ВыборкаДанных);
		МенеджерЗаписи.Прочитать();
		МенеджерЗаписи.ОтраженоВМеркурий = Истина;
		МенеджерЗаписи.Записать();
	КонецЦикла;
	
	ТаблицаОстатков.Индексы.Добавить("Номенклатура");
	
	ЦелочисленныеЕдиницыМеркурий = _ИнтеграцияОперучетМеркурийПовтИсп.ЦелочисленныеЕдиницыМеркурий();
	
	Попытка
		НачатьТранзакцию();
		ПроизводственнаяОперацияСсылка = Неопределено;
		ПроизводственнаяОперация = Неопределено;
		ИзмененаПроизводственнаяОперация = Ложь;
		Для Каждого СтрокаПереноса Из ТаблицаПереноса Цикл
			
			Если СтрокаПереноса._КоличествоЕдиницМеркурийВБазовойЕдинице = 0 Тогда
				ОписаниеОшибки = НСтр("ru = 'Номенклатура %1: не указан коэффициент перевода в единицы измерения Меркурий.'");
				ОписаниеОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеОшибки, СтрокаПереноса.Номенклатура);
				ЗаписьЖурналаРегистрации(СобытиеИнтеграцияОперучетМеркурий(), УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				ВызватьИсключение ОписаниеОшибки;
			КонецЕсли;
			
			// Начало строк, относящися с новой производственной операции.
			Если СтрокаПереноса.ПроизводственнаяОперация <> ПроизводственнаяОперацияСсылка Тогда
				
				Если ЗначениеЗаполнено(ПроизводственнаяОперацияСсылка)
					И ИзмененаПроизводственнаяОперация Тогда
					// Это не первая итерация, записываем объект.
					//---> MSK/Fedorchuk.V 07.08.2020 SUP77-595700
					// Устанавливаем ответственного в соответствии с настройками
					УстановитьОтветственного(ПроизводственнаяОперация);
					//<--- MSK/Fedorchuk.V 07.08.2020 SUP77-59570
					ПроизводственнаяОперация.Записать();
					ИзмененаПроизводственнаяОперация = Ложь;
				КонецЕсли;
				
				ПроизводственнаяОперацияСсылка = СтрокаПереноса.ПроизводственнаяОперация;
				ПроизводственнаяОперация = ПроизводственнаяОперацияСсылка.ПолучитьОбъект();
			КонецЕсли;
			
			// Списание свободных остатков.
			СтрокаНачалаПоиска = ТаблицаОстатков.Найти(СтрокаПереноса.Номенклатура, "Номенклатура");
			Если СтрокаНачалаПоиска <> Неопределено Тогда
				
				ИндексСтроки = ТаблицаОстатков.Индекс(СтрокаНачалаПоиска);
				Для ТекущийИндекс = ИндексСтроки По ТаблицаОстатков.Количество() - 1 Цикл
					
					СтрокаОстатков = ТаблицаОстатков[ТекущийИндекс];
					
					Если СтрокаОстатков.Номенклатура <> СтрокаПереноса.Номенклатура Тогда
						// Конец секции подходящей номенклатуры, можно прекратить поиск.
						Прервать;
					КонецЕсли;
					Если СтрокаОстатков.Предприятие <> СтрокаПереноса.Предприятие Тогда
						// Предприятие не подходит, пропускаем.
						Продолжить;
					КонецЕсли;
					Если СтрокаОстатков.КоличествоЕдиницМеркурий = 0 Тогда
						// Уже нечего списывать, пропускаем.
						Продолжить;
					КонецЕсли;
					
					//---> SPB/Mochalov.Y 15.05.2019 задача SUP77-588160 (справки ВСД с истекшим сроком годности)
					Если СтрокаОстатков.ЗаписьСкладскогоЖурналаДатаОкончанияСрокаГодностиНачало <= СтрокаПереноса.Дата 
						И СтрокаОстатков.ЗаписьСкладскогоЖурналаДатаОкончанияСрокаГодностиОкончание <= СтрокаПереноса.Дата Тогда
						// просроченное сырье не списываем в производство
						Продолжить;
					КонецЕсли;
					//<--- SPB/Mochalov.Y 15.05.2019 задача SUP77-588160 (справки ВСД с истекшим сроком годности)
					
					СписываемКоличествоЕдиницМеркурий = Мин(СтрокаОстатков.КоличествоЕдиницМеркурий, СтрокаПереноса.КоличествоЕдиницМеркурий);
					
					//---> MSK/Osipov.A 01.11.2021 Задача SUP77-602408
					Если СтрокаОстатков.ЕстьРучнаяУстановкаРасхода Тогда
						СписываемКоличествоЕдиницМеркурий = Мин(СписываемКоличествоЕдиницМеркурий, СтрокаОстатков.КоличествоЕдиницМеркурийКРасходу);
					КонецЕсли;
					Если СписываемКоличествоЕдиницМеркурий <= 0 Тогда
						Продолжить;
					КонецЕсли;
					//<--- MSK/Osipov.A 01.11.2021 Задача SUP77-602408
					
					Если ЗначениеЗаполнено(ЦелочисленныеЕдиницыМеркурий.Получить(СтрокаОстатков.ЕдиницаИзмерения)) Тогда
						СписываемКоличествоЕдиницМеркурий = Цел(СписываемКоличествоЕдиницМеркурий + 0.999999);
					КонецЕсли;
					
					ТаблицаСырье = ПроизводственнаяОперация.ТаблицаСырье;
					НоваяСтрока = ТаблицаСырье.Добавить();
					НоваяСтрока.GUIDСтроки = Строка(Новый УникальныйИдентификатор());
					НоваяСтрока.ЗаписьСкладскогоЖурнала    = СтрокаОстатков.ЗаписьСкладскогоЖурнала;
					НоваяСтрока.НоменклатураУчетнойСистемы = СтрокаОстатков.Номенклатура;
					НоваяСтрока.Количество                 = СписываемКоличествоЕдиницМеркурий;
					
					СтрокаПереноса.КоличествоЕдиницМеркурий = СтрокаПереноса.КоличествоЕдиницМеркурий - СписываемКоличествоЕдиницМеркурий;
					СтрокаОстатков.КоличествоЕдиницМеркурий = СтрокаОстатков.КоличествоЕдиницМеркурий - СписываемКоличествоЕдиницМеркурий;
					
					//---> MSK/Osipov.A 01.11.2021 Задача SUP77-602408
					Если СтрокаОстатков.ЕстьРучнаяУстановкаРасхода Тогда
						СтрокаОстатков.КоличествоЕдиницМеркурийКРасходу = СтрокаОстатков.КоличествоЕдиницМеркурийКРасходу - СписываемКоличествоЕдиницМеркурий;
					КонецЕсли;
					//<--- MSK/Osipov.A 01.11.2021 Задача SUP77-602408
					
					НужнаЕщеОднаИтерация = Истина;
					ИзмененаПроизводственнаяОперация = Истина;
					
					Если СтрокаПереноса.КоличествоЕдиницМеркурий <= 0 Тогда
						Прервать;
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если ЗначениеЗаполнено(ПроизводственнаяОперацияСсылка) Тогда
			Если ИзмененаПроизводственнаяОперация Тогда
				//---> MSK/Fedorchuk.V 07.08.2020 SUP77-595700
				// Устанавливаем ответственного в соответствии с настройками
				УстановитьОтветственного(ПроизводственнаяОперация);
				//<--- MSK/Fedorchuk.V 07.08.2020 SUP77-59570
				ПроизводственнаяОперация.Записать();
			КонецЕсли;
			
			// Строки переноса, по которым нет остатков в Меркурий.
			Для Каждого СтрокаПереноса Из ТаблицаПереноса Цикл
				Если СтрокаПереноса.КоличествоЕдиницМеркурий > 0 Тогда
					МенеджерЗаписи = РегистрыСведений._СписаниеСырьяМеркурий.СоздатьМенеджерЗаписи();
					ЗаполнитьЗначенияСвойств(МенеджерЗаписи, СтрокаПереноса);
					МенеджерЗаписи.Прочитать();
					МенеджерЗаписи.НедостаточноСырьяВМеркурий = Истина;
					МенеджерЗаписи.Записать();
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
		//---> SPB/Mochalov.Y 21.09.2018 
		//МассивДокументов = ТаблицаФормированияЗаявокПоОперациям.ВыгрузитьКолонку("ПроизводственнаяОперация");
		//// В режиме логирования отправку заявок не делаем, чтобы контролировать процесс.
		//Если МассивДокументов.Количество() > 0 И Не РежимОтладки Тогда
		//	ИнтеграцияВетисAPIОтправкаЗаявокНаОформление.СформироватьЗаявки(МассивДокументов);
		//	РегламентныеЗаданияСлужебный.ВыполнитьРегламентноеЗаданиеВручную(Метаданные.РегламентныеЗадания.ОтправкаПроизводственныхОпераций);
		//	НужнаЕщеОднаИтерация = Истина;
		//КонецЕсли;
		
		Если Не РежимОтладки Тогда
		// В режиме логирования отправку заявок не делаем, чтобы контролировать процесс.
			
			Для Каждого Строка Из ТаблицаФормированияЗаявокПоОперациям Цикл
				// поштучная отправка, т.к. если хотя бы в одной операции есть ошибка, он не отправляет всю пачку.
				МассивДокументов = Новый Массив;
				МассивДокументов.Добавить(Строка.ПроизводственнаяОперация);
				
				ИнтеграцияВетисAPIОтправкаЗаявокНаОформление.СформироватьЗаявки(МассивДокументов);
				РегламентныеЗаданияСлужебный.ВыполнитьРегламентноеЗаданиеВручную(Метаданные.РегламентныеЗадания.ОтправкаПроизводственныхОпераций);
				НужнаЕщеОднаИтерация = Истина;
			КонецЦикла;
		КонецЕсли;
		//<--- SPB/Mochalov.Y 21.09.2018		
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ЗаписьЖурналаРегистрации(СобытиеИнтеграцияОперучетМеркурий(), УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#Область ИнвентаризацияОстатковМеркурий

Процедура ОбработатьДокументыИнвентаризации(НужнаЕщеОднаИтерация) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	1 КАК Поле1
	|ИЗ
	|	РегистрСведений._ИнформационныеОстаткиОперучет КАК _ИнформационныеОстаткиОперучет
	|ГДЕ
	|	_ИнформационныеОстаткиОперучет.ДатаОтправкиВМеркурий <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И _ИнформационныеОстаткиОперучет.Инвентаризация <> ЗНАЧЕНИЕ(Документ.Инвентаризации.ПустаяСсылка)
	|	И НЕ _ИнформационныеОстаткиОперучет.ОтраженоВМеркурий";
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	РежимОтладки = Константы._РежимОтладки.Получить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	_ИнформационныеОстаткиОперучет.Подразделение КАК Подразделение,
	|	_ИнформационныеОстаткиОперучет.Номенклатура КАК Номенклатура,
	|	_ИнформационныеОстаткиОперучет.Инвентаризация КАК Инвентаризация
	|ПОМЕСТИТЬ втНезакрытыеДокументы
	|ИЗ
	|	РегистрСведений._ИнформационныеОстаткиОперучет КАК _ИнформационныеОстаткиОперучет
	|ГДЕ
	|	_ИнформационныеОстаткиОперучет.ДатаОтправкиВМеркурий <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И _ИнформационныеОстаткиОперучет.Инвентаризация <> ЗНАЧЕНИЕ(Документ.Инвентаризации.ПустаяСсылка)
	|	И НЕ _ИнформационныеОстаткиОперучет.ОтраженоВМеркурий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЖурналСостояний.ДокументСсылка КАК ДокументСсылка,
	|	ЖурналСостояний.Статус КАК Статус
	|ПОМЕСТИТЬ втИнвентаризацииСоСтатусами
	|ИЗ
	|	РегистрСведений.ЖурналРегистрацииСостоянийЗаявокНаОформлениеОпераций.СрезПоследних(
	|			,
	|			ДокументСсылка В
	|				(ВЫБРАТЬ
	|					втНезакрытыеДокументы.Инвентаризация
	|				ИЗ
	|					втНезакрытыеДокументы КАК втНезакрытыеДокументы)) КАК ЖурналСостояний
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументСсылка КАК ДокументСсылка
	|ИЗ
	|	втИнвентаризацииСоСтатусами КАК втИнвентаризацииСоСтатусами
	|ГДЕ
	|	втИнвентаризацииСоСтатусами.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыЗаявок.ОшибкаОтправкиЗапроса)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Истина КАК ОтветПоИнвентаризациям
	|ИЗ
	|	втИнвентаризацииСоСтатусами КАК втИнвентаризацииСоСтатусами
	|ГДЕ
	|	втИнвентаризацииСоСтатусами.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыЗаявок.IDПолучен)
	|		ИЛИ втИнвентаризацииСоСтатусами.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыЗаявок.Обрабатывается)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втНезакрытыеДокументы.Номенклатура КАК Номенклатура,
	|	втНезакрытыеДокументы.Подразделение КАК Подразделение
	|ИЗ
	|	втНезакрытыеДокументы КАК втНезакрытыеДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ втИнвентаризацииСоСтатусами КАК ЖурналСостояний
	|		ПО втНезакрытыеДокументы.Инвентаризация = ЖурналСостояний.ДокументСсылка
	|ГДЕ
	|	ЖурналСостояний.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыЗаявок.УспешноОбработана)";
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	// Выполним отправку неотправленных по каким-то причинам заявок.
	// В режиме логирования отправку заявок не делаем, чтобы контролировать процесс.
	ВыборкаДанных = РезультатЗапроса[2].Выбрать();
	Если Не РежимОтладки Тогда
		Пока ВыборкаДанных.Следующий() Цикл
			МассивИзОдногоДокумента = Новый Массив;
			МассивИзОдногоДокумента.Добавить(ВыборкаДанных.ДокументСсылка);
			ИнтеграцияВетисAPIОтправкаЗаявокНаОформление.СформироватьЗаявки(МассивИзОдногоДокумента);
		КонецЦикла;
		Если ВыборкаДанных.Количество() > 0 Тогда
			РегламентныеЗаданияСлужебный.ВыполнитьРегламентноеЗаданиеВручную(Метаданные.РегламентныеЗадания.ОтправкаИнвентаризаций);
		КонецЕсли;
	КонецЕсли;
	
	// На основе анализа выполним обработку ответов для каждого типа документов.
	ВыборкаДанных = РезультатЗапроса[3].Выбрать();
	Если ВыборкаДанных.Следующий() Тогда
		Если ВыборкаДанных.ОтветПоИнвентаризациям Тогда
			РегламентныеЗаданияСлужебный.ВыполнитьРегламентноеЗаданиеВручную(Метаданные.РегламентныеЗадания.ОбработкаОтветаПоИнвентаризациям);
			НужнаЕщеОднаИтерация = Истина;
		КонецЕсли;
	КонецЕсли;
	
	// Обновляем записи для отправки в Оперучет по закрытым операциям.
	ВыборкаДанных = РезультатЗапроса[4].Выбрать();
	Пока ВыборкаДанных.Следующий() Цикл
		РСНаборЗаписей = РегистрыСведений._ИнформационныеОстаткиОперучет.СоздатьНаборЗаписей();
		РСНаборЗаписей.Отбор.Подразделение.Установить(ВыборкаДанных.Подразделение);
		РСНаборЗаписей.Отбор.Номенклатура.Установить(ВыборкаДанных.Номенклатура);
		РСНаборЗаписей.Прочитать();
		Если РСНаборЗаписей.Количество() = 1 Тогда
			РСНаборЗаписей[0].ОтраженоВМеркурий = Истина;
			РСНаборЗаписей.Записать();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ПодтверждениеПеремещений

Процедура ПодтверждениеПеремещений(НужнаЕщеОднаИтерация) Экспорт
	
	РежимОтладки = Константы._РежимОтладки.Получить();
	// Берем ВСД за последнюю неделю.
	ДатаНачала = ТекущаяДата() - 7*24*60*60;
	
	// Подтвержденные перемещения сторонним организациям.
	Запрос = Новый Запрос;
	#Область Запрос_ПодтверждениеСтороннимиОрганизациями
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таб.Ссылка КАК ВСД,
	|	Таб.ПредприятиеПолучатель КАК ПредприятиеПолучатель,
	|	Таб.НомерТТН КАК НомерТТН,
	|	НАЧАЛОПЕРИОДА(Таб.ДатаТТН, ДЕНЬ) КАК ДатаТТН,
	|	Таб.Продукция КАК Продукция
	|ПОМЕСТИТЬ втИсходящиеВСДВДругиеОрганизацииПромПродукция
	|ИЗ
	|	Документ.ВСД КАК Таб
	|ГДЕ
	|	Таб.Дата >= &ДатаНачала
	|	И (Таб.ВидВСД = ЗНАЧЕНИЕ(Перечисление.ВидыВСД.Исходящий)
	|			ИЛИ Таб.ВидВСД = ЗНАЧЕНИЕ(Перечисление.ВидыВСД.НаПеремещение))
	|	И Таб.КонтрагентПолучатель.Основной = &НашиОрганизации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Продукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втИсходящиеВСДВДругиеОрганизации.ВСД КАК ВСД,
	|	втИсходящиеВСДВДругиеОрганизации.ПредприятиеПолучатель КАК ПредприятиеПолучатель,
	|	втИсходящиеВСДВДругиеОрганизации.НомерТТН КАК НомерТТН,
	|	втИсходящиеВСДВДругиеОрганизации.ДатаТТН КАК ДатаТТН,
	|	втИсходящиеВСДВДругиеОрганизации.Продукция КАК Продукция,
	|	СоответствиеНоменклатуры.НоменклатураУчетнойСистемы КАК НоменклатураУчетнойСистемы
	|ПОМЕСТИТЬ втИсходящиеВСДВДругиеОрганизацииПромДанныеТТН
	|ИЗ
	|	втИсходящиеВСДВДругиеОрганизацииПромПродукция КАК втИсходящиеВСДВДругиеОрганизации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеПродукцииНоменклатуреУчетнойСистемы КАК СоответствиеНоменклатуры
	|		ПО втИсходящиеВСДВДругиеОрганизации.Продукция = СоответствиеНоменклатуры.Продукция
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НоменклатураУчетнойСистемы,
	|	ПредприятиеПолучатель,
	|	НомерТТН,
	|	ДатаТТН
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втПеремещенияМеркурий.ПеремещениеОперучет КАК ПеремещениеОперучет,
	|	втПеремещенияМеркурий.Номенклатура КАК Номенклатура,
	|	втПеремещенияМеркурий.ПодразделениеПолучатель КАК ПодразделениеПолучатель,
	|	втПеремещенияМеркурий.НомерПеремещения КАК НомерПеремещения,
	|	НАЧАЛОПЕРИОДА(втПеремещенияМеркурий.ДатаПеремещения, ДЕНЬ) КАК ДатаПеремещения
	|ПОМЕСТИТЬ втПеремещенияМеркурийПромПодразделениеПолучатель
	|ИЗ
	|	РегистрСведений._ПеремещенияМеркурий КАК втПеремещенияМеркурий
	|ГДЕ
	|	втПеремещенияМеркурий.ДатаПеремещения >= &ДатаНачала
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПодразделениеПолучатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПеремещенияМеркурий.ПеремещениеОперучет КАК ПеремещениеОперучет,
	|	втПеремещенияМеркурий.Номенклатура КАК Номенклатура,
	|	втПеремещенияМеркурий.ПодразделениеПолучатель КАК ПодразделениеПолучатель,
	|	втПеремещенияМеркурий.НомерПеремещения КАК НомерПеремещения,
	|	втПеремещенияМеркурий.ДатаПеремещения КАК ДатаПеремещения,
	|	СоответствиеСкладов.Предприятие КАК Предприятие
	|ПОМЕСТИТЬ втПеремещенияМеркурийПромПредприятие
	|ИЗ
	|	втПеремещенияМеркурийПромПодразделениеПолучатель КАК втПеремещенияМеркурий
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеПредприятийСкладамУчетнойСистемы КАК СоответствиеСкладов
	|		ПО втПеремещенияМеркурий.ПодразделениеПолучатель = СоответствиеСкладов.СкладУчетнойСистемы
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Предприятие
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПеремещенияМеркурий.ПеремещениеОперучет КАК ПеремещениеОперучет,
	|	втПеремещенияМеркурий.Номенклатура КАК Номенклатура,
	|	втПеремещенияМеркурий.ПодразделениеПолучатель КАК ПодразделениеПолучатель,
	|	втПеремещенияМеркурий.НомерПеремещения КАК НомерПеремещения,
	|	втПеремещенияМеркурий.ДатаПеремещения КАК ДатаПеремещения,
	|	втПеремещенияМеркурий.Предприятие КАК Предприятие,
	|	СвязиПредприятий.Контрагент КАК Контрагент
	|ПОМЕСТИТЬ втПеремещенияМеркурий
	|ИЗ
	|	втПеремещенияМеркурийПромПредприятие КАК втПеремещенияМеркурий
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязиМеждуКонтрагентамиИПредприятиями КАК СвязиПредприятий
	|		ПО втПеремещенияМеркурий.Предприятие = СвязиПредприятий.Предприятие
	|ГДЕ
	|	ЕСТЬNULL(СвязиПредприятий.Контрагент.Основной, ЛОЖЬ) = &НашиОрганизации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Предприятие,
	|	НомерПеремещения,
	|	ДатаПеремещения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(втИсходящиеВСДВДругиеОрганизации.ВСД, ЗНАЧЕНИЕ(Документ.ВСД.ПустаяСсылка)) КАК ВСД,
	|	втПеремещенияМеркурий.Предприятие КАК ПредприятиеПолучатель,
	|	втПеремещенияМеркурий.НомерПеремещения КАК НомерПеремещения,
	|	втПеремещенияМеркурий.ДатаПеремещения КАК ДатаПеремещения,
	|	втИсходящиеВСДВДругиеОрганизации.Продукция КАК Продукция,
	|	втИсходящиеВСДВДругиеОрганизации.НоменклатураУчетнойСистемы КАК НоменклатураУчетнойСистемы,
	|	втПеремещенияМеркурий.ПеремещениеОперучет КАК ПеремещениеОперучет
	|ПОМЕСТИТЬ втСверкаОформленияВСДПромВСД
	|ИЗ
	|	втПеремещенияМеркурий КАК втПеремещенияМеркурий
	|		ЛЕВОЕ СОЕДИНЕНИЕ втИсходящиеВСДВДругиеОрганизацииПромДанныеТТН КАК втИсходящиеВСДВДругиеОрганизации
	|		ПО (втИсходящиеВСДВДругиеОрганизации.НоменклатураУчетнойСистемы = втПеремещенияМеркурий.Номенклатура)
	|			И (втИсходящиеВСДВДругиеОрганизации.ПредприятиеПолучатель = втПеремещенияМеркурий.Предприятие)
	|			И (втИсходящиеВСДВДругиеОрганизации.НомерТТН = втПеремещенияМеркурий.НомерПеремещения)
	|			И (втИсходящиеВСДВДругиеОрганизации.ДатаТТН = втПеремещенияМеркурий.ДатаПеремещения)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВСД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таб.ВСД КАК ВСД,
	|	Таб.СтатусВСД КАК СтатусВСД
	|ПОМЕСТИТЬ втСтатусыВСД
	|ИЗ
	|	РегистрСведений.СтатусыВСД.СрезПоследних(
	|			,
	|			ВСД В
	|				(ВЫБРАТЬ
	|					Таб.ВСД
	|				ИЗ
	|					втСверкаОформленияВСДПромВСД КАК Таб)) КАК Таб
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВСД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСверкаОформленияВСД.ВСД КАК ВСД,
	|	втСверкаОформленияВСД.ПредприятиеПолучатель КАК ПредприятиеПолучатель,
	|	втСверкаОформленияВСД.НомерПеремещения КАК НомерПеремещения,
	|	втСверкаОформленияВСД.ДатаПеремещения КАК ДатаПеремещения,
	|	втСверкаОформленияВСД.Продукция КАК Продукция,
	|	втСверкаОформленияВСД.НоменклатураУчетнойСистемы КАК НоменклатураУчетнойСистемы,
	|	втСверкаОформленияВСД.ПеремещениеОперучет КАК ПеремещениеОперучет,
	|	ВЫБОР
	|		КОГДА втСтатусыВСД.СтатусВСД = ЗНАЧЕНИЕ(Справочник.СтатусыВСД.Погашен)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВСДПогашена
	|ПОМЕСТИТЬ втСверкаОформленияВСД
	|ИЗ
	|	втСверкаОформленияВСДПромВСД КАК втСверкаОформленияВСД
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтатусыВСД КАК втСтатусыВСД
	|		ПО втСверкаОформленияВСД.ВСД = втСтатусыВСД.ВСД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСверкаОформленияВСД.ПредприятиеПолучатель КАК ПредприятиеПолучатель,
	|	втСверкаОформленияВСД.НомерПеремещения КАК НомерПеремещения,
	|	втСверкаОформленияВСД.ДатаПеремещения КАК ДатаПеремещения,
	|	втСверкаОформленияВСД.ПеремещениеОперучет КАК ПеремещениеОперучет,
	|	МИНИМУМ(втСверкаОформленияВСД.ВСДПогашена) КАК ВсеВСДПогашены
	|ПОМЕСТИТЬ втСверкаОформленияВСДПромПеремещениеОперучет
	|ИЗ
	|	втСверкаОформленияВСД КАК втСверкаОформленияВСД
	|
	|СГРУППИРОВАТЬ ПО
	|	втСверкаОформленияВСД.ПредприятиеПолучатель,
	|	втСверкаОформленияВСД.ДатаПеремещения,
	|	втСверкаОформленияВСД.НомерПеремещения,
	|	втСверкаОформленияВСД.ПеремещениеОперучет
	|
	|ИМЕЮЩИЕ
	|	МИНИМУМ(втСверкаОформленияВСД.ВСДПогашена) = ИСТИНА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПеремещениеОперучет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСверкаОформленияВСД.ВСД КАК ВСД,
	|	втСверкаОформленияВСД.ПредприятиеПолучатель КАК ПредприятиеПолучатель,
	|	втСверкаОформленияВСД.НомерПеремещения КАК НомерПеремещения,
	|	втСверкаОформленияВСД.ДатаПеремещения КАК ДатаПеремещения,
	|	втСверкаОформленияВСД.НоменклатураУчетнойСистемы КАК НоменклатураУчетнойСистемы,
	|	втСверкаОформленияВСД.ВСДПогашена КАК ВСДПогашена
	|ИЗ
	|	втСверкаОформленияВСД КАК втСверкаОформленияВСД
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПредприятиеПолучатель,
	|	ДатаПеремещения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСверкаОформленияВСД.ПредприятиеПолучатель КАК ПредприятиеПолучатель,
	|	втСверкаОформленияВСД.НомерПеремещения КАК НомерПеремещения,
	|	втСверкаОформленияВСД.ДатаПеремещения КАК ДатаПеремещения,
	|	втСверкаОформленияВСД.ПеремещениеОперучет КАК ПеремещениеОперучет,
	|	МИНИМУМ(втСверкаОформленияВСД.ВСДПогашена) КАК ВсеВСДПогашены
	|ИЗ
	|	втСверкаОформленияВСД КАК втСверкаОформленияВСД
	|
	|СГРУППИРОВАТЬ ПО
	|	втСверкаОформленияВСД.ПредприятиеПолучатель,
	|	втСверкаОформленияВСД.ДатаПеремещения,
	|	втСверкаОформленияВСД.НомерПеремещения,
	|	втСверкаОформленияВСД.ПеремещениеОперучет
	|
	|ИМЕЮЩИЕ
	|	МИНИМУМ(втСверкаОформленияВСД.ВСДПогашена) = ИСТИНА
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПредприятиеПолучатель,
	|	ДатаПеремещения,
	|	НомерПеремещения,
	|	ПеремещениеОперучет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втСверкаОформленияВСД.ПредприятиеПолучатель КАК ПредприятиеПолучатель,
	|	втСверкаОформленияВСД.НомерПеремещения КАК НомерПеремещения,
	|	втСверкаОформленияВСД.ДатаПеремещения КАК ДатаПеремещения,
	|	втСверкаОформленияВСД.ПеремещениеОперучет КАК ПеремещениеОперучет,
	|	СоответствиеСкладов.СкладУчетнойСистемы КАК ПодразделениеПолучатель
	|ИЗ
	|	втСверкаОформленияВСДПромПеремещениеОперучет КАК втСверкаОформленияВСД
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений._ПодтвержденияПеремещенийМеркурий КАК _ПодтвержденияПеремещенийМеркурий
	|		ПО втСверкаОформленияВСД.ПеремещениеОперучет = _ПодтвержденияПеремещенийМеркурий.ПеремещениеОперучет
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеПредприятийСкладамУчетнойСистемы КАК СоответствиеСкладов
	|		ПО втСверкаОформленияВСД.ПредприятиеПолучатель = СоответствиеСкладов.Предприятие
	|ГДЕ
	|	ЕСТЬNULL(_ПодтвержденияПеремещенийМеркурий.ОтраженоВМеркурий, ЛОЖЬ) = ЛОЖЬ";
	#КонецОбласти
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("НашиОрганизации", Ложь);
	ВыборкаДанных = Запрос.Выполнить().Выбрать();
	Пока ВыборкаДанных.Следующий() Цикл
		МенеджерЗаписи = РегистрыСведений._ПодтвержденияПеремещенийМеркурий.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.ПеремещениеОперучет = ВыборкаДанных.ПеремещениеОперучет;
		МенеджерЗаписи.Прочитать();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ВыборкаДанных);
		МенеджерЗаписи.ОтраженоВМеркурий = Истина;
		МенеджерЗаписи.Записать();
	КонецЦикла;
	
	// Подтверждение перемещений нашей сети.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	_ПодтвержденияПеремещенийМеркурий.ПеремещениеОперучет КАК ПеремещениеОперучет
	|ИЗ
	|	РегистрСведений._ПодтвержденияПеремещенийМеркурий КАК _ПодтвержденияПеремещенийМеркурий
	|ГДЕ
	|	НЕ _ПодтвержденияПеремещенийМеркурий.ОтраженоВМеркурий
	|	И _ПодтвержденияПеремещенийМеркурий.ДатаПеремещения >= &ДатаНачала";
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.Текст =
	#Область Запрос_ПодтверждениеНашейСети
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(_ПодтвержденияПеремещенийМеркурий.ДатаПеремещения, ДЕНЬ) КАК ДатаПеремещения,
	|	_ПодтвержденияПеремещенийМеркурий.НомерПеремещения КАК НомерПеремещения,
	|	_ПодтвержденияПеремещенийМеркурий.ПодразделениеПолучатель КАК ПодразделениеПолучатель,
	|	_ПодтвержденияПеремещенийМеркурий.ПодразделениеОтправитель КАК ПодразделениеОтправитель,
	|	_ПодтвержденияПеремещенийМеркурий.ПеремещениеОперучет КАК ПеремещениеОперучет
	|ПОМЕСТИТЬ втПодтвержденияПеремещенийМеркурийКОформлению
	|ИЗ
	|	РегистрСведений._ПодтвержденияПеремещенийМеркурий КАК _ПодтвержденияПеремещенийМеркурий
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений._ВозвратыВПеремещенияхМеркурий КАК _ВозвратыВПеремещенияхМеркурий
	|		ПО _ПодтвержденияПеремещенийМеркурий.ПеремещениеОперучет = _ВозвратыВПеремещенияхМеркурий.Документ
	|ГДЕ
	|	НЕ _ПодтвержденияПеремещенийМеркурий.ОтраженоВМеркурий
	|	И _ПодтвержденияПеремещенийМеркурий.ДатаПеремещения >= &ДатаНачала
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(_ПодтвержденияПеремещенийМеркурий.ДатаПеремещения, ДЕНЬ),
	|	_ПодтвержденияПеремещенийМеркурий.НомерПеремещения,
	|	_ПодтвержденияПеремещенийМеркурий.ПодразделениеПолучатель,
	|	_ПодтвержденияПеремещенийМеркурий.ПодразделениеОтправитель,
	|	_ПодтвержденияПеремещенийМеркурий.ПеремещениеОперучет,
	|	_ПодтвержденияПеремещенийМеркурий.КоличествоПозицийВозврата
	|
	|ИМЕЮЩИЕ
	|	_ПодтвержденияПеремещенийМеркурий.КоличествоПозицийВозврата = СУММА(ВЫБОР
	|			КОГДА _ВозвратыВПеремещенияхМеркурий.Документ ЕСТЬ NULL
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПеремещениеОперучет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	_ПодтвержденияПеремещенийМеркурий.ДатаПеремещения КАК ДатаПеремещения,
	|	_ПодтвержденияПеремещенийМеркурий.НомерПеремещения КАК НомерПеремещения,
	|	_ПодтвержденияПеремещенийМеркурий.ПодразделениеПолучатель КАК ПодразделениеПолучатель,
	|	_ПодтвержденияПеремещенийМеркурий.ПодразделениеОтправитель КАК ПодразделениеОтправитель,
	|	_ПодтвержденияПеремещенийМеркурий.ПеремещениеОперучет КАК ПеремещениеОперучет,
	|	_ПеремещенияМеркурий.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ втПеремещенияПромПодразделениеОтправитель
	|ИЗ
	|	втПодтвержденияПеремещенийМеркурийКОформлению КАК _ПодтвержденияПеремещенийМеркурий
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений._ПеремещенияМеркурий КАК _ПеремещенияМеркурий
	|		ПО _ПодтвержденияПеремещенийМеркурий.ПеремещениеОперучет = _ПеремещенияМеркурий.ПеремещениеОперучет
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПодразделениеОтправитель,
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПеремещенияПромПодразделениеОтправитель.ДатаПеремещения КАК ДатаПеремещения,
	|	втПеремещенияПромПодразделениеОтправитель.НомерПеремещения КАК НомерПеремещения,
	|	втПеремещенияПромПодразделениеОтправитель.ПодразделениеПолучатель КАК ПодразделениеПолучатель,
	|	СоответствиеПредприятийСкладамУчетнойСистемы.Предприятие КАК ПредприятиеОтправитель,
	|	втПеремещенияПромПодразделениеОтправитель.ПеремещениеОперучет КАК ПеремещениеОперучет,
	|	втПеремещенияПромПодразделениеОтправитель.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ втПеремещенияПромПодразделениеПолучатель
	|ИЗ
	|	втПеремещенияПромПодразделениеОтправитель КАК втПеремещенияПромПодразделениеОтправитель
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеПредприятийСкладамУчетнойСистемы КАК СоответствиеПредприятийСкладамУчетнойСистемы
	|		ПО втПеремещенияПромПодразделениеОтправитель.ПодразделениеОтправитель = СоответствиеПредприятийСкладамУчетнойСистемы.СкладУчетнойСистемы
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПодразделениеПолучатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПеремещенияПромПодразделениеПолучатель.ДатаПеремещения КАК ДатаПеремещения,
	|	втПеремещенияПромПодразделениеПолучатель.НомерПеремещения КАК НомерПеремещения,
	|	втПеремещенияПромПодразделениеПолучатель.ПредприятиеОтправитель КАК ПредприятиеОтправитель,
	|	СоответствиеПредприятийСкладамУчетнойСистемы.Предприятие КАК ПредприятиеПолучатель,
	|	втПеремещенияПромПодразделениеПолучатель.ПеремещениеОперучет КАК ПеремещениеОперучет,
	|	СоответствиеОрганизацийОрганизациямУчетнойСистемы.Организация КАК Организация,
	|	втПеремещенияПромПодразделениеПолучатель.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(_ВозвратыВПеремещенияхМеркурий.КоличествоБазЕд, 0) * втПеремещенияПромПодразделениеПолучатель.Номенклатура._КоличествоЕдиницМеркурийВБазовойЕдинице КАК КоличествоВозврат
	|ПОМЕСТИТЬ втПеремещенияПромВсеПоля
	|ИЗ
	|	втПеремещенияПромПодразделениеПолучатель КАК втПеремещенияПромПодразделениеПолучатель
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеПредприятийСкладамУчетнойСистемы КАК СоответствиеПредприятийСкладамУчетнойСистемы
	|		ПО втПеремещенияПромПодразделениеПолучатель.ПодразделениеПолучатель = СоответствиеПредприятийСкладамУчетнойСистемы.СкладУчетнойСистемы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязиМеждуКонтрагентамиИПредприятиями КАК СвязиМеждуКонтрагентамиИПредприятиями
	|		ПО (СоответствиеПредприятийСкладамУчетнойСистемы.Предприятие = СвязиМеждуКонтрагентамиИПредприятиями.Предприятие)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеХозяйствующихСубъектовОрганизациямУчетнойСистемы КАК СоответствиеХозяйствующихСубъектовОрганизациямУчетнойСистемы
	|		ПО (СвязиМеждуКонтрагентамиИПредприятиями.Контрагент = СоответствиеХозяйствующихСубъектовОрганизациямУчетнойСистемы.ХозяйствующийСубъект)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОрганизацийОрганизациямУчетнойСистемы КАК СоответствиеОрганизацийОрганизациямУчетнойСистемы
	|		ПО (СоответствиеХозяйствующихСубъектовОрганизациямУчетнойСистемы.ОрганизацияУчетнойСистемы = СоответствиеОрганизацийОрганизациямУчетнойСистемы.ОрганизацияУчетнойСистемы)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений._ВозвратыВПеремещенияхМеркурий КАК _ВозвратыВПеремещенияхМеркурий
	|		ПО втПеремещенияПромПодразделениеПолучатель.ПеремещениеОперучет = _ВозвратыВПеремещенияхМеркурий.Документ
	|			И втПеремещенияПромПодразделениеПолучатель.Номенклатура = _ВозвратыВПеремещенияхМеркурий.Номенклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДатаПеремещения,
	|	НомерПеремещения,
	|	ПредприятиеОтправитель,
	|	ПредприятиеПолучатель,
	|	Организация,
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таб.Ссылка КАК ВСД,
	|	СоответствиеНоменклатуры.НоменклатураУчетнойСистемы КАК НоменклатураУчетнойСистемы,
	|	СтатусыВСДСрезПоследних.СтатусВСД КАК СтатусВСД,
	|	Таб.НомерТТН КАК НомерТТН,
	|	Таб.ДатаТТН КАК ДатаТТН,
	|	Таб.ПредприятиеОтправитель КАК ПредприятиеОтправитель,
	|	Таб.ПредприятиеПолучатель КАК ПредприятиеПолучатель,
	|	Таб.Организация КАК Организация
	|ПОМЕСТИТЬ втВСДПодробно
	|ИЗ
	|	Документ.ВСД КАК Таб
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеПродукцииНоменклатуреУчетнойСистемы КАК СоответствиеНоменклатуры
	|		ПО (СоответствиеНоменклатуры.Продукция = Таб.Продукция)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыВСД.СрезПоследних КАК СтатусыВСДСрезПоследних
	|		ПО Таб.Ссылка = СтатусыВСДСрезПоследних.ВСД
	|ГДЕ
	|	Таб.КонтрагентПолучатель.Основной
	|	И Таб.Дата >= &ДатаНачала
	|	И СтатусыВСДСрезПоследних.СтатусВСД <> ЗНАЧЕНИЕ(Справочник.СтатусыВСД.Аннулирован)
	//---> SPB/Mochalov.Y 22.04.2019 задача SUP77-588160 (справки ВСД с истекшим сроком годности)
	|	И НЕ Таб.ПометкаУдаления
	//<--- SPB/Mochalov.Y 22.04.2019 задача SUP77-588160 (справки ВСД с истекшим сроком годности)|
	//---> SPB/Mochalov.Y 04.06.2019 задача SUP77-588809 (Сверка остатков Меркурий)
	|	И Таб.ВидВСД = ЗНАЧЕНИЕ(Перечисление.ВидыВСД.Входящий)
	//<--- SPB/Mochalov.Y 04.06.2019 задача SUP77-588809 (Сверка остатков Меркурий)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДатаТТН,
	|	НомерТТН,
	|	ПредприятиеОтправитель,
	|	ПредприятиеПолучатель,
	|	Организация,
	|	НоменклатураУчетнойСистемы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПеремещенияПромВсеПоля.ДатаПеремещения КАК ДатаПеремещения,
	|	втПеремещенияПромВсеПоля.НомерПеремещения КАК НомерПеремещения,
	|	втПеремещенияПромВсеПоля.ПредприятиеОтправитель КАК ПредприятиеОтправитель,
	|	втПеремещенияПромВсеПоля.ПредприятиеПолучатель КАК ПредприятиеПолучатель,
	|	ЕСТЬNULL(втВСДПодробно.ВСД, ЗНАЧЕНИЕ(Документ.ВСД.ПустаяСсылка)) КАК ВСД,
	|	втПеремещенияПромВсеПоля.ПеремещениеОперучет КАК ПеремещениеОперучет,
	|	втПеремещенияПромВсеПоля.КоличествоВозврат КАК КоличествоВозврат
	|ПОМЕСТИТЬ втПеремещенияПромВСД
	|ИЗ
	|	втПеремещенияПромВсеПоля КАК втПеремещенияПромВсеПоля
	|		ЛЕВОЕ СОЕДИНЕНИЕ втВСДПодробно КАК втВСДПодробно
	|		ПО втПеремещенияПромВсеПоля.ДатаПеремещения = втВСДПодробно.ДатаТТН
	|			И втПеремещенияПромВсеПоля.НомерПеремещения = втВСДПодробно.НомерТТН
	|			И втПеремещенияПромВсеПоля.ПредприятиеОтправитель = втВСДПодробно.ПредприятиеОтправитель
	|			И втПеремещенияПромВсеПоля.ПредприятиеПолучатель = втВСДПодробно.ПредприятиеПолучатель
	|			И втПеремещенияПромВсеПоля.Организация = втВСДПодробно.Организация
	|			И втПеремещенияПромВсеПоля.Номенклатура = втВСДПодробно.НоменклатураУчетнойСистемы
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВСД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПеремещенияПромВСД.ДатаПеремещения КАК ДатаПеремещения,
	|	втПеремещенияПромВСД.НомерПеремещения КАК НомерПеремещения,
	|	втПеремещенияПромВСД.ПредприятиеОтправитель КАК ПредприятиеОтправитель,
	|	втПеремещенияПромВСД.ПредприятиеПолучатель КАК ПредприятиеПолучатель,
	|	втПеремещенияПромВСД.ВСД КАК ВСД,
	|	ЕСТЬNULL(ПриходныеОперации.Ссылка, ЗНАЧЕНИЕ(Документ.ПриходныеОперации.ПустаяСсылка)) КАК ПриходнаяОперация,
	|	втПеремещенияПромВСД.ПеремещениеОперучет КАК ПеремещениеОперучет,
	|	втПеремещенияПромВСД.КоличествоВозврат КАК КоличествоВозврат
	|ПОМЕСТИТЬ втПеремещенияПромПриходнаяОперация
	|ИЗ
	|	втПеремещенияПромВСД КАК втПеремещенияПромВСД
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходныеОперации КАК ПриходныеОперации
	|		ПО втПеремещенияПромВСД.ВСД = ПриходныеОперации.ВСД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияЗаявок.ДокументСсылка КАК ДокументСсылка,
	|	СостоянияЗаявок.Статус КАК Статус
	|ПОМЕСТИТЬ втСостоянияЗаявок
	|ИЗ
	|	РегистрСведений.ЖурналРегистрацииСостоянийЗаявокНаОформлениеОпераций.СрезПоследних(
	|			,
	|			ДокументСсылка В
	|				(ВЫБРАТЬ
	|					Таб.ПриходнаяОперация
	|				ИЗ
	|					втПеремещенияПромПриходнаяОперация КАК Таб)) КАК СостоянияЗаявок
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПеремещенияПромПриходнаяОперация.ДатаПеремещения КАК ДатаПеремещения,
	|	втПеремещенияПромПриходнаяОперация.НомерПеремещения КАК НомерПеремещения,
	|	втПеремещенияПромПриходнаяОперация.ПредприятиеОтправитель КАК ПредприятиеОтправитель,
	|	втПеремещенияПромПриходнаяОперация.ПредприятиеПолучатель КАК ПредприятиеПолучатель,
	|	втПеремещенияПромПриходнаяОперация.ВСД КАК ВСД,
	|	втПеремещенияПромПриходнаяОперация.ПриходнаяОперация КАК ПриходнаяОперация,
	|	ЕСТЬNULL(втСостоянияЗаявок.Статус, НЕОПРЕДЕЛЕНО) КАК СтатусПриходнойОперации,
	|	втПеремещенияПромПриходнаяОперация.ПеремещениеОперучет КАК ПеремещениеОперучет,
	|	втПеремещенияПромПриходнаяОперация.КоличествоВозврат КАК КоличествоВозврат,
	|	ВЫБОР
	|		КОГДА втСостоянияЗаявок.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыЗаявок.УспешноОбработана)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПриходнаяОперацияОбработана
	|ПОМЕСТИТЬ втСостоянияВСДИПриходныхОпераций
	|ИЗ
	|	втПеремещенияПромПриходнаяОперация КАК втПеремещенияПромПриходнаяОперация
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСостоянияЗаявок КАК втСостоянияЗаявок
	|		ПО втПеремещенияПромПриходнаяОперация.ПриходнаяОперация = втСостоянияЗаявок.ДокументСсылка
	|;
	|
	//---> MSK/Osipov.A 29.03.2021 Задача SUP77-599135
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСостоянияВСДИПриходныхОпераций.ДатаПеремещения КАК ДатаПеремещения,
	|	втСостоянияВСДИПриходныхОпераций.НомерПеремещения КАК НомерПеремещения,
	|	втСостоянияВСДИПриходныхОпераций.ПредприятиеОтправитель КАК ПредприятиеОтправитель,
	|	втСостоянияВСДИПриходныхОпераций.ПредприятиеПолучатель КАК ПредприятиеПолучатель,
	|	втСостоянияВСДИПриходныхОпераций.ВСД КАК ВСД,
	|	втСостоянияВСДИПриходныхОпераций.ПриходнаяОперация КАК ПриходнаяОперация,
	|	втСостоянияВСДИПриходныхОпераций.ПеремещениеОперучет КАК ПеремещениеОперучет,
	|	втСостоянияВСДИПриходныхОпераций.КоличествоВозврат КАК КоличествоВозврат,
	|	втСостоянияВСДИПриходныхОпераций.СтатусПриходнойОперации КАК СтатусПриходнойОперации,
	|	ВЫБОР 
	|		КОГДА НАЧАЛОПЕРИОДА(ШапкаВСД.ДатаТТН, ДЕНЬ) >= НАЧАЛОПЕРИОДА(ШапкаВСД.ДатаОкончанияСрокаГодностиНачало, ДЕНЬ)
	|			И НАЧАЛОПЕРИОДА(ШапкаВСД.ДатаТТН, ДЕНЬ) >= НАЧАЛОПЕРИОДА(ШапкаВСД.ДатаОкончанияСрокаГодностиОкончание, ДЕНЬ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоПросроченныйВСД
	|ПОМЕСТИТЬ втОперацииКОформлению
	|ИЗ
	|	втСостоянияВСДИПриходныхОпераций КАК втСостоянияВСДИПриходныхОпераций
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВСД КАК ШапкаВСД
	|	ПО ШапкаВСД.Ссылка = втСостоянияВСДИПриходныхОпераций.ВСД
	|ГДЕ
	|	НЕ втСостоянияВСДИПриходныхОпераций.ПриходнаяОперацияОбработана
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОперацииКОформлению.ДатаПеремещения КАК ДатаПеремещения,
	|	втОперацииКОформлению.НомерПеремещения КАК НомерПеремещения,
	|	втОперацииКОформлению.ПредприятиеОтправитель КАК ПредприятиеОтправитель,
	|	втОперацииКОформлению.ПредприятиеПолучатель КАК ПредприятиеПолучатель,
	|	втОперацииКОформлению.ВСД КАК ВСД,
	|	втОперацииКОформлению.ПриходнаяОперация КАК ПриходнаяОперация,
	|	втОперацииКОформлению.ПеремещениеОперучет КАК ПеремещениеОперучет,
	|	втОперацииКОформлению.КоличествоВозврат КАК КоличествоВозврат,
	|	втОперацииКОформлению.СтатусПриходнойОперации КАК СтатусПриходнойОперации,
	|	втОперацииКОформлению.ЭтоПросроченныйВСД КАК ЭтоПросроченныйВСД
	|ИЗ
	|	втОперацииКОформлению КАК втОперацииКОформлению
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСостоянияВСДИПриходныхОпераций.ПеремещениеОперучет КАК ПеремещениеОперучет,
	|	МИНИМУМ(втСостоянияВСДИПриходныхОпераций.ПриходнаяОперацияОбработана) КАК ПриходнаяОперацияОбработана,
	|	втСостоянияВСДИПриходныхОпераций.ПредприятиеПолучатель КАК ПредприятиеПолучатель
	|ИЗ
	|	втСостоянияВСДИПриходныхОпераций КАК втСостоянияВСДИПриходныхОпераций
	|
	|СГРУППИРОВАТЬ ПО
	|	втСостоянияВСДИПриходныхОпераций.ПеремещениеОперучет,
	|	втСостоянияВСДИПриходныхОпераций.ПредприятиеПолучатель
	|
	|ИМЕЮЩИЕ
	|	МИНИМУМ(втСостоянияВСДИПриходныхОпераций.ПриходнаяОперацияОбработана) = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Док.ПредприятиеПолучатель КАК ПредприятиеПолучатель,
	|	МАКСИМУМ(Док.Дата) КАК Дата
	|ИЗ
	|	Документ.ПриходныеОперации КАК Док
	|ГДЕ
	|	Док.Дата >= &ДатаНачала
	|	И Док.ПредприятиеПолучатель В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				Таб.ПредприятиеПолучатель
	|			ИЗ
	|				втОперацииКОформлению КАК Таб)
	|	И НЕ Док.ПометкаУдаления
	|
	|СГРУППИРОВАТЬ ПО
	|	Док.ПредприятиеПолучатель";
	//<--- MSK/Osipov.A 29.03.2021 Задача SUP77-599135
	#КонецОбласти
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	//---> MSK/Osipov.A 29.03.2021 Задача SUP77-599135
	ВыборкаДанных = РезультатЗапроса[10].Выбрать();
	//<--- MSK/Osipov.A 29.03.2021 Задача SUP77-599135
	НовыеПриходныеОперации = Новый Массив;
	//---> SPB/Mochalov.Y 22.04.2019 задача SUP77-588160 (справки ВСД с истекшим сроком годности)
	ПросроченныеВСД = Новый Массив;
	//<--- SPB/Mochalov.Y 22.04.2019 задача SUP77-588160 (справки ВСД с истекшим сроком годности)
	
	//---> MSK/Osipov.A 31.03.2021 Задача SUP77-599135
	МинимальнаяПаузаМеждуАвтоматическимГашениемВСД = Константы._МинимальнаяПаузаМеждуАвтоматическимГашениемВСД.Получить();
	ВременаДляОперацийПоПредприятиям = РезультатЗапроса[12].Выгрузить();
	
	Если МинимальнаяПаузаМеждуАвтоматическимГашениемВСД <> 0 Тогда
		
		НовыйГенераторСлучайныхЧисел = Новый ГенераторСлучайныхЧисел;
		
		Для Каждого ВременаПредприятийСтрока Из ВременаДляОперацийПоПредприятиям Цикл
			
			КоэффициентДляМаксПаузы = 4;
			ПаузаМеждуАвтоматическимГашениемВСД = НовыйГенераторСлучайныхЧисел.СлучайноеЧисло(
				МинимальнаяПаузаМеждуАвтоматическимГашениемВСД,
				КоэффициентДляМаксПаузы*МинимальнаяПаузаМеждуАвтоматическимГашениемВСД);
				
			// Обеспечиваем "плавный" старт.
			ДоляРесторановДляСтартаГашения = 0.2;
			Если ТекущаяДата() - ВременаПредприятийСтрока.Дата > 3600 Тогда
				ВременаПредприятийСтрока.Дата = ТекущаяДата()
					+ ПаузаМеждуАвтоматическимГашениемВСД
					- (1 + ДоляРесторановДляСтартаГашения*(КоэффициентДляМаксПаузы - 1))*МинимальнаяПаузаМеждуАвтоматическимГашениемВСД;
			Иначе
				ВременаПредприятийСтрока.Дата = ВременаПредприятийСтрока.Дата + ПаузаМеждуАвтоматическимГашениемВСД;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	//<--- MSK/Osipov.A 31.03.2021 Задача SUP77-599135
	
	Пока ВыборкаДанных.Следующий() Цикл
		
		Если Не ЗначениеЗаполнено(ВыборкаДанных.ВСД) Тогда
			// ВСД не загружена.
			
		//---> SPB/Mochalov.Y 22.04.2019 задача SUP77-588160 (справки ВСД с истекшим сроком годности)
		ИначеЕсли ВыборкаДанных.ЭтоПросроченныйВСД = Истина Тогда
			ПросроченныеВСД.Добавить(ВыборкаДанных.ВСД);
			ОписаниеОшибки = НСтр("ru = 'Попытка гашения просроченного ВСД'");
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Гашения просроченного ВСД'"), УровеньЖурналаРегистрации.Ошибка,,ВыборкаДанных.ВСД, ОписаниеОшибки);
		//<--- SPB/Mochalov.Y 22.04.2019 задача SUP77-588160 (справки ВСД с истекшим сроком годности)	
		
		ИначеЕсли Не ЗначениеЗаполнено(ВыборкаДанных.ПриходнаяОперация) Тогда
			
			НужнаЕщеОднаИтерация = Истина;
			//---> MSK/Osipov.A 31.03.2021 Задача SUP77-599135
			Если МинимальнаяПаузаМеждуАвтоматическимГашениемВСД > 0 Тогда
				
				НайденныеСтроки = ВременаДляОперацийПоПредприятиям.НайтиСтроки(Новый Структура("ПредприятиеПолучатель", ВыборкаДанных.ПредприятиеПолучатель));
				СтрокаДляПредприятия = Неопределено;
				Если НайденныеСтроки.Количество() > 0 Тогда
					СтрокаДляПредприятия = НайденныеСтроки[0];
					Если СтрокаДляПредприятия.Дата > ТекущаяДата() Тогда
						// Следующую ВСД по этому предприятию гасить еще рано.
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				
				Если СтрокаДляПредприятия = Неопределено Тогда
					СтрокаДляПредприятия = ВременаДляОперацийПоПредприятиям.Добавить();
					СтрокаДляПредприятия.ПредприятиеПолучатель = ВыборкаДанных.ПредприятиеПолучатель;
				КонецЕсли;
				
				// В эту итерацию ВСД по данному предприятию уже не оформляем.
				СтрокаДляПредприятия.Дата = ТекущаяДата() + 3600;
				
			КонецЕсли;
			ОформитьПриходнуюОперацию(ВыборкаДанных.ВСД, ВыборкаДанных.КоличествоВозврат);
			//<--- MSK/Osipov.A 31.03.2021 Задача SUP77-599135
			
		ИначеЕсли ВыборкаДанных.СтатусПриходнойОперации = Справочники.СтатусыЗаявок.IDПолучен
			Или ВыборкаДанных.СтатусПриходнойОперации = Справочники.СтатусыЗаявок.Обрабатывается Тогда
			
			РегламентныеЗаданияСлужебный.ВыполнитьРегламентноеЗаданиеВручную(Метаданные.РегламентныеЗадания.ОбработкаОтветаПоПриходнымОперациям);
			НужнаЕщеОднаИтерация = Истина;
			
		ИначеЕсли ВыборкаДанных.СтатусПриходнойОперации = Справочники.СтатусыЗаявок.Новая
			Или Не ЗначениеЗаполнено(ВыборкаДанных.СтатусПриходнойОперации) Тогда
			НовыеПриходныеОперации.Добавить(ВыборкаДанных.ПриходнаяОперация);
		КонецЕсли;
		
		//---> MSK/Osipov.A 31.03.2021 Задача SUP77-598925
		//<--- MSK/Osipov.A 31.03.2021 Задача SUP77-598925
		
	КонецЦикла;
	
	//---> MSK/Osipov.A 31.03.2021 Задача SUP77-598925
	// В режиме логирования отправку заявок не делаем, чтобы контролировать процесс.
	Если НовыеПриходныеОперации.Количество() > 0 И Не РежимОтладки Тогда
		РегламентныеЗаданияСлужебный.ВыполнитьРегламентноеЗаданиеВручную(Метаданные.РегламентныеЗадания.ОтправкаПриходныхОпераций);
	КонецЕсли;
	//<--- MSK/Osipov.A 31.03.2021 Задача SUP77-598925
	
	// Подтвержденные перемещения сети.
	//---> MSK/Osipov.A 29.03.2021 Задача SUP77-599135
	ВыборкаДанных = РезультатЗапроса[11].Выбрать();
	//<--- MSK/Osipov.A 29.03.2021 Задача SUP77-599135
	Пока ВыборкаДанных.Следующий() Цикл
		
		МенеджерЗаписи = РегистрыСведений._ПодтвержденияПеремещенийМеркурий.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.ПеремещениеОперучет = ВыборкаДанных.ПеремещениеОперучет;
		МенеджерЗаписи.Прочитать();
		МенеджерЗаписи.ОтраженоВМеркурий = Истина;
		МенеджерЗаписи.Записать();
		
	КонецЦикла;
	
	//---> SPB/Mochalov.Y 22.04.2019 задача SUP77-588160 (справки ВСД с истекшим сроком годности)
	Если ПросроченныеВСД.Количество() Тогда
		
		ТекстВСД = "";
		Для Каждого СсылкаВСД Из ПросроченныеВСД Цикл
			ОбъектВСД = СсылкаВСД.ПолучитьОбъект();
			Если ОбъектВСД.Проведен Тогда
				ОбъектВСД.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			КонецЕсли;
			ОбъектВСД.Комментарий = "Необходимо проверить срок годности. " + ОбъектВСД.Комментарий;
			ОбъектВСД.ПометкаУдаления = Истина;
			ОбъектВСД.Записать();
			
			ТекстВСД = ТекстВСД + 
			ОбъектВСД.Ссылка + " / "+ ОбъектВСД.ПредприятиеПолучатель +" / " + ОбъектВСД.ДатаТТН + " / " + ОбъектВСД.Продукция + "
			|";
		КонецЦикла;
		
		ТекстСообщения = 
		"
		|ВНИМАНИЕ! 
		|
		|Необходимо проверить срок годности ВСД. 
		|
		|	"+ ТекстВСД +"
		|
		|";
		
		МЗ = РегистрыСведений._СообщенияДляРассылки.СоздатьМенеджерЗаписи();
		МЗ.Период = ТекущаяДата();
		МЗ.УникальныйИдентификатор = Новый УникальныйИдентификатор;
		МЗ.Сообщение = Новый ХранилищеЗначения(ТекстСообщения);
		МЗ.Тема = "Контроль при гашении ВСД на сети";
		МЗ.УчетнаяЗапись = Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты;
		ПараметрыЗадания = Справочники._Задания.КонтрольПриГашенииВСДНаСети.Параметры.Получить();
		ПараметрыЗадания.Свойство("Адрес", МЗ.Адрес);
		
		МЗ.Записать();
		
	КонецЕсли;
	//<--- SPB/Mochalov.Y 22.04.2019 задача SUP77-588160 (справки ВСД с истекшим сроком годности)
	
КонецПроцедуры

//---> MSK/Osipov.A 30.08.2018 15:46:07 Задача ERP2-36
Процедура ПогаситьВозвратныеВСД() Экспорт
	
	ДатаНачала = ТекущаяДата() - 7*24*60*60;
	
	// Подтвержденные перемещения сторонним организациям.
	Запрос = Новый Запрос;
	Запрос.Текст =
	//---> MSK/Osipov.A 18.02.2021 Задача SUP77-598523
	"ВЫБРАТЬ
	|	Таб.Ссылка КАК ВСД
	|ИЗ
	|	Документ.ВСД КАК Таб
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходныеОперации КАК ПриходныеОперации
	|		ПО Таб.Ссылка = ПриходныеОперации.ВСД
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеХозяйствующихСубъектовОрганизациямУчетнойСистемы КАК СоответствиеХозяйствующихСубъектовОрганизациямУчетнойСистемы
	|		ПО Таб.КонтрагентПолучатель = СоответствиеХозяйствующихСубъектовОрганизациямУчетнойСистемы.ХозяйствующийСубъект
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОрганизацийОрганизациямУчетнойСистемы КАК СоответствиеОрганизацийОрганизациямУчетнойСистемы
	|		ПО Таб.Организация = СоответствиеОрганизацийОрганизациямУчетнойСистемы.Организация
	|ГДЕ
	|	Таб.Дата >= &ДатаНачала
	|	И Таб.ТипВСД = ЗНАЧЕНИЕ(Справочник.ТипыВСД.ВозвратныйВСД)
	|	И Таб.КонтрагентОтправитель.Основной
	|	И Таб.КонтрагентПолучатель.Основной
	|	И ПриходныеОперации.Ссылка ЕСТЬ NULL
	|	И СоответствиеОрганизацийОрганизациямУчетнойСистемы.ОрганизацияУчетнойСистемы = СоответствиеХозяйствующихСубъектовОрганизациямУчетнойСистемы.ОрганизацияУчетнойСистемы";
	//<--- MSK/Osipov.A 18.02.2021 Задача SUP77-598523
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	ВыборкаДанных = Запрос.Выполнить().Выбрать();
	НовыеПриходныеОперации = Новый Массив;
	Пока ВыборкаДанных.Следующий() Цикл
		НоваяПриходнаяОперация = ОформитьПриходнуюОперацию(ВыборкаДанных.ВСД);
		НовыеПриходныеОперации.Добавить(НоваяПриходнаяОперация);
	КонецЦикла;
	
	Если НовыеПриходныеОперации.Количество() > 0 Тогда
		ИнтеграцияВетисAPIОтправкаЗаявокНаОформление.СформироватьЗаявки(НовыеПриходныеОперации);
	КонецЕсли;
	
КонецПроцедуры

Функция ОформитьПриходнуюОперацию(ВСД, КоличествоВозврат = 0)  Экспорт
	
	ПриходнаяОперация = Документы.ПриходныеОперации.СоздатьДокумент();
	ПриходнаяОперация.Заполнить(ВСД);
	ПриходнаяОперация._КонтрольПройден = Истина;
	ПриходнаяОперация.Проведен = Истина;
	
	//---> MSK/Osipov.A 30.08.2018 15:46:07 Задача ERP2-36
	// Заполнение данных возврата, если он есть.
	Если КоличествоВозврат > 0 Тогда
		
		//---> MSK/Osipov.A 18.02.2021 Задача SUP77-598601
		ПриходнаяОперация.Количество_Возврат = КоличествоВозврат;
		//<--- MSK/Osipov.A 18.02.2021 Задача SUP77-598601
		ПриходнаяОперация.Количество = ПриходнаяОперация.Количество - КоличествоВозврат;
		ЗаполнитьДанныеДляВозвратаНаОсновеВходящихДанных(ПриходнаяОперация);
		
		ПриходнаяОперация.РешениеОПриемеВходнойПартии = ?(ПриходнаяОперация.Количество > 0,
			Справочники.РешенияОПриемеВходнойПартии.ПринятьЧастьГруза,
			Справочники.РешенияОПриемеВходнойПартии.ОформитьВозвратНаВсюПоставку);
		
	КонецЕсли;
	//<--- MSK/Osipov.A 30.08.2018 15:46:07 Задача ERP2-36
	
	//---> MSK/Fedorchuk.V 07.08.2020 SUP77-595700
	// Устанавливаем ответственного в соответствии с настройками
	УстановитьОтветственного(ПриходнаяОперация);
	//<--- MSK/Fedorchuk.V 07.08.2020 SUP77-595700

	Попытка
		ПриходнаяОперация.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		
		ОписаниеОшибки = НСтр("ru = 'Ошибка формирования приходной операции по подразделению'") + " "
			+ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВСД, "ПредприятиеПолучатель");
		ЗаписьЖурналаРегистрации(СобытиеИнтеграцияОперучетМеркурий(), УровеньЖурналаРегистрации.Ошибка,,, ОписаниеОшибки);
		ВызватьИсключение ОписаниеОшибки;
		
	КонецПопытки;
	
	Возврат ПриходнаяОперация.Ссылка;
	
КонецФункции
//<--- MSK/Osipov.A 30.08.2018 15:46:07 Задача ERP2-36

#КонецОбласти

#Область Прочее

// Возвращает ссылку на производственную операцию, заполненную на основе переданных данных.
//
// Параметры:
//  ЗначенияСвойств - Структура - содержит имена и значения свойств.
//  ПроизводственнаяОперацияСсылка - ДокументСсылка.ПроизводственнаяОперация - если
//  параметр заполнен, будет перезаполнен соответствующий документ..
//
// Возвращаемое значение:
//  ДокументСсылка.ПроизводственнаяОперация - ссылка на заполненный документ.
//
Функция СоздатьЗаполнитьПроизводственнуюОперацию(ЗначенияСвойств, ЗавершитьПроизводство = Ложь)
	
	ПроизводственнаяОперация = Документы.ПроизводственныеОперации.СоздатьДокумент();
	ЗаполнениеРеквизитовОбъектов.ЗаполнитьРеквизитыДокументовПоУмолчаниюОбработкаЗаполнения(ПроизводственнаяОперация, Неопределено, "", Ложь);
	
	Производственнаяоперация.НезавершенноеПроизводство = Истина;
	Производственнаяоперация.ЗавершитьПроизводство = ЗавершитьПроизводство;
	
	Производственнаяоперация.Дата         = ЗначенияСвойств.Дата;
	Производственнаяоперация.Организация  = ЗначенияСвойств.Организация;
	Производственнаяоперация.Контрагент   = ЗначенияСвойств.Контрагент;
	Производственнаяоперация.Предприятие  = ЗначенияСвойств.Предприятие;
	
	ИдентификаторТранзакции = НайтиСоздатьИдентификаторПроизводственнойТранзакции(
		ЗначенияСвойств.НоменклатураУчетнойСистемы, Производственнаяоперация.Дата);
	Производственнаяоперация.ИдентификаторТранзакции = ИдентификаторТранзакции;
	
	//---> SPB/Mochalov.Y 12.10.2018 // есть плавающая ошибка, ставлю отладочное сообщение, чтобы ее поймать
	Если НЕ ЗначениеЗаполнено(Производственнаяоперация.ИдентификаторТранзакции) Тогда
		Информация = "Дата = " + Формат(ЗначенияСвойств.Дата, "ДФ='dd.MM.yyyy ЧЧ:мм:сс'") 
		+ ", Номенклатура заполнена = " + ЗначениеЗаполнено(ЗначенияСвойств.НоменклатураУчетнойСистемы)
		+ ", Номенклатура = " + ?(ТипЗнч(ЗначенияСвойств.НоменклатураУчетнойСистемы) = Тип("СправочникСсылка.НоменклатураУчетнойСистемы"), ЗначенияСвойств.НоменклатураУчетнойСистемы, ТипЗнч(ЗначенияСвойств.НоменклатураУчетнойСистемы));
		ЗаписьЖурналаРегистрации(СобытиеИнтеграцияОперучетМеркурий(), УровеньЖурналаРегистрации.Предупреждение,,, Информация);
	КонецЕсли;
	//<--- SPB/Mochalov.Y 12.10.2018 
	
	Если ЗначениеЗаполнено(ЗначенияСвойств.НоменклатураУчетнойСистемы) Тогда
		
		// Заполнение табличной части ТаблицаПродукции.
		НоваяСтрока = ПроизводственнаяОперация.ТаблицаПродукции.Добавить();
		
		СтруктураРеквизитов = ЗаполнениеРеквизитовОбъектов.ПолучитьЗначенияРеквизитовТабличнойЧасти(ПроизводственнаяОперация, "ТаблицаПродукции");
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураРеквизитов);
		НоваяСтрока.GUIDСтроки = Строка(Новый УникальныйИдентификатор());
		
		СвойстваПродукции = СвойстваПроизводимойПродукцииПоНоменклатуреУчетнойСистемы(ЗначенияСвойств.НоменклатураУчетнойСистемы);
		Если Не ЗначениеЗаполнено(СвойстваПродукции.Продукция) Тогда
			ОписаниеОшибки = НСтр("ru = 'Не указана продукция Меркурий для'") + " " + ЗначенияСвойств.НоменклатураУчетнойСистемы;
			ЗаписьЖурналаРегистрации(СобытиеИнтеграцияОперучетМеркурий(), УровеньЖурналаРегистрации.Ошибка,,, ОписаниеОшибки);
			ВызватьИсключение ОписаниеОшибки;
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СвойстваПродукции);
		
		НоваяСтрока.ЕдиницаИзмерения = ЗначенияСвойств.ЕдиницаИзмеренияМеркурий;
		НоваяСтрока.Количество       = ЗначенияСвойств.КоличествоЕдиницМеркурий;
		
		НоваяСтрока.ДатаВыработкиНачало = ПроизводственнаяОперация.Дата;
		
		ДатаОкончанияСрокаГодности = ДатаСрокаГодностиНоменклатуры(ЗначенияСвойств.НоменклатураУчетнойСистемы, ПроизводственнаяОперация.Дата);
		НоваяСтрока.ДатаОкончанияСрокаГодностиНачало = ДатаОкончанияСрокаГодности;
		
		НоваяСтрока.НоменклатураУчетнойСистемы = ЗначенияСвойств.НоменклатураУчетнойСистемы;
		
		//---> MSK/Osipov.A 01.12.2021 Задача SUP77-602863
		// Для каждого идентификатора производственной транзакции генерируется соответствующий номер партии.
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ИдентификаторТранзакции", ИдентификаторТранзакции);
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	СпрИдентификаторыТранзакций.Код КАК Код,
		|	ЕСТЬNULL(СпрНомераПартий.Ссылка, НЕОПРЕДЕЛЕНО) КАК НомерПартии
		|ИЗ
		|	Справочник.ИдентификаторыПроизводственныхТранзакций КАК СпрИдентификаторыТранзакций
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НомераПроизводственныхПартий КАК СпрНомераПартий
		|		ПО СпрИдентификаторыТранзакций.Код = СпрНомераПартий.Код
		|ГДЕ
		|	СпрИдентификаторыТранзакций.Ссылка = &ИдентификаторТранзакции";
		ВыборкаНомеровПартий = Запрос.Выполнить().Выбрать();
		Если ВыборкаНомеровПартий.Следующий() Тогда
			Если ЗначениеЗаполнено(ВыборкаНомеровПартий.НомерПартии) Тогда
				НоваяСтрока.НомерПартии = ВыборкаНомеровПартий.НомерПартии;
			Иначе
				НовыйНомерПроизводственнойПартии = Справочники.НомераПроизводственныхПартий.СоздатьЭлемент();
				НовыйНомерПроизводственнойПартии.Код = ВыборкаНомеровПартий.Код;
				НовыйНомерПроизводственнойПартии.Наименование = НовыйНомерПроизводственнойПартии.Код;
				НовыйНомерПроизводственнойПартии.Записать();
				НоваяСтрока.НомерПартии = НовыйНомерПроизводственнойПартии.Ссылка;
			КонецЕсли;
		КонецЕсли;
		//<--- MSK/Osipov.A 01.12.2021 Задача SUP77-602863
		
	КонецЕсли;
	
	//---> MSK/Fedorchuk.V 07.08.2020 SUP77-595700
	// Устанавливаем ответственного в соответствии с настройками
	УстановитьОтветственного(ПроизводственнаяОперация);
	//<--- MSK/Fedorchuk.V 07.08.2020 SUP77-59570
	
	ПроизводственнаяОперация.Записать();
	
	Возврат ПроизводственнаяОперация.Ссылка;
	
КонецФункции

Функция НайтиСоздатьИдентификаторПроизводственнойТранзакции(Номенклатура, Знач ДатаТранзакции)
	
	ДатаТранзакции = НачалоДня(ДатаТранзакции);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	_АналитикаИдентификаторовПроизводственныхТранзакций.ИдентификаторПроизводственнойТранзакции КАК ИдентификаторПроизводственнойТранзакции
	|ИЗ
	|	РегистрСведений._АналитикаИдентификаторовПроизводственныхТранзакций КАК _АналитикаИдентификаторовПроизводственныхТранзакций
	|ГДЕ
	|	_АналитикаИдентификаторовПроизводственныхТранзакций.Номенклатура = &Номенклатура
	|	И _АналитикаИдентификаторовПроизводственныхТранзакций.ДатаТранзакции = &ДатаТранзакции";
	Запрос.УстановитьПараметр("Номенклатура",   Номенклатура);
	Запрос.УстановитьПараметр("ДатаТранзакции", ДатаТранзакции);
	
	ВыборкаДанных = Запрос.Выполнить().Выбрать();
	Если ВыборкаДанных.Следующий() Тогда
		Возврат ВыборкаДанных.ИдентификаторПроизводственнойТранзакции;
	КонецЕсли;
	
	Попытка
		
		НачатьТранзакцию();
		
		// Создаем новый ключ и записываем его аналитику.
		Ключ = Справочники.ИдентификаторыПроизводственныхТранзакций.СоздатьЭлемент();
		Ключ.Наименование = Строка(Номенклатура) + ";" + Формат(ДатаТранзакции, "ДФ=yyyy-MM-dd");
		Ключ.Записать();
		
		МенеджерЗаписи = РегистрыСведений._АналитикаИдентификаторовПроизводственныхТранзакций.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.ДатаТранзакции = ДатаТранзакции;
		МенеджерЗаписи.Номенклатура   = Номенклатура;
		МенеджерЗаписи.ИдентификаторПроизводственнойТранзакции = Ключ.Ссылка;
		МенеджерЗаписи.Записать();
		
		ЗафиксироватьТранзакцию();
		
		Возврат Ключ.Ссылка;
		
	Исключение
		ОтменитьТранзакцию();
		ЗаписьЖурналаРегистрации(СобытиеИнтеграцияОперучетМеркурий(), УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ВызватьИсключение;
	КонецПопытки;
	
КонецФункции

Функция СвойстваПроизводимойПродукцииПоНоменклатуреУчетнойСистемы(Номенклатура) Экспорт
	
	СвойстваПродукции = Новый Структура;
	СвойстваПродукции.Вставить("Продукция");
	СвойстваПродукции.Вставить("ПодвидПродукции");
	СвойстваПродукции.Вставить("ВидПродукции");
	СвойстваПродукции.Вставить("ТипПродукции");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СоответствиеПродукцииНоменклатуреУчетнойСистемы.Продукция КАК Продукция,
	|	СоответствиеПродукцииНоменклатуреУчетнойСистемы.Продукция.Владелец КАК ПодвидПродукции,
	|	СоответствиеПродукцииНоменклатуреУчетнойСистемы.Продукция.Владелец.Владелец КАК ВидПродукции,
	|	СоответствиеПродукцииНоменклатуреУчетнойСистемы.Продукция.Владелец.Владелец.Владелец КАК ТипПродукции
	|ИЗ
	|	РегистрСведений.СоответствиеПродукцииНоменклатуреУчетнойСистемы КАК СоответствиеПродукцииНоменклатуреУчетнойСистемы
	|ГДЕ
	|	СоответствиеПродукцииНоменклатуреУчетнойСистемы.НоменклатураУчетнойСистемы = &Номенклатура";
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	ВыборкаДанных = Запрос.Выполнить().Выбрать();
	Если ВыборкаДанных.Количество() > 1 Тогда
		//---> SPB/Mochalov.Y 13.02.2020 задача SUP77- ()
		//ВызватьИсключение НСтр("ru = 'Для номенклатуры Оперучет указано более 1 продукции Меркурий'");
		ВызватьИсключение НСтр("ru = 'Для номенклатуры "+Номенклатура+" Оперучет указано более 1 продукции Меркурий'");
		//<--- SPB/Mochalov.Y 13.02.2020 задача SUP77- ()
	КонецЕсли;
	
	Если ВыборкаДанных.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СвойстваПродукции, ВыборкаДанных);
	КонецЕсли;
	
	Возврат СвойстваПродукции;
	
КонецФункции

Функция ЕдиницаИзмеренияМеркурийПоЕдиницеИзмеренияУчетнойСистемы(ЕдиницаИзмеренияУчетнойСистемы)
	
	Результат = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СоответствиеЕдиницИзмеренийЕдиницамУчетнойСистемы.ЕдиницаИзмеренияУпаковка.Ссылка КАК Ссылка
	|ИЗ
	|	РегистрСведений.СоответствиеЕдиницИзмеренийЕдиницамУчетнойСистемы КАК СоответствиеЕдиницИзмеренийЕдиницамУчетнойСистемы
	|ГДЕ
	|	СоответствиеЕдиницИзмеренийЕдиницамУчетнойСистемы.ЕдиницаИзмеренияУчетнойСистемы = &ЕдиницаИзмеренияУчетнойСистемы";
	Запрос.УстановитьПараметр("ЕдиницаИзмеренияУчетнойСистемы", ЕдиницаИзмеренияУчетнойСистемы);
	ВыборкаДанных = Запрос.Выполнить().Выбрать();
	Если ВыборкаДанных.Количество() > 1 Тогда
		ВызватьИсключение НСтр("ru = 'Для единицы измерения Оперучет указано более 1 единицы измерения Меркурий'");
	КонецЕсли;
	
	Если ВыборкаДанных.Следующий() Тогда
		Результат = ВыборкаДанных.Ссылка;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ДатаСрокаГодностиНоменклатуры(Номенклатура, НачальнаяДата)
	
	СвойстваНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Номенклатура, "_СрокГодности, _ЕдиницаИзмеренияСрокаГодности");
	
	ДатаСрокаГодности = НачальнаяДата;
	Если СвойстваНоменклатуры._ЕдиницаИзмеренияСрокаГодности = Перечисления._ЕдиницыИзмеренияВремени.Час Тогда
		ДатаСрокаГодности = ДатаСрокаГодности + СвойстваНоменклатуры._СрокГодности*60*60;
	ИначеЕсли СвойстваНоменклатуры._ЕдиницаИзмеренияСрокаГодности = Перечисления._ЕдиницыИзмеренияВремени.Сутки Тогда
		ДатаСрокаГодности = ДатаСрокаГодности + СвойстваНоменклатуры._СрокГодности*24*60*60;
	ИначеЕсли СвойстваНоменклатуры._ЕдиницаИзмеренияСрокаГодности = Перечисления._ЕдиницыИзмеренияВремени.Месяц Тогда
		ДатаСрокаГодности = ДобавитьМесяц(ДатаСрокаГодности, СвойстваНоменклатуры._СрокГодности);
	Иначе
		// По умолчанию считаем срок годности равным 1 суткам.
		ДатаСрокаГодности = ДатаСрокаГодности + 24*60*60;
	КонецЕсли;
	
	Возврат ДатаСрокаГодности;
	
КонецФункции

Функция ПараметрыПроизводственнойОперации()
	
	ПараметрыПроизводственнойОперации = Новый Структура;
	
	ПараметрыПроизводственнойОперации.Вставить("Дата");
	ПараметрыПроизводственнойОперации.Вставить("Организация");
	ПараметрыПроизводственнойОперации.Вставить("Контрагент");
	ПараметрыПроизводственнойОперации.Вставить("Предприятие");
	
	ПараметрыПроизводственнойОперации.Вставить("НоменклатураУчетнойСистемы");
	ПараметрыПроизводственнойОперации.Вставить("КоличествоЕдиницМеркурий");
	ПараметрыПроизводственнойОперации.Вставить("ЕдиницаИзмеренияМеркурий");
	
	Возврат ПараметрыПроизводственнойОперации;
	
КонецФункции

Процедура ЗаписатьЛогАлгоритма(Описание)
	
	ЗаписьЖурналаРегистрации(СобытиеИнтеграцияОперучетМеркурийЛогАлгоритмов(), УровеньЖурналаРегистрации.Информация,,, Описание);
	
КонецПроцедуры

//---> MSK/Osipov.A 19.01.2021 Задача SUP77-597960
// См. одноименную процедуру в форме приходной операции.
Процедура ЗаполнитьДанныеДляВозвратаНаОсновеВходящихДанных(Объект)
	
	Если Объект.Количество = 0 Тогда
		Объект.Количество_Возврат = Объект.ВСД.Количество;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВСДУсловияПеремещенияПродукции.НомерСтроки КАК НомерСтроки,
		|	ИСТИНА КАК ВыполняетсяУсловие,
		|	ВСДУсловияПеремещенияПродукции.УсловиеПеремещения КАК УсловиеПеремещения
		|ИЗ
		|	Документ.ВСД.УсловияПеремещенияПродукции КАК ВСДУсловияПеремещенияПродукции
		|ГДЕ
		|	ВСДУсловияПеремещенияПродукции.Ссылка = &ВСД";
	
	Запрос.УстановитьПараметр("ВСД", Объект.ВСД);
	
	Объект.УсловияПеремещенияПродукции.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Объект.СписокФизическихУпаковок_Возврат.Загрузить(Объект.ВСД.СписокФизическихУпаковок.Выгрузить());
	
КонецПроцедуры //<--- MSK/Osipov.A 19.01.2021 Задача SUP77-597960

//---> MSK/Fedorchuk.V 07.08.2020 SUP77-595700
// Ответственный по организации на заданную дату
Функция ОтветственныйПоОрганизацииНаДату(Организация, НаДату) Экспорт
	
	Результат = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка");
	//---> MSK/Fedorchuk.V 10.08.2020 SUP77-595700
	// В отсутствие графика используем тех, у кого установлен флаг "По умолчанию"
	//Запрос = Новый Запрос(
	//	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//	|	"","" + ВЫБОР НАЧАЛОПЕРИОДА(р.ДатаОбновления, МЕСЯЦ)
	//	|		КОГДА &НачалоТекущегоМесяца
	//	|			ТОГДА р.РабочиеДниТекущегоМесяца
	//	|		КОГДА &НачалоПредыдущегоМесяца
	//	|			ТОГДА р.РабочиеДниСледующегоМесяца
	//	|	КОНЕЦ КАК РабочиеДни,
	//	|	р.ФизЛицо КАК ФизЛицо
	//	|ПОМЕСТИТЬ ВТ_Дни
	//	|ИЗ
	//	|	РегистрСведений._ОтветственныеЗаГашениеМеркурий КАК р
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	дни.ФизЛицо КАК ФизЛицо
	//	|ПОМЕСТИТЬ ВТ_ФизЛица
	//	|ИЗ
	//	|	ВТ_Дни КАК дни
	//	|ГДЕ
	//	|	дни.РабочиеДни ПОДОБНО &НомерДня
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	//	|	ОбслуживаемыеПредприятияСрезПоследних.Пользователь КАК Пользователь
	//	|ИЗ
	//	|	Справочник.Пользователи КАК Пользователи
	//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОбслуживаемыеПредприятия.СрезПоследних(&Дата, Организация = &Организация) КАК ОбслуживаемыеПредприятияСрезПоследних
	//	|		ПО (ОбслуживаемыеПредприятияСрезПоследних.Пользователь = Пользователи.Ссылка)
	//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ФизЛица КАК ВТ_ФизЛица
	//	|		ПО Пользователи.ФизическоеЛицо = ВТ_ФизЛица.ФизЛицо
	//	|ГДЕ
	//	|	НЕ Пользователи.Недействителен");
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	"","" + ВЫБОР НАЧАЛОПЕРИОДА(р.ДатаОбновления, МЕСЯЦ)
		|		КОГДА &НачалоТекущегоМесяца
		|			ТОГДА р.РабочиеДниТекущегоМесяца
		|		КОГДА &НачалоПредыдущегоМесяца
		|			ТОГДА р.РабочиеДниСледующегоМесяца
		|	КОНЕЦ КАК РабочиеДни,
		|	р.ФизЛицо КАК ФизЛицо,
		|	р.ПоУмолчанию КАК ПоУмолчанию
		|ПОМЕСТИТЬ ВТ_Дни
		|ИЗ
		|	РегистрСведений._ОтветственныеЗаГашениеМеркурий КАК р
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	дни.ФизЛицо КАК ФизЛицо,
		|	ВЫБОР
		|		КОГДА дни.РабочиеДни ПОДОБНО &НомерДня
		|			ТОГДА 0
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК Приоритет
		|ПОМЕСТИТЬ ВТ_ФизЛица
		|ИЗ
		|	ВТ_Дни КАК дни
		|ГДЕ
		|	(дни.РабочиеДни ПОДОБНО &НомерДня
		|			ИЛИ дни.ПоУмолчанию)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		//---> MSK/Osipov.A 21.01.2021 Задача SUP77-598281
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Пользователи.Ссылка КАК Пользователь,
		|	ВТ_ФизЛица.Приоритет КАК Приоритет
		|ПОМЕСТИТЬ ВТ_Пользователи
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПредприятияОбслуживаемыеПользователем.СрезПоследних(&Дата, Организация = &Организация) КАК ОбслуживаемыеПредприятияСрезПоследних
		|		ПО (ОбслуживаемыеПредприятияСрезПоследних.Пользователь = Пользователи.ПользовательСистемыМеркурий)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ФизЛица КАК ВТ_ФизЛица
		|		ПО Пользователи.ФизическоеЛицо = ВТ_ФизЛица.ФизЛицо
		|ГДЕ
		|	НЕ Пользователи.Недействителен
		|	И ОбслуживаемыеПредприятияСрезПоследних.Используется
		//<--- MSK/Osipov.A 21.01.2021 Задача SUP77-598281
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(МИНИМУМ(ВТ_Пользователи.Приоритет), -1) КАК Приоритет
		|ПОМЕСТИТЬ ВТ_Приоритет
		|ИЗ
		|	ВТ_Пользователи КАК ВТ_Пользователи
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВТ_Пользователи.Пользователь КАК Пользователь
		|ИЗ
		|	ВТ_Пользователи КАК ВТ_Пользователи
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ВТ_Приоритет
		|		ПО ВТ_Пользователи.Приоритет = ВТ_Приоритет.Приоритет");
	//<--- MSK/Fedorchuk.V 10.08.2020 SUP77-595700
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Дата", НаДату);
	Запрос.УстановитьПараметр("НачалоТекущегоМесяца", НачалоМесяца(НаДату));
	Запрос.УстановитьПараметр("НачалоПредыдущегоМесяца", НачалоМесяца(ДобавитьМесяц(НаДату, -1)));
	Запрос.УстановитьПараметр("НомерДня", "%," + День(НаДату) + ",%");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Результат = Выборка.Пользователь;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции 

// Установка ответственного в документе при включенной константе _ИспользоватьАвтоподстановкуОтветственных
//---> MSK/Fedorchuk.V 25.08.2020 SUP77-595700
// Переделаем на функцию для понимания установлен Ответственный или нет
//Процедура УстановитьОтветственного(ДокОбъект) Экспорт
Функция УстановитьОтветственного(ДокОбъект) Экспорт
	
	Результат = Ложь;
	//<--- MSK/Fedorchuk.V 25.08.2020 SUP77-595700

	УстановитьПривилегированныйРежим(Истина);
	//---> MSK/Fedorchuk.V 10.08.2020 SUP77-595700
	// Исправление ошибки
	//Если Константы._ИспользоватьАвтоподстановкуОтветственных Тогда
	Если Константы._ИспользоватьАвтоподстановкуОтветственных.Получить() Тогда
	//<--- MSK/Fedorchuk.V 10.08.2020 SUP77-595700
		
		//---> MSK/Osipov.A 18.10.2021 Задача SUP77-602205
		МассивЗапрещенныхСтатусов = ОбщегоНазначенияУВСВызовСервера.МассивСтатусовСЗапретомРедактированияФормы();
		ТекущийСтатус = РегистрыСведений.ЖурналРегистрацииСостоянийЗаявокНаОформлениеОпераций.ТекущийСтатусДокумента(ДокОбъект.Ссылка);
		Если МассивЗапрещенныхСтатусов.Найти(ТекущийСтатус) = Неопределено Тогда
		
			Ответственный = _ИнтеграцияОперучетМеркурийПовтИсп.ОтветственныйПоОрганизацииНаДату(ДокОбъект.Организация, ДокОбъект.Дата);
			
			Если ЗначениеЗаполнено(Ответственный) Тогда
				ДокОбъект.ДополнительныеСвойства.Вставить("Ответственный", Ответственный);
				//---> MSK/Fedorchuk.V 25.08.2020 SUP77-595700
				Результат = Истина;
				//<--- MSK/Fedorchuk.V 25.08.2020 SUP77-595700
			КонецЕсли;
			
		КонецЕсли;
		//<--- MSK/Osipov.A 18.10.2021 Задача SUP77-602205
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	//---> MSK/Fedorchuk.V 25.08.2020 SUP77-595700
	Возврат Результат;
	
//КонецПроцедуры
КонецФункции //---> MSK/Fedorchuk.V 25.08.2020 SUP77-595700
//<--- MSK/Fedorchuk.V 07.08.2020 SUP77-595700

//---> MSK/Osipov.A 02.11.2021 Задача SUP77-602408
Процедура ПодготовитьВременныеТаблицыПартийКРасходу(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущаяДата", НачалоДня(ТекущаяДата()));
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПартииТоваровКРасходу.Организация КАК Организация,
	|	ПартииТоваровКРасходу.Предприятие КАК Предприятие,
	|	ПартииТоваровКРасходу.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
	|	ПартииТоваровКРасходу.Количество КАК Количество
	|ПОМЕСТИТЬ втПартииТоваровКРасходуУстановлено
	|ИЗ
	|	РегистрСведений._ПартииТоваровКРасходу КАК ПартииТоваровКРасходу
	|ГДЕ
	|	ПартииТоваровКРасходу.ДатаРасхода = &ТекущаяДата
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Предприятие,
	|	ЗаписьСкладскогоЖурнала
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таб.Организация КАК Организация,
	|	Таб.Предприятие КАК Предприятие,
	|	Таб.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
	|	СУММА(Таб.Количество) КАК КоличествоЕдиницМеркурий
	|ПОМЕСТИТЬ втОстаткиПартийКРасходу
	|ИЗ
	|	(ВЫБРАТЬ
	|		Обороты.Организация КАК Организация,
	|		Обороты.Предприятие КАК Предприятие,
	|		Обороты.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
	|		- Обороты.КоличествоРасход КАК Количество
	|	ИЗ
	|		втПартииТоваровКРасходуУстановлено КАК втПартииТоваровКРасходуУстановлено
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ДвижениеПродукции.Обороты(&ТекущаяДата, КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ), , ) КАК Обороты
	|			ПО втПартииТоваровКРасходуУстановлено.Организация = Обороты.Организация
	|				И втПартииТоваровКРасходуУстановлено.Предприятие = Обороты.Предприятие
	|				И втПартииТоваровКРасходуУстановлено.ЗаписьСкладскогоЖурнала = Обороты.ЗаписьСкладскогоЖурнала
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		втПартииТоваровКРасходуУстановлено.Организация,
	|		втПартииТоваровКРасходуУстановлено.Предприятие,
	|		втПартииТоваровКРасходуУстановлено.ЗаписьСкладскогоЖурнала,
	|		втПартииТоваровКРасходуУстановлено.Количество
	|	ИЗ
	|		втПартииТоваровКРасходуУстановлено КАК втПартииТоваровКРасходуУстановлено) КАК Таб
	|
	|СГРУППИРОВАТЬ ПО
	|	Таб.Организация,
	|	Таб.Предприятие,
	|	Таб.ЗаписьСкладскогоЖурнала";
	Запрос.ВыполнитьПакет();
	
КонецПроцедуры //<--- MSK/Osipov.A 02.11.2021 Задача SUP77-602408

#КонецОбласти

#КонецОбласти
